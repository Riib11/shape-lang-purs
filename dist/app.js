// Generated by purs bundle 0.14.5
var PS = {};
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                  
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorArray = {
      map: $foreign.arrayMap
  };
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var apply = function (dict) {
      return dict.apply;
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["apply"] = apply;
  exports["lift2"] = lift2;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                  
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 66, column 1 - line 66, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var semigroupoidFn = {
      compose: function (f) {
          return function (g) {
              return function (x) {
                  return f(g(x));
              };
          };
      }
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = {
      identity: function (x) {
          return x;
      },
      Semigroupoid0: function () {
          return Control_Semigroupoid.semigroupoidFn;
      }
  };
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];          
  var discard = function (dict) {
      return dict.discard;
  };
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var discardUnit = {
      discard: function (dictBind) {
          return bind(dictBind);
      }
  };
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad = $PS["Control.Monad"];                  
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                            
  exports.eqIntImpl = refEq;   
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var eqUnit = {
      eq: function (v) {
          return function (v1) {
              return true;
          };
      }
  };
  var eqString = {
      eq: $foreign.eqStringImpl
  };
  var eqInt = {
      eq: $foreign.eqIntImpl
  };
  var eqChar = {
      eq: $foreign.eqCharImpl
  };
  var eq1 = function (dict) {
      return dict.eq1;
  };
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return {
          eq: $foreign.eqArrayImpl(eq(dictEq))
      };
  };
  exports["eq"] = eq;
  exports["eq1"] = eq1;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqArray"] = eqArray;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var ordString = {
      compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqString;
      }
  };
  var ordInt = {
      compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqInt;
      }
  };
  var ordChar = {
      compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqChar;
      }
  };
  var compare = function (dict) {
      return dict.compare;
  };
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  exports.cons = function (head) {
    return function (tail) {
      return [head].concat(tail);
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["reflectSymbol"] = reflectSymbol;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };

  exports.unsafeDelete = function (label) {
    return function (rec) {
      var copy = {};
      for (var key in rec) {
        if (key !== label && {}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }
      return copy;
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
  exports["unsafeDelete"] = $foreign.unsafeDelete;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var showString = {
      show: $foreign.showStringImpl
  };
  var showRecordFieldsNil = {
      showRecordFields: function (v) {
          return function (v1) {
              return [  ];
          };
      }
  };
  var showRecordFields = function (dict) {
      return dict.showRecordFields;
  };
  var showRecord = function (dictRowToList) {
      return function (dictShowRecordFields) {
          return {
              show: function (record) {
                  var v = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                  if (v.length === 0) {
                      return "{}";
                  };
                  return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
              }
          };
      };
  };
  var showInt = {
      show: $foreign.showIntImpl
  };
  var showBoolean = {
      show: function (v) {
          if (v) {
              return "true";
          };
          if (!v) {
              return "false";
          };
          throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [ v.constructor.name ]);
      }
  };
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return {
          show: $foreign.showArrayImpl(show(dictShow))
      };
  };
  var showRecordFieldsCons = function (dictIsSymbol) {
      return function (dictShowRecordFields) {
          return function (dictShow) {
              return {
                  showRecordFields: function (v) {
                      return function (record) {
                          var tail = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                          var focus = Record_Unsafe.unsafeGet(key)(record);
                          return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                      };
                  }
              };
          };
      };
  };
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
  exports["showRecord"] = showRecord;
  exports["showRecordFieldsNil"] = showRecordFieldsNil;
  exports["showRecordFieldsCons"] = showRecordFieldsCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];                
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (dictShow) {
      return {
          show: function (v) {
              if (v instanceof Just) {
                  return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
              };
              if (v instanceof Nothing) {
                  return "Nothing";
              };
              throw new Error("Failed pattern match at Data.Maybe (line 216, column 1 - line 218, column 28): " + [ v.constructor.name ]);
          }
      };
  };
  var maybe$prime = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v(Data_Unit.unit);
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 243, column 1 - line 243, column 62): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Just) {
                  return new Just(v(v1.value0));
              };
              return Nothing.value;
          };
      }
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [ v.constructor.name ]);
      };
  };
  var eqMaybe = function (dictEq) {
      return {
          eq: function (x) {
              return function (y) {
                  if (x instanceof Nothing && y instanceof Nothing) {
                      return true;
                  };
                  if (x instanceof Just && y instanceof Just) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                  };
                  return false;
              };
          }
      };
  };
  var ordMaybe = function (dictOrd) {
      return {
          compare: function (x) {
              return function (y) {
                  if (x instanceof Nothing && y instanceof Nothing) {
                      return Data_Ordering.EQ.value;
                  };
                  if (x instanceof Nothing) {
                      return Data_Ordering.LT.value;
                  };
                  if (y instanceof Nothing) {
                      return Data_Ordering.GT.value;
                  };
                  if (x instanceof Just && y instanceof Just) {
                      return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                  };
                  throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 51): " + [ x.constructor.name, y.constructor.name ]);
              };
          },
          Eq0: function () {
              return eqMaybe(dictOrd.Eq0());
          }
      };
  };
  var applyMaybe = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Just) {
                  return Data_Functor.map(functorMaybe)(v.value0)(v1);
              };
              if (v instanceof Nothing) {
                  return Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var bindMaybe = {
      bind: function (v) {
          return function (v1) {
              if (v instanceof Just) {
                  return v1(v.value0);
              };
              if (v instanceof Nothing) {
                  return Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Apply0: function () {
          return applyMaybe;
      }
  };
  var applicativeMaybe = {
      pure: Just.create,
      Apply0: function () {
          return applyMaybe;
      }
  };
  var monadMaybe = {
      Applicative0: function () {
          return applicativeMaybe;
      },
      Bind1: function () {
          return bindMaybe;
      }
  };
  var altMaybe = {
      alt: function (v) {
          return function (v1) {
              if (v instanceof Nothing) {
                  return v1;
              };
              return v;
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var plusMaybe = {
      empty: Nothing.value,
      Alt0: function () {
          return altMaybe;
      }
  };
  var alternativeMaybe = {
      Applicative0: function () {
          return applicativeMaybe;
      },
      Plus1: function () {
          return plusMaybe;
      }
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["maybe'"] = maybe$prime;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["ordMaybe"] = ordMaybe;
  exports["showMaybe"] = showMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var semigroupString = {
      append: $foreign.concatString
  };
  var semigroupArray = {
      append: $foreign.concatArray
  };
  var append = function (dict) {
      return dict.append;
  };
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var monoidString = {
      mempty: "",
      Semigroup0: function () {
          return Data_Semigroup.semigroupString;
      }
  };
  var monoidArray = {
      mempty: [  ],
      Semigroup0: function () {
          return Data_Semigroup.semigroupArray;
      }
  };
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS);
(function(exports) {
  "use strict";

  // Alias require to prevent webpack or browserify from actually requiring.
  var req = typeof module === "undefined" ? undefined : module.require;
  var util = (function() {
    try {
      return req === undefined ? undefined : req("util");
    } catch(e) {
      return undefined;
    }
  })();

  exports._trace = function (x, k) {
    // node only recurses two levels into an object before printing
    // "[object]" for further objects when using console.log()
    if (util !== undefined) {
      console.log(util.inspect(x, { depth: null, colors: true }));
    } else {
      console.log(x);
    }
    return k({});
  };
})(PS["Debug"] = PS["Debug"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Debug"] = $PS["Debug"] || {};
  var exports = $PS["Debug"];
  var $foreign = $PS["Debug"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Unit = $PS["Data.Unit"];
  var trace = function (dictDebugWarning) {
      return function (a) {
          return function (k) {
              return $foreign["_trace"](a, k);
          };
      };
  };
  var traceM = function (dictDebugWarning) {
      return function (dictMonad) {
          return function (s) {
              return Control_Bind.discard(Control_Bind.discardUnit)(dictMonad.Bind1())(Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit))(function () {
                  return trace()(s)(function (v) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
                  });
              });
          };
      };
  };
  exports["trace"] = trace;
  exports["traceM"] = traceM;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function(exports) {
  "use strict"

  exports.eventKey = (event) => event.key
  exports.shiftKey = (event) => event.shiftKey
  exports.metaKey = (event) => event.metaKey
  exports.ctrlKey = (event) => event.ctrlKey
  exports.altKey = (event) => event.altKey
})(PS["Language.Shape.Stlc.Event.KeyboardEvent"] = PS["Language.Shape.Stlc.Event.KeyboardEvent"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];
  var empty = function (dict) {
      return dict.empty;
  };
  exports["empty"] = empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Unit = $PS["Data.Unit"];                
  var guard = function (dictAlternative) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty(dictAlternative.Plus1());
          };
          throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [ v.constructor.name ]);
      };
  };
  exports["guard"] = guard;
})(PS);
(function(exports) {
  "use strict";

  var replicateFill = function (count) {
    return function (value) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value);
    };
  };

  var replicatePolyfill = function (count) {
    return function (value) {
      var result = [];
      var n = 0;
      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }
      return result;
    };
  };

  // In browsers that have Array.prototype.fill we use it, as it's faster.
  exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unconsImpl = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = {
      ff: false,
      tt: true,
      implies: function (a) {
          return function (b) {
              return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
          };
      },
      conj: $foreign.boolConj,
      disj: $foreign.boolDisj,
      not: $foreign.boolNot
  };
  var conj = function (dict) {
      return dict.conj;
  };
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Maybe.First"] = $PS["Data.Maybe.First"] || {};
  var exports = $PS["Data.Maybe.First"];
  var Data_Maybe = $PS["Data.Maybe"];
  var semigroupFirst = {
      append: function (v) {
          return function (v1) {
              if (v instanceof Data_Maybe.Just) {
                  return v;
              };
              return v1;
          };
      }
  };
  var monoidFirst = {
      mempty: Data_Maybe.Nothing.value,
      Semigroup0: function () {
          return semigroupFirst;
      }
  };
  exports["monoidFirst"] = monoidFirst;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Monoid.Conj"] = $PS["Data.Monoid.Conj"] || {};
  var exports = $PS["Data.Monoid.Conj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
              };
          }
      };
  };
  var monoidConj = function (dictHeytingAlgebra) {
      return {
          mempty: Data_HeytingAlgebra.tt(dictHeytingAlgebra),
          Semigroup0: function () {
              return semigroupConj(dictHeytingAlgebra);
          }
      };
  };
  exports["Conj"] = Conj;
  exports["monoidConj"] = monoidConj;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
              };
          }
      };
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return {
          mempty: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
          Semigroup0: function () {
              return semigroupDisj(dictHeytingAlgebra);
          }
      };
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Safe.Coerce"] = $PS["Safe.Coerce"] || {};
  var exports = $PS["Safe.Coerce"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var coerce = function (dictCoercible) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["coerce"] = coerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Safe_Coerce = $PS["Safe.Coerce"];                
  var wrap = function (dictNewtype) {
      return Safe_Coerce.coerce();
  };
  var unwrap = function (dictNewtype) {
      return Safe_Coerce.coerce();
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return Safe_Coerce.coerce();
          };
      };
  };
  var alaF = function (dictCoercible) {
      return function (dictCoercible1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return Safe_Coerce.coerce();
                  };
              };
          };
      };
  };
  exports["wrap"] = wrap;
  exports["unwrap"] = unwrap;
  exports["alaF"] = alaF;
  exports["over"] = over;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = {
      foldr: $foreign.foldrArray,
      foldl: $foreign.foldlArray,
      foldMap: function (dictMonoid) {
          return foldMapDefaultR(foldableArray)(dictMonoid);
      }
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var lookup = function (dictFoldable) {
      return function (dictEq) {
          return function (a) {
              var $323 = Data_Newtype.unwrap();
              var $324 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                  var $305 = Data_Eq.eq(dictEq)(a)(v.value0);
                  if ($305) {
                      return new Data_Maybe.Just(v.value1);
                  };
                  return Data_Maybe.Nothing.value;
              });
              return function ($325) {
                  return $323($324($325));
              };
          };
      };
  };
  var foldM = function (dictFoldable) {
      return function (dictMonad) {
          return function (f) {
              return function (b0) {
                  return foldl(dictFoldable)(function (b) {
                      return function (a) {
                          return Control_Bind.bind(dictMonad.Bind1())(b)(Data_Function.flip(f)(a));
                      };
                  })(Control_Applicative.pure(dictMonad.Applicative0())(b0));
              };
          };
      };
  };
  var find = function (dictFoldable) {
      return function (p) {
          var go = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing && p(v1)) {
                      return new Data_Maybe.Just(v1);
                  };
                  return v;
              };
          };
          return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $326 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $327 = Data_Eq.eq(dictEq);
          return function ($328) {
              return $326($327($328));
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF()()()()(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  var and = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldM"] = foldM;
  exports["intercalate"] = intercalate;
  exports["and"] = and;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["find"] = find;
  exports["lookup"] = lookup;
  exports["foldableArray"] = foldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var uncons = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var singleton = function (a) {
      return [ a ];
  };
  var intercalate = function (dictMonoid) {
      return Data_Foldable.intercalate(Data_Foldable.foldableArray)(dictMonoid);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
  var foldl = Data_Foldable.foldl(Data_Foldable.foldableArray);
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var elemIndex = function (dictEq) {
      return function (x) {
          return findIndex(function (v) {
              return Data_Eq.eq(dictEq)(v)(x);
          });
      };
  };
  var elem = function (dictEq) {
      return function (a) {
          return function (arr) {
              return Data_Maybe.isJust(elemIndex(dictEq)(a)(arr));
          };
      };
  };
  var cons = function (x) {
      return function (xs) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ x ])(xs);
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["cons"] = cons;
  exports["uncons"] = uncons;
  exports["elem"] = elem;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["intercalate"] = intercalate;
  exports["replicate"] = $foreign.replicate;
  exports["length"] = $foreign.length;
  exports["reverse"] = $foreign.reverse;
  exports["concat"] = $foreign.concat;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];
  var top = function (dict) {
      return dict.top;
  };
  var boundedInt = {
      top: $foreign.topInt,
      bottom: $foreign.bottomInt,
      Ord0: function () {
          return Data_Ord.ordInt;
      }
  };
  var boundedChar = {
      top: $foreign.topChar,
      bottom: $foreign.bottomChar,
      Ord0: function () {
          return Data_Ord.ordChar;
      }
  };
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Cardinality = function (x) {
      return x;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $55 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($55) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = {
      succ: defaultSucc(charToEnum)($foreign.toCharCode),
      pred: defaultPred(charToEnum)($foreign.toCharCode),
      Ord0: function () {
          return Data_Ord.ordChar;
      }
  };
  var boundedEnumChar = {
      cardinality: $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0,
      toEnum: charToEnum,
      fromEnum: $foreign.toCharCode,
      Bounded0: function () {
          return Data_Bounded.boundedChar;
      },
      Enum1: function () {
          return enumChar;
      }
  };
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["Cardinality"] = Cardinality;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var semiringInt = {
      add: $foreign.intAdd,
      zero: 0,
      mul: $foreign.intMul,
      one: 1
  };
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var ringInt = {
      sub: $foreign.intSub,
      Semiring0: function () {
          return Data_Semiring.semiringInt;
      }
  };
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var commutativeRingInt = {
      Ring0: function () {
          return Data_Ring.ringInt;
      }
  };
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var mod = function (dict) {
      return dict.mod;
  };
  var euclideanRingInt = {
      degree: $foreign.intDegree,
      div: $foreign.intDiv,
      mod: $foreign.intMod,
      CommutativeRing0: function () {
          return Data_CommutativeRing.commutativeRingInt;
      }
  };
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Show = $PS["Data.Show"];                
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };
  var showTuple = function (dictShow) {
      return function (dictShow1) {
          return {
              show: function (v) {
                  return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
              }
          };
      };
  };
  var fst = function (v) {
      return v.value0;
  };
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return {
              eq: function (x) {
                  return function (y) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
                  };
              }
          };
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["showTuple"] = showTuple;
  exports["eqTuple"] = eqTuple;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var unfoldable1Array = {
      unfoldr1: $foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd)
  };
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = {
      unfoldr: $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd),
      Unfoldable10: function () {
          return Data_Unfoldable1.unfoldable1Array;
      }
  };
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  };
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["length"] = length;
  exports["take"] = take;
})(PS);
(function(exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["split"] = $foreign.split;
  exports["toLower"] = $foreign.toLower;
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Key"] = $PS["Language.Shape.Stlc.Key"] || {};
  var exports = $PS["Language.Shape.Stlc.Key"];
  var Data_Show = $PS["Data.Show"];
  var showKey = Data_Show.showString;
  var keys = {
      dig: [ "d" ],
      lambda: [ "l" ],
      unlambda: [ "Shift l" ],
      inlambda: [ "Meta l" ],
      eta: [ "n" ],
      uneta: [ "Shift n" ],
      inmatch: [ "Meta m" ],
      let_: [ "a" ],
      unlet: [ "Shift a" ],
      data_: [ "t" ],
      undata: [ "Shift t" ],
      buf: [ "b" ],
      unbuf: [ "Shift b" ],
      swap: [ "s" ],
      cursorForwards: [ "ArrowRight" ],
      cursorBackwards: [ "ArrowLeft" ],
      "delete": [ "Backspace" ],
      indent: [ "Tab" ],
      copy: [ "Ctrl c" ],
      paste: [ "Ctrl v" ],
      undo: [ "Ctrl z" ]
  };
  exports["keys"] = keys;
  exports["showKey"] = showKey;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Types"] = $PS["Language.Shape.Stlc.Types"] || {};
  var exports = $PS["Language.Shape.Stlc.Types"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Show = $PS["Data.Show"];
  var Language_Shape_Stlc_Key = $PS["Language.Shape.Stlc.Key"];                
  var ActionTrigger_Drop = (function () {
      function ActionTrigger_Drop() {

      };
      ActionTrigger_Drop.value = new ActionTrigger_Drop();
      return ActionTrigger_Drop;
  })();
  var ActionTrigger_Drag = (function () {
      function ActionTrigger_Drag() {

      };
      ActionTrigger_Drag.value = new ActionTrigger_Drag();
      return ActionTrigger_Drag;
  })();
  var ActionTrigger_Hover = (function () {
      function ActionTrigger_Hover() {

      };
      ActionTrigger_Hover.value = new ActionTrigger_Hover();
      return ActionTrigger_Hover;
  })();
  var ActionTrigger_Paste = (function () {
      function ActionTrigger_Paste() {

      };
      ActionTrigger_Paste.value = new ActionTrigger_Paste();
      return ActionTrigger_Paste;
  })();
  var ActionTrigger_Click = (function () {
      function ActionTrigger_Click() {

      };
      ActionTrigger_Click.value = new ActionTrigger_Click();
      return ActionTrigger_Click;
  })();
  var ActionTrigger_Keypress = (function () {
      function ActionTrigger_Keypress(value0) {
          this.value0 = value0;
      };
      ActionTrigger_Keypress.create = function (value0) {
          return new ActionTrigger_Keypress(value0);
      };
      return ActionTrigger_Keypress;
  })();
  var ActionTrigger_Keytype = (function () {
      function ActionTrigger_Keytype() {

      };
      ActionTrigger_Keytype.value = new ActionTrigger_Keytype();
      return ActionTrigger_Keytype;
  })();
  var toHistoryItem = function (st) {
      return function (change) {
          return {
              term: st.term,
              type_: st.type_,
              mb_ix: st.mb_ix,
              change: change
          };
      };
  };
  var showActionTrigger = {
      show: function (v) {
          if (v instanceof ActionTrigger_Drop) {
              return "drop";
          };
          if (v instanceof ActionTrigger_Drag) {
              return "drag";
          };
          if (v instanceof ActionTrigger_Hover) {
              return "hover";
          };
          if (v instanceof ActionTrigger_Paste) {
              return "paste";
          };
          if (v instanceof ActionTrigger_Click) {
              return "click";
          };
          if (v instanceof ActionTrigger_Keypress) {
              return "keys[" + (Data_Array.intercalate(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Language_Shape_Stlc_Key.showKey))(v.value0)) + "]");
          };
          if (v instanceof ActionTrigger_Keytype) {
              return "keytype";
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Types (line 82, column 1 - line 89, column 41): " + [ v.constructor.name ]);
      }
  };
  var showAction = {
      show: function (v) {
          return (function () {
              if (v.label instanceof Data_Maybe.Just) {
                  return v.label.value0 + ": ";
              };
              if (v.label instanceof Data_Maybe.Nothing) {
                  return "";
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Types (line 93, column 7 - line 95, column 22): " + [ v.label.constructor.name ]);
          })() + Data_Array.intercalate(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(showActionTrigger))(v.triggers));
      }
  };
  exports["toHistoryItem"] = toHistoryItem;
  exports["ActionTrigger_Click"] = ActionTrigger_Click;
  exports["ActionTrigger_Keypress"] = ActionTrigger_Keypress;
  exports["ActionTrigger_Keytype"] = ActionTrigger_Keytype;
  exports["showAction"] = showAction;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports._unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports._crashWith = function (msg) {
    throw new Error(msg);
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];         
  var crashWith = function (dictPartial) {
      return $foreign["_crashWith"];
  };
  exports["crashWith"] = crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];                
  var unsafePartial = $foreign["_unsafePartial"];
  var unsafeCrashWith = function (msg) {
      return unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Event.KeyboardEvent"] = $PS["Language.Shape.Stlc.Event.KeyboardEvent"] || {};
  var exports = $PS["Language.Shape.Stlc.Event.KeyboardEvent"];
  var $foreign = $PS["Language.Shape.Stlc.Event.KeyboardEvent"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Debug = $PS["Debug"];
  var Language_Shape_Stlc_Types = $PS["Language.Shape.Stlc.Types"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];                
  var matchKey = function (event) {
      return function (v) {
          var shift = $foreign.shiftKey(event);
          var meta = $foreign.metaKey(event);
          var key = $foreign.eventKey(event);
          var ctrl = $foreign.ctrlKey(event);
          var alt = $foreign.altKey(event);
          var modVal = function (v1) {
              if (v1 === "Shift") {
                  return shift;
              };
              if (v1 === "Meta") {
                  return meta;
              };
              if (v1 === "Ctrl") {
                  return ctrl;
              };
              if (v1 === "Alt") {
                  return alt;
              };
              return Partial_Unsafe.unsafeCrashWith("Unrecognized key modifier: " + Data_Show.show(Data_Show.showString)(v1));
          };
          var checkMods = function (mods) {
              return function (opts) {
                  return Data_Array.foldr(function (mod) {
                      return function (b) {
                          return (function () {
                              var $9 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(mod)(opts);
                              if ($9) {
                                  return modVal(mod);
                              };
                              return !modVal(mod);
                          })() && b;
                      };
                  })(true)(mods);
              };
          };
          var v1 = Data_Array.uncons(Data_Array.reverse(Data_String_Common.split(" ")(v)));
          if (v1 instanceof Data_Maybe.Nothing) {
              return false;
          };
          if (v1 instanceof Data_Maybe.Just) {
              return Data_String_Common.toLower(v1.value0.head) === Data_String_Common.toLower(key) && checkMods([ "Shift", "Meta", "Ctrl", "Alt" ])(v1.value0.tail);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Event.KeyboardEvent (line 41, column 28 - line 43, column 126): " + [ v1.constructor.name ]);
      };
  };
  var matchOneOfKeys = function (event) {
      return function (keys) {
          return Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(matchKey(event))(keys);
      };
  };
  var handleKeytype_String = function (event) {
      return function (str) {
          var go = function (key) {
              if (key === "Backspace" && $foreign.altKey(event)) {
                  return new Data_Maybe.Just("");
              };
              if (key === "Backspace") {
                  return Data_Maybe.Just.create(Data_String_CodePoints.take(Data_String_CodePoints.length(str) - 1 | 0)(str));
              };
              if (key === "Space") {
                  return Data_Maybe.Just.create(str + " ");
              };
              if (Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(key)([ "Shift", "Meta", "Control", "Alt", "Tab", "ArrowLeft", "ArrowRight" ])) {
                  return Data_Maybe.Nothing.value;
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Just.create(str + key);
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Event.KeyboardEvent (line 114, column 3 - line 120, column 36): " + [ key.constructor.name ]);
          };
          return go($foreign.eventKey(event));
      };
  };
  var handleKeytype_Name = function (event) {
      return function (v) {
          var str0 = Data_Maybe.maybe("")(Control_Category.identity(Control_Category.categoryFn))(v);
          var mb_str1 = handleKeytype_String(event)(str0);
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (str1) {
              var $17 = str1 === "";
              if ($17) {
                  return Data_Maybe.Nothing.value;
              };
              return new Data_Maybe.Just(str1);
          })(mb_str1);
      };
  };
  var handleKey = function (renEnv) {
      return function (event) {
          return Debug.trace()("handleKey.event:")(function (v) {
              return Debug.trace()(event)(function (v1) {
                  return Data_Array.foldr(function (action) {
                      return Data_Maybe.maybe(Data_Array.foldr(function (trigger) {
                          if (trigger instanceof Language_Shape_Stlc_Types.ActionTrigger_Keytype) {
                              return Data_Function["const"](new Data_Maybe.Just(new Data_Tuple.Tuple(Language_Shape_Stlc_Types.ActionTrigger_Keytype.value, action)));
                          };
                          if (trigger instanceof Language_Shape_Stlc_Types.ActionTrigger_Keypress) {
                              return Data_Maybe.maybe(Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(matchOneOfKeys(event)(trigger.value0)))(function () {
                                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(trigger, action));
                              }))(Control_Applicative.pure(Data_Maybe.applicativeMaybe));
                          };
                          return Control_Category.identity(Control_Category.categoryFn);
                      })(Data_Maybe.Nothing.value)((Data_Newtype.unwrap()(action)).triggers))(Control_Applicative.pure(Data_Maybe.applicativeMaybe));
                  })(Data_Maybe.Nothing.value)(renEnv.actions);
              });
          });
      };
  };
  exports["handleKey"] = handleKey;
  exports["handleKeytype_Name"] = handleKeytype_Name;
  exports["eventKey"] = $foreign.eventKey;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Default"] = $PS["Data.Default"] || {};
  var exports = $PS["Data.Default"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var defaultMaybe = {
      "default": Data_Maybe.Nothing.value
  };
  var $$default = function (dict) {
      return dict["default"];
  };
  exports["default"] = $$default;
  exports["defaultMaybe"] = defaultMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {};
  var exports = $PS["Data.FunctorWithIndex"];      
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  };
  exports["mapWithIndex"] = mapWithIndex;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];     
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldlWithIndex = function (dict) {
      return dict.foldlWithIndex;
  };
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldlWithIndex"] = foldlWithIndex;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = (function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  })();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];            
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = {
      traverse: function (dictApplicative) {
          return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
      },
      sequence: function (dictApplicative) {
          return sequenceDefault(traversableArray)(dictApplicative);
      },
      Functor0: function () {
          return Data_Functor.functorArray;
      },
      Foldable1: function () {
          return Data_Foldable.foldableArray;
      }
  };
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["traversableArray"] = traversableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done1 = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done1 = true;
                              return acc;
                          };
                          while (!$tco_done1) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = {
      map: listMap
  };                                                                   
  var foldableList = {
      foldr: function (f) {
          return function (b) {
              var rev = (function () {
                  var go = function ($copy_acc) {
                      return function ($copy_v) {
                          var $tco_var_acc = $copy_acc;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(acc, v) {
                              if (v instanceof Nil) {
                                  $tco_done = true;
                                  return acc;
                              };
                              if (v instanceof Cons) {
                                  $tco_var_acc = new Cons(v.value0, acc);
                                  $copy_v = v.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [ acc.constructor.name, v.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_acc, $copy_v);
                          };
                          return $tco_result;
                      };
                  };
                  return go(Nil.value);
              })();
              var $205 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
              return function ($206) {
                  return $205(rev($206));
              };
          };
      },
      foldl: function (f) {
          var go = function ($copy_b) {
              return function ($copy_v) {
                  var $tco_var_b = $copy_b;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(b, v) {
                      if (v instanceof Nil) {
                          $tco_done1 = true;
                          return b;
                      };
                      if (v instanceof Cons) {
                          $tco_var_b = f(b)(v.value0);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_b, $copy_v);
                  };
                  return $tco_result;
              };
          };
          return go;
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return Data_Foldable.foldl(foldableList)(function (acc) {
                  var $207 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
                  return function ($208) {
                      return $207(f($208));
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      }
  };                                                                      
  var foldableWithIndexList = {
      foldrWithIndex: function (f) {
          return function (b) {
              return function (xs) {
                  var v = (function () {
                      var rev = Data_Foldable.foldl(foldableList)(function (v1) {
                          return function (a) {
                              return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
                          };
                      });
                      return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
                  })();
                  return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
                      return function (a) {
                          return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                      };
                  })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
              };
          };
      },
      foldlWithIndex: function (f) {
          return function (acc) {
              var $209 = Data_Foldable.foldl(foldableList)(function (v) {
                  return function (a) {
                      return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                  };
              })(new Data_Tuple.Tuple(0, acc));
              return function ($210) {
                  return Data_Tuple.snd($209($210));
              };
          };
      },
      foldMapWithIndex: function (dictMonoid) {
          return function (f) {
              return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
                  return function (acc) {
                      var $211 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
                      var $212 = f(i);
                      return function ($213) {
                          return $211($212($213));
                      };
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      },
      Foldable0: function () {
          return foldableList;
      }
  };
  var functorWithIndexList = {
      mapWithIndex: function (f) {
          return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
              return function (x) {
                  return function (acc) {
                      return new Cons(f(i)(x), acc);
                  };
              };
          })(Nil.value);
      },
      Functor0: function () {
          return functorList;
      }
  };
  var semigroupList = {
      append: function (xs) {
          return function (ys) {
              return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
          };
      }
  };
  var monoidList = {
      mempty: Nil.value,
      Semigroup0: function () {
          return semigroupList;
      }
  };
  var showList = function (dictShow) {
      return {
          show: function (v) {
              if (v instanceof Nil) {
                  return "Nil";
              };
              return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
          }
      };
  };
  var traversableList = {
      traverse: function (dictApplicative) {
          return function (f) {
              var $222 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
              var $223 = Data_Foldable.foldl(foldableList)(function (acc) {
                  var $225 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
                  return function ($226) {
                      return $225(f($226));
                  };
              })(Control_Applicative.pure(dictApplicative)(Nil.value));
              return function ($224) {
                  return $222($223($224));
              };
          };
      },
      sequence: function (dictApplicative) {
          return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      },
      Functor0: function () {
          return functorList;
      },
      Foldable1: function () {
          return foldableList;
      }
  };
  var unfoldable1List = {
      unfoldr1: function (f) {
          return function (b) {
              var go = function ($copy_source) {
                  return function ($copy_memo) {
                      var $tco_var_source = $copy_source;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(source, memo) {
                          var v = f(source);
                          if (v.value1 instanceof Data_Maybe.Just) {
                              $tco_var_source = v.value1.value0;
                              $copy_memo = new Cons(v.value0, memo);
                              return;
                          };
                          if (v.value1 instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                          };
                          throw new Error("Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_source, $copy_memo);
                      };
                      return $tco_result;
                  };
              };
              return go(b)(Nil.value);
          };
      }
  };
  var unfoldableList = {
      unfoldr: function (f) {
          return function (b) {
              var go = function ($copy_source) {
                  return function ($copy_memo) {
                      var $tco_var_source = $copy_source;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(source, memo) {
                          var v = f(source);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_source = v.value0.value1;
                              $copy_memo = new Cons(v.value0.value0, memo);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_source, $copy_memo);
                      };
                      return $tco_result;
                  };
              };
              return go(b)(Nil.value);
          };
      },
      Unfoldable10: function () {
          return unfoldable1List;
      }
  };
  var eq1List = {
      eq1: function (dictEq) {
          return function (xs) {
              return function (ys) {
                  var go = function ($copy_v) {
                      return function ($copy_v1) {
                          return function ($copy_v2) {
                              var $tco_var_v = $copy_v;
                              var $tco_var_v1 = $copy_v1;
                              var $tco_done = false;
                              var $tco_result;
                              function $tco_loop(v, v1, v2) {
                                  if (!v2) {
                                      $tco_done = true;
                                      return false;
                                  };
                                  if (v instanceof Nil && v1 instanceof Nil) {
                                      $tco_done = true;
                                      return v2;
                                  };
                                  if (v instanceof Cons && v1 instanceof Cons) {
                                      $tco_var_v = v.value1;
                                      $tco_var_v1 = v1.value1;
                                      $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                      return;
                                  };
                                  $tco_done = true;
                                  return false;
                              };
                              while (!$tco_done) {
                                  $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                              };
                              return $tco_result;
                          };
                      };
                  };
                  return go(xs)(ys)(true);
              };
          };
      }
  };                                                       
  var eqList = function (dictEq) {
      return {
          eq: Data_Eq.eq1(eq1List)(dictEq)
      };
  };
  var applyList = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Nil) {
                  return Nil.value;
              };
              if (v instanceof Cons) {
                  return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
              };
              throw new Error("Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorList;
      }
  };
  var applicativeList = {
      pure: function (a) {
          return new Cons(a, Nil.value);
      },
      Apply0: function () {
          return applyList;
      }
  };
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["showList"] = showList;
  exports["eqList"] = eqList;
  exports["semigroupList"] = semigroupList;
  exports["monoidList"] = monoidList;
  exports["functorList"] = functorList;
  exports["functorWithIndexList"] = functorWithIndexList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["traversableList"] = traversableList;
  exports["applicativeList"] = applicativeList;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                  
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List (line 263, column 1 - line 263, column 66): " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List (line 249, column 1 - line 249, column 43): " + [ v.constructor.name ]);
  };
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var zipWith = function (f) {
      return function (xs) {
          return function (ys) {
              var go = function ($copy_v) {
                  return function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, v1, acc) {
                              if (v instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return acc;
                              };
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return acc;
                              };
                              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v.value1;
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.List (line 795, column 3 - line 795, column 21): " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
              };
              return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
          };
      };
  };
  var zip = zipWith(Data_Tuple.Tuple.create);
  var range = function (start) {
      return function (end) {
          if (start === end) {
              return singleton(start);
          };
          if (Data_Boolean.otherwise) {
              var go = function ($copy_s) {
                  return function ($copy_e) {
                      return function ($copy_step) {
                          return function ($copy_rest) {
                              var $tco_var_s = $copy_s;
                              var $tco_var_e = $copy_e;
                              var $tco_var_step = $copy_step;
                              var $tco_done = false;
                              var $tco_result;
                              function $tco_loop(s, e, step, rest) {
                                  if (s === e) {
                                      $tco_done = true;
                                      return new Data_List_Types.Cons(s, rest);
                                  };
                                  if (Data_Boolean.otherwise) {
                                      $tco_var_s = s + step | 0;
                                      $tco_var_e = e;
                                      $tco_var_step = step;
                                      $copy_rest = new Data_List_Types.Cons(s, rest);
                                      return;
                                  };
                                  throw new Error("Failed pattern match at Data.List (line 152, column 3 - line 153, column 65): " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                              };
                              while (!$tco_done) {
                                  $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                              };
                              return $tco_result;
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var $226 = start > end;
                  if ($226) {
                      return 1;
                  };
                  return -1 | 0;
              })())(Data_List_Types.Nil.value);
          };
          throw new Error("Failed pattern match at Data.List (line 148, column 1 - line 148, column 32): " + [ start.constructor.name, end.constructor.name ]);
      };
  };
  var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  var index = function ($copy_v) {
      return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, v1) {
              if (v instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return Data_Maybe.Nothing.value;
              };
              if (v instanceof Data_List_Types.Cons && v1 === 0) {
                  $tco_done = true;
                  return new Data_Maybe.Just(v.value0);
              };
              if (v instanceof Data_List_Types.Cons) {
                  $tco_var_v = v.value1;
                  $copy_v1 = v1 - 1 | 0;
                  return;
              };
              throw new Error("Failed pattern match at Data.List (line 285, column 1 - line 285, column 44): " + [ v.constructor.name, v1.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
          };
          return $tco_result;
      };
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List (line 234, column 1 - line 234, column 22): " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  var findIndex = function (fn) {
      var go = function ($copy_v) {
          return function ($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                  if (v1 instanceof Data_List_Types.Cons) {
                      if (fn(v1.value0)) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v);
                      };
                      if (Data_Boolean.otherwise) {
                          $tco_var_v = v + 1 | 0;
                          $copy_v1 = v1.value1;
                          return;
                      };
                  };
                  if (v1 instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Data.List (line 305, column 3 - line 305, column 35): " + [ v.constructor.name, v1.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $copy_v1);
              };
              return $tco_result;
          };
      };
      return go(0);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["range"] = range;
  exports["length"] = length;
  exports["uncons"] = uncons;
  exports["index"] = index;
  exports["findIndex"] = findIndex;
  exports["reverse"] = reverse;
  exports["mapWithIndex"] = mapWithIndex;
  exports["zipWith"] = zipWith;
  exports["zip"] = zip;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 591, column 18 - line 600, column 71): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 590, column 3 - line 590, column 19): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var toAscArray = toUnfoldable(Data_Unfoldable.unfoldableArray);
  var showMap = function (dictShow) {
      return function (dictShow1) {
          return {
              show: function (m) {
                  return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1)))(toAscArray(m)) + ")");
              }
          };
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 211, column 5 - line 211, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 620, column 1 - line 620, column 38): " + [ v.constructor.name ]);
  };
  var functorMap = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Leaf) {
                  return Leaf.value;
              };
              if (v1 instanceof Two) {
                  return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
              };
              if (v1 instanceof Three) {
                  return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
              };
              throw new Error("Failed pattern match at Data.Map.Internal (line 101, column 1 - line 104, column 110): " + [ v.constructor.name, v1.constructor.name ]);
          };
      }
  };
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 432, column 3 - line 437, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 429, column 1 - line 429, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 5 - line 473, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 465, column 3 - line 465, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done1 = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done1 = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 448, column 3 - line 448, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done1) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 9 - line 542, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 522, column 5 - line 542, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done1 = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done1 = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 554, column 5 - line 558, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done2 = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done2 = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done2 = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 545, column 33 - line 549, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done2) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done3 = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done3 = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 34 - line 518, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done3) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var eqMap = function (dictEq) {
      return function (dictEq1) {
          return {
              eq: function (m1) {
                  return function (m2) {
                      return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toAscArray(m1))(toAscArray(m2));
                  };
              }
          };
      };
  };
  var empty = Leaf.value;
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 563, column 15 - line 565, column 25): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)((function () {
                              var $777 = Data_Maybe.maybe(v.value1)(f(v.value1));
                              return function ($778) {
                                  return Data_Maybe.Just.create($777($778));
                              };
                          })())(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["delete"] = $$delete;
  exports["member"] = member;
  exports["keys"] = keys;
  exports["union"] = union;
  exports["eqMap"] = eqMap;
  exports["showMap"] = showMap;
  exports["functorMap"] = functorMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Set"] = $PS["Data.Set"] || {};
  var exports = $PS["Data.Set"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var toList = function (v) {
      return Data_Map_Internal.keys(v);
  };
  var toUnfoldable = function (dictUnfoldable) {
      var $71 = Data_List.toUnfoldable(dictUnfoldable);
      return function ($72) {
          return $71(toList($72));
      };
  };
  var showSet = function (dictShow) {
      return {
          show: function (s) {
              return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(dictShow))(toUnfoldable(Data_Unfoldable.unfoldableArray)(s)) + ")");
          }
      };
  };
  var member = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.member(dictOrd)(a)(v);
          };
      };
  };
  var eqSet = function (dictEq) {
      return {
          eq: function (v) {
              return function (v1) {
                  return Data_Eq.eq(Data_Map_Internal.eqMap(dictEq)(Data_Eq.eqUnit))(v)(v1);
              };
          }
      };
  };
  var empty = Data_Map_Internal.empty;
  var $$delete = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal["delete"](dictOrd)(a)(v);
          };
      };
  };
  var difference = function (dictOrd) {
      return function (s1) {
          return function (s2) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(s1)(toList(s2));
          };
      };
  };
  exports["empty"] = empty;
  exports["member"] = member;
  exports["difference"] = difference;
  exports["eqSet"] = eqSet;
  exports["showSet"] = showSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Metadata"] = $PS["Language.Shape.Stlc.Metadata"] || {};
  var exports = $PS["Language.Shape.Stlc.Metadata"];
  var Data_Default = $PS["Data.Default"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var TermBindMetadata = function (x) {
      return x;
  };
  var TypeBindMetadata = function (x) {
      return x;
  };
  var MatchMetadata = function (x) {
      return x;
  };
  var LetMetadata = function (x) {
      return x;
  };
  var LamMetadata = function (x) {
      return x;
  };
  var DataMetadata = function (x) {
      return x;
  };
  var BufMetadata = function (x) {
      return x;
  };
  var ArgItemMetadata = function (x) {
      return x;
  };
  var ordName = Data_Maybe.ordMaybe(Data_Ord.ordString);
  var showTermBindItemMetadata = {
      show: function (x) {
          return "TermBindItemMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indented";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showSumItemMetadata = {
      show: function (x) {
          return "SumItemMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indented";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showParamItemMetadata = {
      show: function (x) {
          return "ParamItemMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indented";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showNeuMetadata = {
      show: function (x) {
          return "NeuMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsNil))(Data_Newtype.unwrap()(x));
      }
  };
  var showName = {
      show: function (x) {
          return "Name " + Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(Data_Newtype.unwrap()(x));
      }
  };
  var showTermBindMetadata = {
      show: function (x) {
          return "TermBindMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "name";
              }
          })(Data_Show.showRecordFieldsNil)(showName)))(Data_Newtype.unwrap()(x));
      }
  };
  var showTypeBindMetadata = {
      show: function (x) {
          return "TypeBindMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "name";
              }
          })(Data_Show.showRecordFieldsNil)(showName)))(Data_Newtype.unwrap()(x));
      }
  };
  var showMatchMetadata = {
      show: function (x) {
          return "MatchMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedCaseItems";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showLetMetadata = {
      show: function (x) {
          return "LetMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedBody";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedImpl";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedSign";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "name";
              }
          })(Data_Show.showRecordFieldsNil)(showName))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showLamMetadata = {
      show: function (x) {
          return "LamMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedBody";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "name";
              }
          })(Data_Show.showRecordFieldsNil)(showName))(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showHoleTypeMetadata = {
      show: function (x) {
          return "HoleTypeMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsNil))(Data_Newtype.unwrap()(x));
      }
  };
  var showHoleMetadata = {
      show: function (x) {
          return "HoleMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsNil))(Data_Newtype.unwrap()(x));
      }
  };
  var showDataTypeMetadata = {
      show: function (x) {
          return "DataTypeMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsNil))(Data_Newtype.unwrap()(x));
      }
  };
  var showDataMetadata = {
      show: function (x) {
          return "DataMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedBody";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedSumItems";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "name";
              }
          })(Data_Show.showRecordFieldsNil)(showName))(Data_Show.showBoolean))(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showCaseItemMetadata = {
      show: function (x) {
          return "CaseItemMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indented";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showBufMetadata = {
      show: function (x) {
          return "BufMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedBody";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedImpl";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indentedSign";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };
  var showArrowTypeMetadata = {
      show: function (x) {
          return "ArrowTypeMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsNil))(Data_Newtype.unwrap()(x));
      }
  };
  var showArgItemMetadata = {
      show: function (x) {
          return "ArgItemMetadata " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "indented";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showBoolean)))(Data_Newtype.unwrap()(x));
      }
  };                                                
  var eqHoleTypeMetadata = {
      eq: function (x) {
          return function (y) {
              return true;
          };
      }
  };
  var eqDataTypeMetadata = {
      eq: function (x) {
          return function (y) {
              return true;
          };
      }
  };
  var eqArrowTypeMetadata = {
      eq: function (x) {
          return function (y) {
              return true;
          };
      }
  };
  var defaultTermBindItemMetadata = {
      "default": {
          indented: false
      }
  };
  var defaultSumItemMetadata = {
      "default": {
          indented: true
      }
  };
  var defaultParamItemMetadata = {
      "default": {
          indented: false
      }
  };
  var defaultNeuMetadata = {
      "default": {}
  };
  var defaultName = {
      "default": Data_Maybe.Nothing.value
  };
  var defaultTermBindMetadata = {
      "default": {
          name: Data_Default["default"](defaultName)
      }
  };
  var defaultTypeBindMetadata = {
      "default": {
          name: Data_Default["default"](defaultName)
      }
  };
  var defaultMatchMetadata = {
      "default": {
          indentedCaseItems: false
      }
  };
  var defaultLetMetadata = {
      "default": {
          name: Data_Default["default"](defaultName),
          indentedSign: false,
          indentedImpl: false,
          indentedBody: true
      }
  };
  var defaultLamMetadata = {
      "default": {
          name: Data_Default["default"](defaultName),
          indentedBody: false
      }
  };
  var defaultHoleTypeMetadata = {
      "default": {}
  };
  var defaultHoleMetadata = {
      "default": {}
  };
  var defaultDataTypeMetadata = {
      "default": {}
  };
  var defaultDataMetadata = {
      "default": {
          name: Data_Default["default"](defaultName),
          indentedSumItems: true,
          indentedBody: true
      }
  };
  var defaultCaseItemMetadata = {
      "default": {
          indented: true
      }
  };
  var defaultBufMetadata = {
      "default": {
          indentedSign: false,
          indentedImpl: false,
          indentedBody: true
      }
  };
  var defaultArrowTypeMetadata = {
      "default": {}
  };
  var defaultArgItemMetadata = {
      "default": {
          indented: false
      }
  };
  exports["LamMetadata"] = LamMetadata;
  exports["ArgItemMetadata"] = ArgItemMetadata;
  exports["LetMetadata"] = LetMetadata;
  exports["BufMetadata"] = BufMetadata;
  exports["DataMetadata"] = DataMetadata;
  exports["MatchMetadata"] = MatchMetadata;
  exports["TypeBindMetadata"] = TypeBindMetadata;
  exports["TermBindMetadata"] = TermBindMetadata;
  exports["defaultArrowTypeMetadata"] = defaultArrowTypeMetadata;
  exports["showArrowTypeMetadata"] = showArrowTypeMetadata;
  exports["eqArrowTypeMetadata"] = eqArrowTypeMetadata;
  exports["defaultDataTypeMetadata"] = defaultDataTypeMetadata;
  exports["showDataTypeMetadata"] = showDataTypeMetadata;
  exports["eqDataTypeMetadata"] = eqDataTypeMetadata;
  exports["defaultHoleTypeMetadata"] = defaultHoleTypeMetadata;
  exports["showHoleTypeMetadata"] = showHoleTypeMetadata;
  exports["eqHoleTypeMetadata"] = eqHoleTypeMetadata;
  exports["defaultLamMetadata"] = defaultLamMetadata;
  exports["showLamMetadata"] = showLamMetadata;
  exports["defaultNeuMetadata"] = defaultNeuMetadata;
  exports["showNeuMetadata"] = showNeuMetadata;
  exports["defaultArgItemMetadata"] = defaultArgItemMetadata;
  exports["showArgItemMetadata"] = showArgItemMetadata;
  exports["defaultLetMetadata"] = defaultLetMetadata;
  exports["showLetMetadata"] = showLetMetadata;
  exports["defaultBufMetadata"] = defaultBufMetadata;
  exports["showBufMetadata"] = showBufMetadata;
  exports["defaultDataMetadata"] = defaultDataMetadata;
  exports["showDataMetadata"] = showDataMetadata;
  exports["defaultMatchMetadata"] = defaultMatchMetadata;
  exports["showMatchMetadata"] = showMatchMetadata;
  exports["defaultHoleMetadata"] = defaultHoleMetadata;
  exports["showHoleMetadata"] = showHoleMetadata;
  exports["defaultTypeBindMetadata"] = defaultTypeBindMetadata;
  exports["showTypeBindMetadata"] = showTypeBindMetadata;
  exports["defaultTermBindMetadata"] = defaultTermBindMetadata;
  exports["showTermBindMetadata"] = showTermBindMetadata;
  exports["defaultSumItemMetadata"] = defaultSumItemMetadata;
  exports["showSumItemMetadata"] = showSumItemMetadata;
  exports["defaultCaseItemMetadata"] = defaultCaseItemMetadata;
  exports["showCaseItemMetadata"] = showCaseItemMetadata;
  exports["defaultParamItemMetadata"] = defaultParamItemMetadata;
  exports["showParamItemMetadata"] = showParamItemMetadata;
  exports["defaultTermBindItemMetadata"] = defaultTermBindItemMetadata;
  exports["showTermBindItemMetadata"] = showTermBindItemMetadata;
  exports["ordName"] = ordName;
  exports["showName"] = showName;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Product = (function () {
      function Product(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Product.create = function (value0) {
          return function (value1) {
              return new Product(value0, value1);
          };
      };
      return Product;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Constructor = function (x) {
      return x;
  };
  var to = function (dict) {
      return dict.to;
  };
  var from = function (dict) {
      return dict.from;
  };
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Product"] = Product;
  exports["Constructor"] = Constructor;
})(PS);
(function(exports) {
  "use strict";

  exports.intercalate = function (separator) {
    return function (xs) {
      var len = xs.length;
      if (len === 0) return "";

      var res = xs[0];
      for (var i = 1; i < len; i++) {
        res = res + separator + xs[i];
      }
      return res;
    };
  };
})(PS["Data.Show.Generic"] = PS["Data.Show.Generic"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Show.Generic"] = $PS["Data.Show.Generic"] || {};
  var exports = $PS["Data.Show.Generic"];
  var $foreign = $PS["Data.Show.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var genericShowArgsNoArguments = {
      genericShowArgs: function (v) {
          return [  ];
      }
  };
  var genericShowArgsArgument = function (dictShow) {
      return {
          genericShowArgs: function (v) {
              return [ Data_Show.show(dictShow)(v) ];
          }
      };
  };
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowArgsProduct = function (dictGenericShowArgs) {
      return function (dictGenericShowArgs1) {
          return {
              genericShowArgs: function (v) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
              }
          };
      };
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return {
              "genericShow'": function (v) {
                  var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                  var v1 = genericShowArgs(dictGenericShowArgs)(v);
                  if (v1.length === 0) {
                      return ctor;
                  };
                  return "(" + ($foreign.intercalate(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
              }
          };
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  };
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return {
              "genericShow'": function (v) {
                  if (v instanceof Data_Generic_Rep.Inl) {
                      return genericShow$prime(dictGenericShow)(v.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr) {
                      return genericShow$prime(dictGenericShow1)(v.value0);
                  };
                  throw new Error("Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): " + [ v.constructor.name ]);
              }
          };
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["genericShow"] = genericShow;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowArgsProduct"] = genericShowArgsProduct;
  exports["genericShowConstructor"] = genericShowConstructor;
  exports["genericShowArgsArgument"] = genericShowArgsArgument;
})(PS);
(function(exports) {
  'use strict';

  var mkV4UUID = null;
  exports.getUUIDImpl = function () {
    if (mkV4UUID === null) {
      var uuid = require('uuid');
      mkV4UUID = uuid.v4;
    }
    return mkV4UUID();
  };
})(PS["Data.UUID"] = PS["Data.UUID"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.UUID"] = $PS["Data.UUID"] || {};
  var exports = $PS["Data.UUID"];
  var $foreign = $PS["Data.UUID"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Ord = $PS["Data.Ord"];
  var Effect = $PS["Effect"];                  
  var UUID = function (x) {
      return x;
  };
  var toString = function (v) {
      return v;
  };
  var genUUID = Control_Bind.bind(Effect.bindEffect)($foreign.getUUIDImpl)((function () {
      var $24 = Control_Applicative.pure(Effect.applicativeEffect);
      return function ($25) {
          return $24(UUID($25));
      };
  })());
  var eqUUID = {
      eq: function (x) {
          return function (y) {
              return x === y;
          };
      }
  };
  var ordUUID = {
      compare: function (x) {
          return function (y) {
              return Data_Ord.compare(Data_Ord.ordString)(x)(y);
          };
      },
      Eq0: function () {
          return eqUUID;
      }
  };
  exports["genUUID"] = genUUID;
  exports["toString"] = toString;
  exports["eqUUID"] = eqUUID;
  exports["ordUUID"] = ordUUID;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Syntax"] = $PS["Language.Shape.Stlc.Syntax"] || {};
  var exports = $PS["Language.Shape.Stlc.Syntax"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Default = $PS["Data.Default"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_UUID = $PS["Data.UUID"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];                
  var TypeId = function (x) {
      return x;
  };
  var TermId = function (x) {
      return x;
  };
  var HoleId = function (x) {
      return x;
  };
  var ArrowType = (function () {
      function ArrowType(value0) {
          this.value0 = value0;
      };
      ArrowType.create = function (value0) {
          return new ArrowType(value0);
      };
      return ArrowType;
  })();
  var DataType = (function () {
      function DataType(value0) {
          this.value0 = value0;
      };
      DataType.create = function (value0) {
          return new DataType(value0);
      };
      return DataType;
  })();
  var HoleType = (function () {
      function HoleType(value0) {
          this.value0 = value0;
      };
      HoleType.create = function (value0) {
          return new HoleType(value0);
      };
      return HoleType;
  })();
  var Lam = (function () {
      function Lam(value0) {
          this.value0 = value0;
      };
      Lam.create = function (value0) {
          return new Lam(value0);
      };
      return Lam;
  })();
  var Neu = (function () {
      function Neu(value0) {
          this.value0 = value0;
      };
      Neu.create = function (value0) {
          return new Neu(value0);
      };
      return Neu;
  })();
  var Let = (function () {
      function Let(value0) {
          this.value0 = value0;
      };
      Let.create = function (value0) {
          return new Let(value0);
      };
      return Let;
  })();
  var Buf = (function () {
      function Buf(value0) {
          this.value0 = value0;
      };
      Buf.create = function (value0) {
          return new Buf(value0);
      };
      return Buf;
  })();
  var Data = (function () {
      function Data(value0) {
          this.value0 = value0;
      };
      Data.create = function (value0) {
          return new Data(value0);
      };
      return Data;
  })();
  var Match = (function () {
      function Match(value0) {
          this.value0 = value0;
      };
      Match.create = function (value0) {
          return new Match(value0);
      };
      return Match;
  })();
  var Hole = (function () {
      function Hole(value0) {
          this.value0 = value0;
      };
      Hole.create = function (value0) {
          return new Hole(value0);
      };
      return Hole;
  })();
  var SyntaxType = (function () {
      function SyntaxType(value0) {
          this.value0 = value0;
      };
      SyntaxType.create = function (value0) {
          return new SyntaxType(value0);
      };
      return SyntaxType;
  })();
  var SyntaxTerm = (function () {
      function SyntaxTerm(value0) {
          this.value0 = value0;
      };
      SyntaxTerm.create = function (value0) {
          return new SyntaxTerm(value0);
      };
      return SyntaxTerm;
  })();
  var SyntaxTermBind = (function () {
      function SyntaxTermBind(value0) {
          this.value0 = value0;
      };
      SyntaxTermBind.create = function (value0) {
          return new SyntaxTermBind(value0);
      };
      return SyntaxTermBind;
  })();
  var SyntaxTermId = (function () {
      function SyntaxTermId(value0) {
          this.value0 = value0;
      };
      SyntaxTermId.create = function (value0) {
          return new SyntaxTermId(value0);
      };
      return SyntaxTermId;
  })();
  var SyntaxTypeBind = (function () {
      function SyntaxTypeBind(value0) {
          this.value0 = value0;
      };
      SyntaxTypeBind.create = function (value0) {
          return new SyntaxTypeBind(value0);
      };
      return SyntaxTypeBind;
  })();
  var SyntaxArgItem = (function () {
      function SyntaxArgItem(value0) {
          this.value0 = value0;
      };
      SyntaxArgItem.create = function (value0) {
          return new SyntaxArgItem(value0);
      };
      return SyntaxArgItem;
  })();
  var SyntaxSumItem = (function () {
      function SyntaxSumItem(value0) {
          this.value0 = value0;
      };
      SyntaxSumItem.create = function (value0) {
          return new SyntaxSumItem(value0);
      };
      return SyntaxSumItem;
  })();
  var SyntaxCaseItem = (function () {
      function SyntaxCaseItem(value0) {
          this.value0 = value0;
      };
      SyntaxCaseItem.create = function (value0) {
          return new SyntaxCaseItem(value0);
      };
      return SyntaxCaseItem;
  })();
  var SyntaxParamItem = (function () {
      function SyntaxParamItem(value0) {
          this.value0 = value0;
      };
      SyntaxParamItem.create = function (value0) {
          return new SyntaxParamItem(value0);
      };
      return SyntaxParamItem;
  })();
  var SyntaxTermBindItem = (function () {
      function SyntaxTermBindItem(value0) {
          this.value0 = value0;
      };
      SyntaxTermBindItem.create = function (value0) {
          return new SyntaxTermBindItem(value0);
      };
      return SyntaxTermBindItem;
  })();
  var SyntaxList = (function () {
      function SyntaxList(value0) {
          this.value0 = value0;
      };
      SyntaxList.create = function (value0) {
          return new SyntaxList(value0);
      };
      return SyntaxList;
  })();
  var toTypeBind = function (v) {
      if (v instanceof SyntaxTypeBind) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toType = function (v) {
      if (v instanceof SyntaxType) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toTermId = function (v) {
      if (v instanceof SyntaxTermId) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toTermBindItem = function (v) {
      if (v instanceof SyntaxTermBindItem) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toTermBind = function (v) {
      if (v instanceof SyntaxTermBind) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toTerm = function (v) {
      if (v instanceof SyntaxTerm) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toSyntaxList = function (v) {
      if (v instanceof SyntaxList) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var unrollSyntaxList = function (unwrap) {
      return function (syn) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(toSyntaxList(syn))(function (items) {
              return Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Maybe.applicativeMaybe)(unwrap)(items);
          });
      };
  };
  var toSumItem = function (v) {
      if (v instanceof SyntaxSumItem) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toParamItem = function (v) {
      if (v instanceof SyntaxParamItem) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toCaseItem = function (v) {
      if (v instanceof SyntaxCaseItem) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var toArgItem = function (v) {
      if (v instanceof SyntaxArgItem) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var showUUID = function (uuid) {
      return "(fromJust (UUID.parseUUID \"" + (Data_UUID.toString(uuid) + "\"))");
  };
  var showTypeId = {
      show: function (v) {
          return "(TypeId " + (showUUID(v) + ")");
      }
  };
  var showTermId = {
      show: function (v) {
          return "(TermId " + (showUUID(v) + ")");
      }
  };
  var showHoleId = {
      show: function (v) {
          return "(HoleId " + (showUUID(v) + ")");
      }
  };
  var rollSyntaxList = function (wrap) {
      return function (ls) {
          return SyntaxList.create(Data_Functor.map(Data_List_Types.functorList)(wrap)(ls));
      };
  };
  var ordTypeId = Data_UUID.ordUUID;
  var ordTermId = Data_UUID.ordUUID;
  var ordHoleId = Data_UUID.ordUUID;
  var genericType = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new ArrowType(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new DataType(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
              return new HoleType(x.value0.value0);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax (line 38, column 1 - line 38, column 46): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof ArrowType) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof DataType) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof HoleType) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax (line 38, column 1 - line 38, column 46): " + [ x.constructor.name ]);
      }
  };
  var showType = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericType)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "cod";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "dom";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Metadata.showArrowTypeMetadata))(showType))(showType))))({
              reflectSymbol: function () {
                  return "ArrowType";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "typeId";
              }
          })(Data_Show.showRecordFieldsNil)(showTypeId))(Language_Shape_Stlc_Metadata.showDataTypeMetadata))))({
              reflectSymbol: function () {
                  return "DataType";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "holeId";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "weakening";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Set.showSet(showTypeId)))(Language_Shape_Stlc_Metadata.showHoleTypeMetadata))(showHoleId))))({
              reflectSymbol: function () {
                  return "HoleType";
              }
          }))))(x);
      }
  };
  var genericTerm = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new Lam(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new Neu(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new Let(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new Buf(x.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return new Data(x.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return new Match(x.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))) {
              return new Hole(x.value0.value0.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax (line 83, column 1 - line 83, column 46): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof Lam) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof Neu) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof Let) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof Buf) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
          };
          if (x instanceof Data) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
          };
          if (x instanceof Match) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));
          };
          if (x instanceof Hole) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax (line 83, column 1 - line 83, column 46): " + [ x.constructor.name ]);
      }
  };
  var showTerm = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericTerm)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "body";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBind";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(Language_Shape_Stlc_Metadata.showLamMetadata))(showTerm))))({
              reflectSymbol: function () {
                  return "Lam";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "argItems";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showNeuMetadata))(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "term";
              }
          })(Data_Show.showRecordFieldsNil)(showTerm))(Language_Shape_Stlc_Metadata.showArgItemMetadata)))))))({
              reflectSymbol: function () {
                  return "Neu";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "body";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "impl";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "sign";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBind";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(showType))(Language_Shape_Stlc_Metadata.showLetMetadata))(showTerm))(showTerm))))({
              reflectSymbol: function () {
                  return "Let";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "body";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "impl";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "sign";
              }
          })(Data_Show.showRecordFieldsNil)(showType))(Language_Shape_Stlc_Metadata.showBufMetadata))(showTerm))(showTerm))))({
              reflectSymbol: function () {
                  return "Buf";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "body";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "sumItems";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "typeBind";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "typeId";
              }
          })(Data_Show.showRecordFieldsNil)(showTypeId))(Language_Shape_Stlc_Metadata.showTypeBindMetadata))))(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "paramItems";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBind";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "type_";
              }
          })(Data_Show.showRecordFieldsNil)(showType))(Language_Shape_Stlc_Metadata.showParamItemMetadata)))))(Language_Shape_Stlc_Metadata.showSumItemMetadata)))))(Language_Shape_Stlc_Metadata.showDataMetadata))(showTerm))))({
              reflectSymbol: function () {
                  return "Data";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "caseItems";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "term";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "typeId";
              }
          })(Data_Show.showRecordFieldsNil)(showTypeId))(showTerm))(Language_Shape_Stlc_Metadata.showMatchMetadata))(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "body";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBindItems";
              }
          })(Data_Show.showRecordFieldsNil)(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBind";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(Language_Shape_Stlc_Metadata.showTermBindItemMetadata)))))(Language_Shape_Stlc_Metadata.showCaseItemMetadata))(showTerm)))))))({
              reflectSymbol: function () {
                  return "Match";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Metadata.showHoleMetadata))))({
              reflectSymbol: function () {
                  return "Hole";
              }
          }))))))))(x);
      }
  };
  var genericSyntax = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new SyntaxType(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new SyntaxTerm(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new SyntaxTermBind(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new SyntaxTermId(x.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return new SyntaxTypeBind(x.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return new SyntaxArgItem(x.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
              return new SyntaxSumItem(x.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
              return new SyntaxCaseItem(x.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
              return new SyntaxParamItem(x.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
              return new SyntaxTermBindItem(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))))))) {
              return new SyntaxList(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax (line 180, column 1 - line 180, column 50): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof SyntaxType) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof SyntaxTerm) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof SyntaxTermBind) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof SyntaxTermId) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
          };
          if (x instanceof SyntaxTypeBind) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
          };
          if (x instanceof SyntaxArgItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));
          };
          if (x instanceof SyntaxSumItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))));
          };
          if (x instanceof SyntaxCaseItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))));
          };
          if (x instanceof SyntaxParamItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))));
          };
          if (x instanceof SyntaxTermBindItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))));
          };
          if (x instanceof SyntaxList) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))))))))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax (line 180, column 1 - line 180, column 50): " + [ x.constructor.name ]);
      }
  };
  var showSyntax = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericSyntax)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showType))({
              reflectSymbol: function () {
                  return "SyntaxType";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showTerm))({
              reflectSymbol: function () {
                  return "SyntaxTerm";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))({
              reflectSymbol: function () {
                  return "SyntaxTermBind";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showTermId))({
              reflectSymbol: function () {
                  return "SyntaxTermId";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "typeId";
              }
          })(Data_Show.showRecordFieldsNil)(showTypeId))(Language_Shape_Stlc_Metadata.showTypeBindMetadata))))({
              reflectSymbol: function () {
                  return "SyntaxTypeBind";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "term";
              }
          })(Data_Show.showRecordFieldsNil)(showTerm))(Language_Shape_Stlc_Metadata.showArgItemMetadata))))({
              reflectSymbol: function () {
                  return "SyntaxArgItem";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "paramItems";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBind";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "type_";
              }
          })(Data_Show.showRecordFieldsNil)(showType))(Language_Shape_Stlc_Metadata.showParamItemMetadata)))))(Language_Shape_Stlc_Metadata.showSumItemMetadata))))({
              reflectSymbol: function () {
                  return "SyntaxSumItem";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "body";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBindItems";
              }
          })(Data_Show.showRecordFieldsNil)(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBind";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(Language_Shape_Stlc_Metadata.showTermBindItemMetadata)))))(Language_Shape_Stlc_Metadata.showCaseItemMetadata))(showTerm))))({
              reflectSymbol: function () {
                  return "SyntaxCaseItem";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "type_";
              }
          })(Data_Show.showRecordFieldsNil)(showType))(Language_Shape_Stlc_Metadata.showParamItemMetadata))))({
              reflectSymbol: function () {
                  return "SyntaxParamItem";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termBind";
              }
          })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "meta";
              }
          })(Data_Show.showRecordFieldsCons({
              reflectSymbol: function () {
                  return "termId";
              }
          })(Data_Show.showRecordFieldsNil)(showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(Language_Shape_Stlc_Metadata.showTermBindItemMetadata))))({
              reflectSymbol: function () {
                  return "SyntaxTermBindItem";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_List_Types.showList(showSyntax)))({
              reflectSymbol: function () {
                  return "SyntaxList";
              }
          }))))))))))))(x);
      }
  };
  var freshTypeId = function (v) {
      return Effect_Unsafe.unsafePerformEffect(Data_Functor.map(Effect.functorEffect)(TypeId)(Data_UUID.genUUID));
  };
  var freshTypeBind = function (v) {
      return {
          typeId: freshTypeId(Data_Unit.unit),
          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTypeBindMetadata)
      };
  };
  var freshTermId = function (v) {
      return Effect_Unsafe.unsafePerformEffect(Data_Functor.map(Effect.functorEffect)(TermId)(Data_UUID.genUUID));
  };
  var freshTermBind = function (v) {
      return {
          termId: freshTermId(Data_Unit.unit),
          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTermBindMetadata)
      };
  };
  var freshHoleId = function (v) {
      return Effect_Unsafe.unsafePerformEffect(Data_Functor.map(Effect.functorEffect)(HoleId)(Data_UUID.genUUID));
  };
  var freshHoleType = function (v) {
      return new HoleType({
          holeId: freshHoleId(Data_Unit.unit),
          weakening: Data_Set.empty,
          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleTypeMetadata)
      });
  };
  var freshHole = function (v) {
      return new Hole({
          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
      });
  };
  var eqTypeId = Data_UUID.eqUUID;
  var eqTermId = Data_UUID.eqUUID;
  var eqHoleId = Data_UUID.eqUUID;
  var eqType = {
      eq: function (x) {
          return function (y) {
              if (x instanceof ArrowType && y instanceof ArrowType) {
                  return Data_Eq.eq(eqType)(x.value0.cod)(y.value0.cod) && Data_Eq.eq(eqType)(x.value0.dom)(y.value0.dom) && Data_Eq.eq(Language_Shape_Stlc_Metadata.eqArrowTypeMetadata)(x.value0.meta)(y.value0.meta);
              };
              if (x instanceof DataType && y instanceof DataType) {
                  return Data_Eq.eq(Language_Shape_Stlc_Metadata.eqDataTypeMetadata)(x.value0.meta)(y.value0.meta) && Data_Eq.eq(eqTypeId)(x.value0.typeId)(y.value0.typeId);
              };
              if (x instanceof HoleType && y instanceof HoleType) {
                  return Data_Eq.eq(eqHoleId)(x.value0.holeId)(y.value0.holeId) && Data_Eq.eq(Language_Shape_Stlc_Metadata.eqHoleTypeMetadata)(x.value0.meta)(y.value0.meta) && Data_Eq.eq(Data_Set.eqSet(eqTypeId))(x.value0.weakening)(y.value0.weakening);
              };
              return false;
          };
      }
  };
  exports["ArrowType"] = ArrowType;
  exports["DataType"] = DataType;
  exports["HoleType"] = HoleType;
  exports["Lam"] = Lam;
  exports["Neu"] = Neu;
  exports["Let"] = Let;
  exports["Buf"] = Buf;
  exports["Data"] = Data;
  exports["Match"] = Match;
  exports["Hole"] = Hole;
  exports["freshTypeId"] = freshTypeId;
  exports["freshTypeBind"] = freshTypeBind;
  exports["freshTermId"] = freshTermId;
  exports["freshTermBind"] = freshTermBind;
  exports["freshHoleId"] = freshHoleId;
  exports["freshHoleType"] = freshHoleType;
  exports["freshHole"] = freshHole;
  exports["SyntaxType"] = SyntaxType;
  exports["SyntaxTerm"] = SyntaxTerm;
  exports["SyntaxTermBind"] = SyntaxTermBind;
  exports["SyntaxTermId"] = SyntaxTermId;
  exports["SyntaxTypeBind"] = SyntaxTypeBind;
  exports["SyntaxArgItem"] = SyntaxArgItem;
  exports["SyntaxSumItem"] = SyntaxSumItem;
  exports["SyntaxCaseItem"] = SyntaxCaseItem;
  exports["SyntaxParamItem"] = SyntaxParamItem;
  exports["SyntaxTermBindItem"] = SyntaxTermBindItem;
  exports["SyntaxList"] = SyntaxList;
  exports["toType"] = toType;
  exports["toTerm"] = toTerm;
  exports["toTermBind"] = toTermBind;
  exports["toTermId"] = toTermId;
  exports["toTypeBind"] = toTypeBind;
  exports["toArgItem"] = toArgItem;
  exports["toSumItem"] = toSumItem;
  exports["toCaseItem"] = toCaseItem;
  exports["toParamItem"] = toParamItem;
  exports["toTermBindItem"] = toTermBindItem;
  exports["toSyntaxList"] = toSyntaxList;
  exports["rollSyntaxList"] = rollSyntaxList;
  exports["unrollSyntaxList"] = unrollSyntaxList;
  exports["showType"] = showType;
  exports["showTerm"] = showTerm;
  exports["eqTypeId"] = eqTypeId;
  exports["ordTypeId"] = ordTypeId;
  exports["eqTermId"] = eqTermId;
  exports["ordTermId"] = ordTermId;
  exports["eqType"] = eqType;
  exports["eqHoleId"] = eqHoleId;
  exports["ordHoleId"] = ordHoleId;
  exports["showTypeId"] = showTypeId;
  exports["showTermId"] = showTermId;
  exports["showHoleId"] = showHoleId;
  exports["showSyntax"] = showSyntax;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Initial"] = $PS["Language.Shape.Stlc.Initial"] || {};
  var exports = $PS["Language.Shape.Stlc.Initial"];
  var Data_Default = $PS["Data.Default"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List = $PS["Data.List"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Set = $PS["Data.Set"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];                
  var mkTypeVar = function (str) {
      return new Data_Tuple.Tuple(Language_Shape_Stlc_Syntax.freshTypeId(Data_Unit.unit), new Data_Maybe.Just(str));
  };
  var mkTermVar = function (str) {
      return new Data_Tuple.Tuple(Language_Shape_Stlc_Syntax.freshTermId(Data_Unit.unit), new Data_Maybe.Just(str));
  };
  var init1 = (function () {
      var v = mkTypeVar("Nat");
      var v1 = mkTermVar("zero");
      var v2 = mkTermVar("suc");
      return new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Data({
          typeBind: {
              typeId: v.value0,
              meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.TypeBindMetadata)(function (v3) {
                  return {
                      name: v.value1
                  };
              })(Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTypeBindMetadata))
          },
          sumItems: Data_List.fromFoldable(Data_Foldable.foldableArray)([ {
              termBind: {
                  termId: v1.value0,
                  meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.TermBindMetadata)(function (v3) {
                      return {
                          name: v1.value1
                      };
                  })(Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTermBindMetadata))
              },
              paramItems: Data_List.fromFoldable(Data_Foldable.foldableArray)([  ]),
              meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultSumItemMetadata)
          }, {
              termBind: {
                  termId: v2.value0,
                  meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.TermBindMetadata)(function (v3) {
                      return {
                          name: v2.value1
                      };
                  })(Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTermBindMetadata))
              },
              paramItems: Data_List.fromFoldable(Data_Foldable.foldableArray)([ {
                  type_: new Language_Shape_Stlc_Syntax.DataType({
                      typeId: v.value0,
                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultDataTypeMetadata)
                  }),
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultParamItemMetadata)
              } ]),
              meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultSumItemMetadata)
          } ]),
          body: (function () {
              var v3 = mkTermVar("x");
              return new Language_Shape_Stlc_Syntax.Let({
                  termBind: {
                      termId: v3.value0,
                      meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.TermBindMetadata)(function (v4) {
                          return {
                              name: v3.value1
                          };
                      })(Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTermBindMetadata))
                  },
                  sign: new Language_Shape_Stlc_Syntax.HoleType({
                      holeId: Language_Shape_Stlc_Syntax.freshHoleId(Data_Unit.unit),
                      weakening: Data_Set.empty,
                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleTypeMetadata)
                  }),
                  impl: new Language_Shape_Stlc_Syntax.Hole({
                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                  }),
                  body: new Language_Shape_Stlc_Syntax.Hole({
                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                  }),
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultLetMetadata)
              });
          })(),
          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultDataMetadata)
      }), new Language_Shape_Stlc_Syntax.HoleType({
          holeId: Language_Shape_Stlc_Syntax.freshHoleId(Data_Unit.unit),
          weakening: Data_Set.empty,
          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleTypeMetadata)
      }));
  })();
  exports["init1"] = init1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.State"] = $PS["Control.Monad.State"] || {};
  var exports = $PS["Control.Monad.State"];
  var Data_Newtype = $PS["Data.Newtype"];              
  var runState = function (v) {
      var $16 = Data_Newtype.unwrap();
      return function ($17) {
          return $16(v($17));
      };
  };
  var evalState = function (v) {
      return function (s) {
          var v1 = v(s);
          return v1.value0;
      };
  };
  exports["runState"] = runState;
  exports["evalState"] = evalState;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.OrderedMap"] = $PS["Data.OrderedMap"] || {};
  var exports = $PS["Data.OrderedMap"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var showOrderedMap = function (dictShow) {
      return function (dictShow1) {
          return Data_List_Types.showList(Data_Tuple.showTuple(dictShow)(dictShow1));
      };
  };   
  var lookup$prime = function (dictShow) {
      return function (dictShow1) {
          return function (dictEq) {
              return function (k) {
                  return function (m) {
                      return Data_Maybe["maybe'"](function (v) {
                          return Partial_Unsafe.unsafeCrashWith("could not find key " + (Data_Show.show(dictShow)(k) + (" in ordered map " + Data_Show.show(showOrderedMap(dictShow)(dictShow1))(m))));
                      })(Control_Category.identity(Control_Category.categoryFn))(Data_Foldable.lookup(Data_List_Types.foldableList)(dictEq)(k)(Data_Newtype.unwrap()(m)));
                  };
              };
          };
      };
  };
  var lookup = function (dictEq) {
      return function (k) {
          var $15 = Data_Foldable.lookup(Data_List_Types.foldableList)(dictEq)(k);
          var $16 = Data_Newtype.unwrap();
          return function ($17) {
              return $15($16($17));
          };
      };
  };
  var lookup$prime$prime = function (dictOrd) {
      return function (msg) {
          return function (k) {
              return function (m) {
                  var v = lookup(dictOrd.Eq0())(k)(m);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return Partial_Unsafe.unsafeCrashWith(msg);
                  };
                  throw new Error("Failed pattern match at Data.OrderedMap (line 35, column 20 - line 37, column 35): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var keys = (function () {
      var $18 = Data_Functor.map(Data_List_Types.functorList)(Data_Tuple.fst);
      var $19 = Data_Newtype.unwrap();
      return function ($20) {
          return $18($19($20));
      };
  })();
  var insert = function (dictEq) {
      return function (k) {
          return function (v) {
              return Data_Newtype.over()()(Data_Newtype.wrap())(Data_List_Types.Cons.create(new Data_Tuple.Tuple(k, v)));
          };
      };
  };
  var empty = Data_Newtype.wrap()(Data_List_Types.Nil.value);
  exports["keys"] = keys;
  exports["lookup"] = lookup;
  exports["lookup'"] = lookup$prime;
  exports["lookup''"] = lookup$prime$prime;
  exports["insert"] = insert;
  exports["empty"] = empty;
  exports["showOrderedMap"] = showOrderedMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Bounded.Generic"] = $PS["Data.Bounded.Generic"] || {};
  var exports = $PS["Data.Bounded.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];                
  var genericTopNoArguments = {
      "genericTop'": Data_Generic_Rep.NoArguments.value
  };
  var genericTop$prime = function (dict) {
      return dict["genericTop'"];
  };
  var genericTopConstructor = function (dictGenericTop) {
      return {
          "genericTop'": genericTop$prime(dictGenericTop)
      };
  };
  var genericTopSum = function (dictGenericTop) {
      return {
          "genericTop'": new Data_Generic_Rep.Inr(genericTop$prime(dictGenericTop))
      };
  };
  var genericTop = function (dictGeneric) {
      return function (dictGenericTop) {
          return Data_Generic_Rep.to(dictGeneric)(genericTop$prime(dictGenericTop));
      };
  };
  var genericBottomNoArguments = {
      "genericBottom'": Data_Generic_Rep.NoArguments.value
  };
  var genericBottom$prime = function (dict) {
      return dict["genericBottom'"];
  };
  var genericBottomConstructor = function (dictGenericBottom) {
      return {
          "genericBottom'": genericBottom$prime(dictGenericBottom)
      };
  };
  var genericBottomSum = function (dictGenericBottom) {
      return {
          "genericBottom'": new Data_Generic_Rep.Inl(genericBottom$prime(dictGenericBottom))
      };
  };
  var genericBottom = function (dictGeneric) {
      return function (dictGenericBottom) {
          return Data_Generic_Rep.to(dictGeneric)(genericBottom$prime(dictGenericBottom));
      };
  };
  exports["genericBottom'"] = genericBottom$prime;
  exports["genericBottom"] = genericBottom;
  exports["genericTop'"] = genericTop$prime;
  exports["genericTop"] = genericTop;
  exports["genericBottomNoArguments"] = genericBottomNoArguments;
  exports["genericBottomSum"] = genericBottomSum;
  exports["genericBottomConstructor"] = genericBottomConstructor;
  exports["genericTopNoArguments"] = genericTopNoArguments;
  exports["genericTopSum"] = genericTopSum;
  exports["genericTopConstructor"] = genericTopConstructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Enum.Generic"] = $PS["Data.Enum.Generic"] || {};
  var exports = $PS["Data.Enum.Generic"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded_Generic = $PS["Data.Bounded.Generic"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var genericToEnum$prime = function (dict) {
      return dict["genericToEnum'"];
  };
  var genericToEnum = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          var $95 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $96 = genericToEnum$prime(dictGenericBoundedEnum);
          return function ($97) {
              return $95($96($97));
          };
      };
  };
  var genericSucc$prime = function (dict) {
      return dict["genericSucc'"];
  };
  var genericSucc = function (dictGeneric) {
      return function (dictGenericEnum) {
          var $98 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $99 = genericSucc$prime(dictGenericEnum);
          var $100 = Data_Generic_Rep.from(dictGeneric);
          return function ($101) {
              return $98($99($100($101)));
          };
      };
  };
  var genericPred$prime = function (dict) {
      return dict["genericPred'"];
  };
  var genericPred = function (dictGeneric) {
      return function (dictGenericEnum) {
          var $102 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $103 = genericPred$prime(dictGenericEnum);
          var $104 = Data_Generic_Rep.from(dictGeneric);
          return function ($105) {
              return $102($103($104($105)));
          };
      };
  };
  var genericFromEnum$prime = function (dict) {
      return dict["genericFromEnum'"];
  };
  var genericFromEnum = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          var $106 = genericFromEnum$prime(dictGenericBoundedEnum);
          var $107 = Data_Generic_Rep.from(dictGeneric);
          return function ($108) {
              return $106($107($108));
          };
      };
  };
  var genericEnumSum = function (dictGenericEnum) {
      return function (dictGenericTop) {
          return function (dictGenericEnum1) {
              return function (dictGenericBottom) {
                  return {
                      "genericPred'": function (v) {
                          if (v instanceof Data_Generic_Rep.Inl) {
                              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inl.create)(genericPred$prime(dictGenericEnum)(v.value0));
                          };
                          if (v instanceof Data_Generic_Rep.Inr) {
                              var v1 = genericPred$prime(dictGenericEnum1)(v.value0);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return new Data_Maybe.Just(new Data_Generic_Rep.Inl(Data_Bounded_Generic["genericTop'"](dictGenericTop)));
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  return new Data_Maybe.Just(new Data_Generic_Rep.Inr(v1.value0));
                              };
                              throw new Error("Failed pattern match at Data.Enum.Generic (line 30, column 14 - line 32, column 31): " + [ v1.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Enum.Generic (line 28, column 18 - line 32, column 31): " + [ v.constructor.name ]);
                      },
                      "genericSucc'": function (v) {
                          if (v instanceof Data_Generic_Rep.Inl) {
                              var v1 = genericSucc$prime(dictGenericEnum)(v.value0);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return new Data_Maybe.Just(new Data_Generic_Rep.Inr(Data_Bounded_Generic["genericBottom'"](dictGenericBottom)));
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  return new Data_Maybe.Just(new Data_Generic_Rep.Inl(v1.value0));
                              };
                              throw new Error("Failed pattern match at Data.Enum.Generic (line 34, column 14 - line 36, column 31): " + [ v1.constructor.name ]);
                          };
                          if (v instanceof Data_Generic_Rep.Inr) {
                              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inr.create)(genericSucc$prime(dictGenericEnum1)(v.value0));
                          };
                          throw new Error("Failed pattern match at Data.Enum.Generic (line 33, column 18 - line 37, column 36): " + [ v.constructor.name ]);
                      }
                  };
              };
          };
      };
  };
  var genericEnumNoArguments = {
      "genericPred'": function (v) {
          return Data_Maybe.Nothing.value;
      },
      "genericSucc'": function (v) {
          return Data_Maybe.Nothing.value;
      }
  };
  var genericEnumConstructor = function (dictGenericEnum) {
      return {
          "genericPred'": function (v) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericPred$prime(dictGenericEnum)(v));
          },
          "genericSucc'": function (v) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericSucc$prime(dictGenericEnum)(v));
          }
      };
  };
  var genericCardinality$prime = function (dict) {
      return dict["genericCardinality'"];
  };
  var genericCardinality = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          return Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum));
      };
  };
  var genericBoundedEnumSum = function (dictGenericBoundedEnum) {
      return function (dictGenericBoundedEnum1) {
          return {
              "genericCardinality'": Data_Enum.Cardinality(Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum)) + Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum1)) | 0),
              "genericToEnum'": function (n) {
                  var to = function (v) {
                      if (n >= 0 && n < v) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inl.create)(genericToEnum$prime(dictGenericBoundedEnum)(n));
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inr.create)(genericToEnum$prime(dictGenericBoundedEnum1)(n - v | 0));
                      };
                      throw new Error("Failed pattern match at Data.Enum.Generic (line 83, column 5 - line 83, column 43): " + [ v.constructor.name ]);
                  };
                  return to(genericCardinality$prime(dictGenericBoundedEnum));
              },
              "genericFromEnum'": function (v) {
                  if (v instanceof Data_Generic_Rep.Inl) {
                      return genericFromEnum$prime(dictGenericBoundedEnum)(v.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr) {
                      return genericFromEnum$prime(dictGenericBoundedEnum1)(v.value0) + Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum)) | 0;
                  };
                  throw new Error("Failed pattern match at Data.Enum.Generic (line 87, column 22 - line 89, column 80): " + [ v.constructor.name ]);
              }
          };
      };
  };
  var genericBoundedEnumNoArguments = {
      "genericCardinality'": 1,
      "genericToEnum'": function (i) {
          var $92 = i === 0;
          if ($92) {
              return new Data_Maybe.Just(Data_Generic_Rep.NoArguments.value);
          };
          return Data_Maybe.Nothing.value;
      },
      "genericFromEnum'": function (v) {
          return 0;
      }
  };
  var genericBoundedEnumConstructor = function (dictGenericBoundedEnum) {
      return {
          "genericCardinality'": Data_Newtype.unwrap()(genericCardinality$prime(dictGenericBoundedEnum)),
          "genericToEnum'": function (i) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericToEnum$prime(dictGenericBoundedEnum)(i));
          },
          "genericFromEnum'": function (v) {
              return genericFromEnum$prime(dictGenericBoundedEnum)(v);
          }
      };
  };
  exports["genericPred"] = genericPred;
  exports["genericSucc"] = genericSucc;
  exports["genericCardinality"] = genericCardinality;
  exports["genericToEnum"] = genericToEnum;
  exports["genericFromEnum"] = genericFromEnum;
  exports["genericEnumNoArguments"] = genericEnumNoArguments;
  exports["genericEnumConstructor"] = genericEnumConstructor;
  exports["genericEnumSum"] = genericEnumSum;
  exports["genericBoundedEnumNoArguments"] = genericBoundedEnumNoArguments;
  exports["genericBoundedEnumConstructor"] = genericBoundedEnumConstructor;
  exports["genericBoundedEnumSum"] = genericBoundedEnumSum;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Eq.Generic"] = $PS["Data.Eq.Generic"] || {};
  var exports = $PS["Data.Eq.Generic"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var genericEqNoArguments = {
      "genericEq'": function (v) {
          return function (v1) {
              return true;
          };
      }
  };
  var genericEqArgument = function (dictEq) {
      return {
          "genericEq'": function (v) {
              return function (v1) {
                  return Data_Eq.eq(dictEq)(v)(v1);
              };
          }
      };
  };
  var genericEq$prime = function (dict) {
      return dict["genericEq'"];
  };
  var genericEqConstructor = function (dictGenericEq) {
      return {
          "genericEq'": function (v) {
              return function (v1) {
                  return genericEq$prime(dictGenericEq)(v)(v1);
              };
          }
      };
  };
  var genericEqProduct = function (dictGenericEq) {
      return function (dictGenericEq1) {
          return {
              "genericEq'": function (v) {
                  return function (v1) {
                      return genericEq$prime(dictGenericEq)(v.value0)(v1.value0) && genericEq$prime(dictGenericEq1)(v.value1)(v1.value1);
                  };
              }
          };
      };
  };
  var genericEqSum = function (dictGenericEq) {
      return function (dictGenericEq1) {
          return {
              "genericEq'": function (v) {
                  return function (v1) {
                      if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                          return genericEq$prime(dictGenericEq)(v.value0)(v1.value0);
                      };
                      if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                          return genericEq$prime(dictGenericEq1)(v.value0)(v1.value0);
                      };
                      return false;
                  };
              }
          };
      };
  };
  var genericEq = function (dictGeneric) {
      return function (dictGenericEq) {
          return function (x) {
              return function (y) {
                  return genericEq$prime(dictGenericEq)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
              };
          };
      };
  };
  exports["genericEq"] = genericEq;
  exports["genericEqNoArguments"] = genericEqNoArguments;
  exports["genericEqSum"] = genericEqSum;
  exports["genericEqProduct"] = genericEqProduct;
  exports["genericEqConstructor"] = genericEqConstructor;
  exports["genericEqArgument"] = genericEqArgument;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Ord.Generic"] = $PS["Data.Ord.Generic"] || {};
  var exports = $PS["Data.Ord.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Ordering = $PS["Data.Ordering"];
  var genericOrdNoArguments = {
      "genericCompare'": function (v) {
          return function (v1) {
              return Data_Ordering.EQ.value;
          };
      }
  };
  var genericCompare$prime = function (dict) {
      return dict["genericCompare'"];
  };
  var genericOrdConstructor = function (dictGenericOrd) {
      return {
          "genericCompare'": function (v) {
              return function (v1) {
                  return genericCompare$prime(dictGenericOrd)(v)(v1);
              };
          }
      };
  };
  var genericOrdSum = function (dictGenericOrd) {
      return function (dictGenericOrd1) {
          return {
              "genericCompare'": function (v) {
                  return function (v1) {
                      if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                          return genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                      };
                      if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                          return genericCompare$prime(dictGenericOrd1)(v.value0)(v1.value0);
                      };
                      if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inr) {
                          return Data_Ordering.LT.value;
                      };
                      if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inl) {
                          return Data_Ordering.GT.value;
                      };
                      throw new Error("Failed pattern match at Data.Ord.Generic (line 19, column 1 - line 23, column 39): " + [ v.constructor.name, v1.constructor.name ]);
                  };
              }
          };
      };
  };
  var genericCompare = function (dictGeneric) {
      return function (dictGenericOrd) {
          return function (x) {
              return function (y) {
                  return genericCompare$prime(dictGenericOrd)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
              };
          };
      };
  };
  exports["genericCompare"] = genericCompare;
  exports["genericOrdNoArguments"] = genericOrdNoArguments;
  exports["genericOrdSum"] = genericOrdSum;
  exports["genericOrdConstructor"] = genericOrdConstructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Index"] = $PS["Language.Shape.Stlc.Index"] || {};
  var exports = $PS["Language.Shape.Stlc.Index"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded_Generic = $PS["Data.Bounded.Generic"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Enum_Generic = $PS["Data.Enum.Generic"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Eq_Generic = $PS["Data.Eq.Generic"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord_Generic = $PS["Data.Ord.Generic"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];                
  var IxStepArrowType = (function () {
      function IxStepArrowType() {

      };
      IxStepArrowType.value = new IxStepArrowType();
      return IxStepArrowType;
  })();
  var IxStepLam = (function () {
      function IxStepLam() {

      };
      IxStepLam.value = new IxStepLam();
      return IxStepLam;
  })();
  var IxStepNeu = (function () {
      function IxStepNeu() {

      };
      IxStepNeu.value = new IxStepNeu();
      return IxStepNeu;
  })();
  var IxStepLet = (function () {
      function IxStepLet() {

      };
      IxStepLet.value = new IxStepLet();
      return IxStepLet;
  })();
  var IxStepBuf = (function () {
      function IxStepBuf() {

      };
      IxStepBuf.value = new IxStepBuf();
      return IxStepBuf;
  })();
  var IxStepData = (function () {
      function IxStepData() {

      };
      IxStepData.value = new IxStepData();
      return IxStepData;
  })();
  var IxStepMatch = (function () {
      function IxStepMatch() {

      };
      IxStepMatch.value = new IxStepMatch();
      return IxStepMatch;
  })();
  var IxStepTermBind = (function () {
      function IxStepTermBind() {

      };
      IxStepTermBind.value = new IxStepTermBind();
      return IxStepTermBind;
  })();
  var IxStepArgItem = (function () {
      function IxStepArgItem() {

      };
      IxStepArgItem.value = new IxStepArgItem();
      return IxStepArgItem;
  })();
  var IxStepSumItem = (function () {
      function IxStepSumItem() {

      };
      IxStepSumItem.value = new IxStepSumItem();
      return IxStepSumItem;
  })();
  var IxStepCaseItem = (function () {
      function IxStepCaseItem() {

      };
      IxStepCaseItem.value = new IxStepCaseItem();
      return IxStepCaseItem;
  })();
  var IxStepParamItem = (function () {
      function IxStepParamItem() {

      };
      IxStepParamItem.value = new IxStepParamItem();
      return IxStepParamItem;
  })();
  var IxStepTermBindItem = (function () {
      function IxStepTermBindItem() {

      };
      IxStepTermBindItem.value = new IxStepTermBindItem();
      return IxStepTermBindItem;
  })();
  var IxStepList = (function () {
      function IxStepList() {

      };
      IxStepList.value = new IxStepList();
      return IxStepList;
  })();
  var IxStep = (function () {
      function IxStep(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      IxStep.create = function (value0) {
          return function (value1) {
              return new IxStep(value0, value1);
          };
      };
      return IxStep;
  })();
  var toIxDown = function (v) {
      return Data_List.reverse(v);
  };
  var nilIxUp = Data_List_Types.Nil.value;
  var nilIxDown = Data_List_Types.Nil.value;
  var ixStepTermBindItem = {
      termBind: new IxStep(IxStepTermBindItem.value, 0)
  };
  var ixStepSumItem = {
      termBind: new IxStep(IxStepSumItem.value, 0),
      paramItems: new IxStep(IxStepSumItem.value, 1)
  };
  var ixStepParamItem = {
      type_: new IxStep(IxStepParamItem.value, 0)
  };
  var ixStepNeu = {
      termId: new IxStep(IxStepNeu.value, 0),
      argItems: new IxStep(IxStepNeu.value, 1)
  };
  var ixStepMatch = {
      term: new IxStep(IxStepMatch.value, 0),
      caseItems: new IxStep(IxStepMatch.value, 1)
  };
  var ixStepList = {
      head: new IxStep(IxStepList.value, 0),
      tail: new IxStep(IxStepList.value, 1)
  };
  var ixStepLet = {
      termBind: new IxStep(IxStepLet.value, 0),
      sign: new IxStep(IxStepLet.value, 1),
      impl: new IxStep(IxStepLet.value, 2),
      body: new IxStep(IxStepLet.value, 3)
  };
  var ixStepLam = {
      termBind: new IxStep(IxStepLam.value, 0),
      body: new IxStep(IxStepLam.value, 1)
  };
  var ixStepData = {
      typeBind: new IxStep(IxStepData.value, 0),
      sumItems: new IxStep(IxStepData.value, 1),
      body: new IxStep(IxStepData.value, 2)
  };
  var ixStepCaseItem = {
      termBindItems: new IxStep(IxStepCaseItem.value, 0),
      body: new IxStep(IxStepCaseItem.value, 1)
  };
  var ixStepBuf = {
      sign: new IxStep(IxStepBuf.value, 1),
      impl: new IxStep(IxStepBuf.value, 0),
      body: new IxStep(IxStepBuf.value, 2)
  };
  var ixStepArrowType = {
      dom: new IxStep(IxStepArrowType.value, 0),
      cod: new IxStep(IxStepArrowType.value, 1)
  };
  var ixStepArgItem = {
      term: new IxStep(IxStepArgItem.value, 0)
  };
  var ixDownListItem = function (i) {
      if (i === 0) {
          return Data_Newtype.wrap()(Data_List.singleton(ixStepList.head));
      };
      if (Data_Boolean.otherwise) {
          return Data_Newtype.over()()(Data_Newtype.wrap())(Data_List_Types.Cons.create(ixStepList.tail))(ixDownListItem(i - 1 | 0));
      };
      throw new Error("Failed pattern match at Language.Shape.Stlc.Index (line 215, column 1 - line 215, column 32): " + [ i.constructor.name ]);
  };
  var genericIxStepLabel = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return IxStepArrowType.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return IxStepLam.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return IxStepNeu.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return IxStepLet.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return IxStepBuf.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return IxStepData.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
              return IxStepMatch.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
              return IxStepTermBind.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
              return IxStepArgItem.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
              return IxStepSumItem.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
              return IxStepCaseItem.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))) {
              return IxStepParamItem.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))) {
              return IxStepTermBindItem.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))))))) {
              return IxStepList.value;
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Index (line 99, column 1 - line 99, column 60): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof IxStepArrowType) {
              return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
          };
          if (x instanceof IxStepLam) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
          };
          if (x instanceof IxStepNeu) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
          };
          if (x instanceof IxStepLet) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
          };
          if (x instanceof IxStepBuf) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
          };
          if (x instanceof IxStepData) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
          };
          if (x instanceof IxStepMatch) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
          };
          if (x instanceof IxStepTermBind) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))));
          };
          if (x instanceof IxStepArgItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))));
          };
          if (x instanceof IxStepSumItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))));
          };
          if (x instanceof IxStepCaseItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))));
          };
          if (x instanceof IxStepParamItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))));
          };
          if (x instanceof IxStepTermBindItem) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))));
          };
          if (x instanceof IxStepList) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))))))))))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Index (line 99, column 1 - line 99, column 60): " + [ x.constructor.name ]);
      }
  };
  var showIxStepLabel = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericIxStepLabel)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepArrowType";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepLam";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepNeu";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepLet";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepBuf";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepData";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepMatch";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepTermBind";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepArgItem";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepSumItem";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepCaseItem";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepParamItem";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepTermBindItem";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "IxStepList";
              }
          })))))))))))))))(x);
      }
  };
  var genericIxStep = {
      to: function (x) {
          return new IxStep(x.value0, x.value1);
      },
      from: function (x) {
          return new Data_Generic_Rep.Product(x.value0, x.value1);
      }
  };
  var showIxStep = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericIxStep)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(showIxStepLabel))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt)))({
              reflectSymbol: function () {
                  return "IxStep";
              }
          }))(x);
      }
  };
  var genericIxDown = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showIxDown = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericIxDown)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_List_Types.showList(showIxStep)))({
              reflectSymbol: function () {
                  return "IxDown";
              }
          }))(x);
      }
  };
  var eqIxStepLabel = {
      eq: function (x) {
          return Data_Eq_Generic.genericEq(genericIxStepLabel)(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments))(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments)))))))))))))))(x);
      }
  };
  var ordIxStepLabel = {
      compare: function (x) {
          return function (y) {
              return Data_Ord_Generic.genericCompare(genericIxStepLabel)(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdSum(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments))(Data_Ord_Generic.genericOrdConstructor(Data_Ord_Generic.genericOrdNoArguments)))))))))))))))(x)(y);
          };
      },
      Eq0: function () {
          return eqIxStepLabel;
      }
  };
  var eqIxStep = {
      eq: function (x) {
          return Data_Eq_Generic.genericEq(genericIxStep)(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqProduct(Data_Eq_Generic.genericEqArgument(eqIxStepLabel))(Data_Eq_Generic.genericEqArgument(Data_Eq.eqInt))))(x);
      }
  };                                            
  var isSuperIxDown = function (v) {
      return function (v1) {
          return Data_Foldable.and(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_List.zipWith(Data_Eq.eq(eqIxStep))(v)(v1)) && Data_List.length(v) >= Data_List.length(v1);
      };
  };
  var eqIxDown = Data_List_Types.eqList(eqIxStep);
  var enumIxStepLabel = {
      succ: function (x) {
          return Data_Enum_Generic.genericSucc(genericIxStepLabel)(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments)))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(x);
      },
      pred: function (x) {
          return Data_Enum_Generic.genericPred(genericIxStepLabel)(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumSum(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))(Data_Enum_Generic.genericEnumConstructor(Data_Enum_Generic.genericEnumNoArguments))(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments)))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))))(x);
      },
      Ord0: function () {
          return ordIxStepLabel;
      }
  };
  var boundedIxStepLabel = {
      top: Data_Bounded_Generic.genericTop(genericIxStepLabel)(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopSum(Data_Bounded_Generic.genericTopConstructor(Data_Bounded_Generic.genericTopNoArguments))))))))))))))),
      bottom: Data_Bounded_Generic.genericBottom(genericIxStepLabel)(Data_Bounded_Generic.genericBottomSum(Data_Bounded_Generic.genericBottomConstructor(Data_Bounded_Generic.genericBottomNoArguments))),
      Ord0: function () {
          return ordIxStepLabel;
      }
  };
  var boundedEnumStepLabel = {
      cardinality: Data_Enum_Generic.genericCardinality(genericIxStepLabel)(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))))))))))))))),
      toEnum: function (x) {
          return Data_Enum_Generic.genericToEnum(genericIxStepLabel)(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments)))))))))))))))(x);
      },
      fromEnum: function (x) {
          return Data_Enum_Generic.genericFromEnum(genericIxStepLabel)(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumSum(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments))(Data_Enum_Generic.genericBoundedEnumConstructor(Data_Enum_Generic.genericBoundedEnumNoArguments)))))))))))))))(x);
      },
      Bounded0: function () {
          return boundedIxStepLabel;
      },
      Enum1: function () {
          return enumIxStepLabel;
      }
  };
  var hashIxStepLabel = function (l) {
      return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(boundedEnumStepLabel)(l));
  };
  var hashIxStep = function (v) {
      return hashIxStepLabel(v.value0) + Data_Show.show(Data_Show.showInt)(v.value1);
  };
  var hashIxUp = function (v) {
      return "ixUp:" + Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(function ($141) {
          return (function (v1) {
              return v1 + " ";
          })(hashIxStep($141));
      })(v);
  };
  exports["nilIxUp"] = nilIxUp;
  exports["nilIxDown"] = nilIxDown;
  exports["toIxDown"] = toIxDown;
  exports["IxStep"] = IxStep;
  exports["IxStepArrowType"] = IxStepArrowType;
  exports["IxStepLam"] = IxStepLam;
  exports["IxStepNeu"] = IxStepNeu;
  exports["IxStepLet"] = IxStepLet;
  exports["IxStepBuf"] = IxStepBuf;
  exports["IxStepData"] = IxStepData;
  exports["IxStepMatch"] = IxStepMatch;
  exports["IxStepArgItem"] = IxStepArgItem;
  exports["IxStepSumItem"] = IxStepSumItem;
  exports["IxStepCaseItem"] = IxStepCaseItem;
  exports["IxStepParamItem"] = IxStepParamItem;
  exports["IxStepTermBindItem"] = IxStepTermBindItem;
  exports["IxStepList"] = IxStepList;
  exports["ixStepArrowType"] = ixStepArrowType;
  exports["ixStepLam"] = ixStepLam;
  exports["ixStepNeu"] = ixStepNeu;
  exports["ixStepLet"] = ixStepLet;
  exports["ixStepBuf"] = ixStepBuf;
  exports["ixStepData"] = ixStepData;
  exports["ixStepMatch"] = ixStepMatch;
  exports["ixStepArgItem"] = ixStepArgItem;
  exports["ixStepSumItem"] = ixStepSumItem;
  exports["ixStepCaseItem"] = ixStepCaseItem;
  exports["ixStepParamItem"] = ixStepParamItem;
  exports["ixStepTermBindItem"] = ixStepTermBindItem;
  exports["ixStepList"] = ixStepList;
  exports["ixDownListItem"] = ixDownListItem;
  exports["isSuperIxDown"] = isSuperIxDown;
  exports["hashIxUp"] = hashIxUp;
  exports["showIxDown"] = showIxDown;
  exports["eqIxDown"] = eqIxDown;
  exports["eqIxStep"] = eqIxStep;
  exports["eqIxStepLabel"] = eqIxStepLabel;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Unsafe"] = $PS["Unsafe"] || {};
  var exports = $PS["Unsafe"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Partial = $PS["Partial"];                
  var error = function (msg) {
      return Partial.crashWith()(msg);
  };
  var fromJust = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return v.value0;
      };
      if (v instanceof Data_Maybe.Nothing) {
          return error("fromJust: Nothing");
      };
      throw new Error("Failed pattern match at Unsafe (line 16, column 12 - line 18, column 45): " + [ v.constructor.name ]);
  };
  exports["error"] = error;
  exports["fromJust"] = fromJust;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Syntax.TreeView"] = $PS["Language.Shape.Stlc.Syntax.TreeView"] || {};
  var exports = $PS["Language.Shape.Stlc.Syntax.TreeView"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Language_Shape_Stlc_Index = $PS["Language.Shape.Stlc.Index"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Unsafe = $PS["Unsafe"];                
  var untilAfterList = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Unsafe.error("shouldn't get here 23o4234932");
      };
      if (v instanceof Data_List_Types.Cons && v.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepList) {
          var v1 = untilAfterList(v.value1);
          return new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepList.value, v.value0.value1), v1.value0), v1.value1);
      };
      return new Data_Tuple.Tuple(Data_List_Types.Nil.value, v);
  };
  var one = function (x) {
      return new Data_List_Types.Cons(x, Data_List_Types.Nil.value);
  };
  var popIndex = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons && v.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepList) {
          var v1 = untilAfterList(Data_Newtype.unwrap()(v));
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v1.value0, v1.value1));
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(one(new Language_Shape_Stlc_Index.IxStep(v.value0.value0, v.value0.value1)), v.value1));
      };
      throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.TreeView (line 84, column 1 - line 84, column 54): " + [ v.constructor.name ]);
  };
  var getChildren = function (v) {
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxType && v.value0 instanceof Language_Shape_Stlc_Syntax.ArrowType) {
          return new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxType(v.value0.value0.dom), one(Language_Shape_Stlc_Index.ixStepArrowType.dom)), new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxType(v.value0.value0.cod), one(Language_Shape_Stlc_Index.ixStepArrowType.cod)), Data_List_Types.Nil.value));
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxType && v.value0 instanceof Language_Shape_Stlc_Syntax.DataType) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxType && v.value0 instanceof Language_Shape_Stlc_Syntax.HoleType) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && v.value0 instanceof Language_Shape_Stlc_Syntax.Lam) {
          return new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTermBind(v.value0.value0.termBind), one(Language_Shape_Stlc_Index.ixStepLam.termBind)), new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTerm(v.value0.value0.body), one(Language_Shape_Stlc_Index.ixStepLam.body)), Data_List_Types.Nil.value));
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && v.value0 instanceof Language_Shape_Stlc_Syntax.Let) {
          return new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTermBind(v.value0.value0.termBind), one(Language_Shape_Stlc_Index.ixStepLet.termBind)), new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxType(v.value0.value0.sign), one(Language_Shape_Stlc_Index.ixStepLet.sign)), new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTerm(v.value0.value0.impl), one(Language_Shape_Stlc_Index.ixStepLet.impl)), new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTerm(v.value0.value0.body), one(Language_Shape_Stlc_Index.ixStepLet.body)), Data_List_Types.Nil.value))));
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && v.value0 instanceof Language_Shape_Stlc_Syntax.Neu) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(one(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTermId(v.value0.value0.termId), one(Language_Shape_Stlc_Index.ixStepNeu.termId))))(Data_List.mapWithIndex(function (n) {
              return function (v1) {
                  return new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTerm(v1.term), Data_Semigroup.append(Data_List_Types.semigroupList)(Data_Newtype.unwrap()(Language_Shape_Stlc_Index.ixDownListItem(n)))(one(Language_Shape_Stlc_Index.ixStepArgItem.term)));
              };
          })(v.value0.value0.argItems));
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && v.value0 instanceof Language_Shape_Stlc_Syntax.Buf) {
          return new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxType(v.value0.value0.sign), one(Language_Shape_Stlc_Index.ixStepBuf.sign)), new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTerm(v.value0.value0.impl), one(Language_Shape_Stlc_Index.ixStepBuf.impl)), new Data_List_Types.Cons(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTerm(v.value0.value0.body), one(Language_Shape_Stlc_Index.ixStepBuf.body)), Data_List_Types.Nil.value)));
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && v.value0 instanceof Language_Shape_Stlc_Syntax.Data) {
          return one(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTypeBind(v.value0.value0.typeBind), one(Language_Shape_Stlc_Index.ixStepData.typeBind)));
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && v.value0 instanceof Language_Shape_Stlc_Syntax.Match) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(one(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTerm(v.value0.value0.term), one(Language_Shape_Stlc_Index.ixStepMatch.term))))(Data_List.mapWithIndex(function (n) {
              return function (caseItem) {
                  return new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxCaseItem(caseItem), Data_Newtype.unwrap()(Language_Shape_Stlc_Index.ixDownListItem(n)));
              };
          })(v.value0.value0.caseItems));
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && v.value0 instanceof Language_Shape_Stlc_Syntax.Hole) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTermBind) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTermId) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTypeBind) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxArgItem) {
          return Unsafe.error("shouldn't get here because skips over the ArgItem case in the Neu case");
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxSumItem) {
          return Unsafe.error("not implemented yet");
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxCaseItem) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(Data_List.mapWithIndex(function (n) {
              return function (termBindItem) {
                  return new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTermBindItem(termBindItem), new Data_List_Types.Cons(Language_Shape_Stlc_Index.ixStepCaseItem.termBindItems, Data_Newtype.unwrap()(Language_Shape_Stlc_Index.ixDownListItem(n))));
              };
          })(v.value0.termBindItems))(one(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.SyntaxTerm(v.value0.body), one(Language_Shape_Stlc_Index.ixStepCaseItem.body))));
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxParamItem) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTermBindItem) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.SyntaxList) {
          return Unsafe.error(" shouldn't get here unless I messed something up");
      };
      throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.TreeView (line 42, column 1 - line 42, column 56): " + [ v.constructor.name ]);
  };
  var nextChild = function (syn) {
      return function (child) {
          var children = getChildren(syn);
          var v = Data_List.findIndex(function (v1) {
              return Data_Eq.eq(Data_List_Types.eqList(Language_Shape_Stlc_Index.eqIxStep))(v1.value1)(child);
          })(children);
          if (v instanceof Data_Maybe.Nothing) {
              return Unsafe.error("child doesn't exist");
          };
          if (v instanceof Data_Maybe.Just) {
              var v1 = Data_List.index(children)(v.value0 + 1 | 0);
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Data_Maybe.Nothing.value;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return new Data_Maybe.Just(v1.value0.value1);
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.TreeView (line 103, column 28 - line 105, column 74): " + [ v1.constructor.name ]);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.TreeView (line 101, column 8 - line 105, column 74): " + [ v.constructor.name ]);
      };
  };
  var childAtStep = function (syn) {
      return function (idx) {
          var children = getChildren(syn);
          var v = Data_Foldable.find(Data_List_Types.foldableList)(function (v1) {
              return Data_Eq.eq(Data_List_Types.eqList(Language_Shape_Stlc_Index.eqIxStep))(v1.value1)(idx);
          })(children);
          if (v instanceof Data_Maybe.Nothing) {
              return Unsafe.error("child doesn't exist");
          };
          if (v instanceof Data_Maybe.Just) {
              return v.value0.value0;
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.TreeView (line 110, column 8 - line 112, column 35): " + [ v.constructor.name ]);
      };
  };
  exports["popIndex"] = popIndex;
  exports["nextChild"] = nextChild;
  exports["childAtStep"] = childAtStep;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["KeyboardCursor"] = $PS["KeyboardCursor"] || {};
  var exports = $PS["KeyboardCursor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Language_Shape_Stlc_Syntax_TreeView = $PS["Language.Shape.Stlc.Syntax.TreeView"];
  var Unsafe = $PS["Unsafe"];                
  var stepCursorForwards = function (syn) {
      return function (idx) {
          var v = Language_Shape_Stlc_Syntax_TreeView.popIndex(idx);
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Maybe.Nothing.value;
          };
          if (v instanceof Data_Maybe.Just) {
              var child = Language_Shape_Stlc_Syntax_TreeView.childAtStep(syn)(v.value0.value0);
              var tryInChild = stepCursorForwards(child)(v.value0.value1);
              if (tryInChild instanceof Data_Maybe.Just) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_List_Types.semigroupList)(v.value0.value0)(tryInChild.value0));
              };
              if (tryInChild instanceof Data_Maybe.Nothing) {
                  var nextChildStep = Language_Shape_Stlc_Syntax_TreeView.nextChild(syn)(v.value0.value0);
                  if (nextChildStep instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just(v.value0.value0);
                  };
                  if (nextChildStep instanceof Data_Maybe.Nothing) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at KeyboardCursor (line 34, column 13 - line 36, column 31): " + [ nextChildStep.constructor.name ]);
              };
              throw new Error("Failed pattern match at KeyboardCursor (line 30, column 9 - line 36, column 31): " + [ tryInChild.constructor.name ]);
          };
          throw new Error("Failed pattern match at KeyboardCursor (line 24, column 7 - line 36, column 31): " + [ v.constructor.name ]);
      };
  };
  var stepCursorBackwards = function (v) {
      return function (v1) {
          return Unsafe.error("not implemnted yet");
      };
  };
  exports["stepCursorForwards"] = stepCursorForwards;
  exports["stepCursorBackwards"] = stepCursorBackwards;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var gets = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(f(s), s);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["get"] = get;
  exports["gets"] = gets;
  exports["put"] = put;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];                    
  var StateT = function (x) {
      return x;
  };
  var functorStateT = function (dictFunctor) {
      return {
          map: function (f) {
              return function (v) {
                  return function (s) {
                      return Data_Functor.map(dictFunctor)(function (v1) {
                          return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                      })(v(s));
                  };
              };
          }
      };
  };
  var monadStateT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeStateT(dictMonad);
          },
          Bind1: function () {
              return bindStateT(dictMonad);
          }
      };
  };
  var bindStateT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (f) {
                  return function (s) {
                      return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                          var v3 = f(v1.value0);
                          return v3(v1.value1);
                      });
                  };
              };
          },
          Apply0: function () {
              return applyStateT(dictMonad);
          }
      };
  };
  var applyStateT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadStateT(dictMonad)),
          Functor0: function () {
              return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeStateT = function (dictMonad) {
      return {
          pure: function (a) {
              return function (s) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
              };
          },
          Apply0: function () {
              return applyStateT(dictMonad);
          }
      };
  };
  var monadStateStateT = function (dictMonad) {
      return {
          state: function (f) {
              return StateT((function () {
                  var $113 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($114) {
                      return $113(f($114));
                  };
              })());
          },
          Monad0: function () {
              return monadStateT(dictMonad);
          }
      };
  };
  exports["functorStateT"] = functorStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];              
  var Identity = function (x) {
      return x;
  };
  var functorIdentity = {
      map: function (f) {
          return function (m) {
              return f(m);
          };
      }
  };
  var applyIdentity = {
      apply: function (v) {
          return function (v1) {
              return v(v1);
          };
      },
      Functor0: function () {
          return functorIdentity;
      }
  };
  var bindIdentity = {
      bind: function (v) {
          return function (f) {
              return f(v);
          };
      },
      Apply0: function () {
          return applyIdentity;
      }
  };
  var applicativeIdentity = {
      pure: Identity,
      Apply0: function () {
          return applyIdentity;
      }
  };
  var monadIdentity = {
      Applicative0: function () {
          return applicativeIdentity;
      },
      Bind1: function () {
          return bindIdentity;
      }
  };
  exports["functorIdentity"] = functorIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeUnionFn = function(r1, r2) {
    var copy = {};
    for (var k1 in r2) {
      if ({}.hasOwnProperty.call(r2, k1)) {
        copy[k1] = r2[k1];
      }
    }
    for (var k2 in r1) {
      if ({}.hasOwnProperty.call(r1, k2)) {
        copy[k2] = r1[k2];
      }
    }
    return copy;
  };
})(PS["Record.Unsafe.Union"] = PS["Record.Unsafe.Union"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Record.Unsafe.Union"] = $PS["Record.Unsafe.Union"] || {};
  var exports = $PS["Record.Unsafe.Union"];
  var $foreign = $PS["Record.Unsafe.Union"];
  exports["unsafeUnionFn"] = $foreign.unsafeUnionFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Record_Unsafe_Union = $PS["Record.Unsafe.Union"];    
  var union = function (dictUnion) {
      return function (l) {
          return function (r) {
              return Record_Unsafe_Union.unsafeUnionFn(l, r);
          };
      };
  };
  var set = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (b) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
                      };
                  };
              };
          };
      };
  };
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  var modify = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (f) {
                      return function (r) {
                          return set(dictIsSymbol)()()(l)(f(get(dictIsSymbol)()(l)(r)))(r);
                      };
                  };
              };
          };
      };
  };
  var $$delete = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (r) {
                      return Record_Unsafe.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
                  };
              };
          };
      };
  };
  exports["get"] = get;
  exports["set"] = set;
  exports["modify"] = modify;
  exports["delete"] = $$delete;
  exports["union"] = union;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Context"] = $PS["Language.Shape.Stlc.Context"] || {};
  var exports = $PS["Language.Shape.Stlc.Context"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Default = $PS["Data.Default"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_OrderedMap = $PS["Data.OrderedMap"];
  var Data_Show = $PS["Data.Show"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var Context = function (x) {
      return x;
  };
  var unflattenType = function (v) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(function (cod1) {
          return function (dom) {
              return new Language_Shape_Stlc_Syntax.ArrowType({
                  dom: dom,
                  cod: cod1,
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultArrowTypeMetadata)
              });
          };
      })(v.cod)(v.doms);
  };
  var typeOfSumItem = function (typeId) {
      return function (sumItem) {
          return unflattenType({
              doms: Data_Functor.map(Data_List_Types.functorList)(function (v) {
                  return v.type_;
              })(sumItem.paramItems),
              cod: new Language_Shape_Stlc_Syntax.DataType({
                  typeId: typeId,
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultDataTypeMetadata)
              })
          });
      };
  };
  var showContext = Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "constrDataTypes";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "datas";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "varTypes";
      }
  })(Data_Show.showRecordFieldsNil)(Data_OrderedMap.showOrderedMap(Language_Shape_Stlc_Syntax.showTermId)(Language_Shape_Stlc_Syntax.showType)))(Data_OrderedMap.showOrderedMap(Language_Shape_Stlc_Syntax.showTypeId)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "body";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "meta";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "sumItems";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "typeBind";
      }
  })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "meta";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "typeId";
      }
  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTypeId))(Language_Shape_Stlc_Metadata.showTypeBindMetadata))))(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "meta";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "paramItems";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "termBind";
      }
  })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "meta";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "termId";
      }
  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "meta";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "type_";
      }
  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showType))(Language_Shape_Stlc_Metadata.showParamItemMetadata)))))(Language_Shape_Stlc_Metadata.showSumItemMetadata)))))(Language_Shape_Stlc_Metadata.showDataMetadata))(Language_Shape_Stlc_Syntax.showTerm)))))(Data_OrderedMap.showOrderedMap(Language_Shape_Stlc_Syntax.showTermId)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "meta";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "typeId";
      }
  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTypeId))(Language_Shape_Stlc_Metadata.showDataTypeMetadata)))));
  var lookupVarType = function (termId) {
      return function (ctx) {
          var v = Data_OrderedMap.lookup(Language_Shape_Stlc_Syntax.eqTermId)(termId)((Data_Newtype.unwrap()(ctx)).varTypes);
          if (v instanceof Data_Maybe.Just) {
              return v.value0;
          };
          if (v instanceof Data_Maybe.Nothing) {
              return Partial_Unsafe.unsafeCrashWith("could not find TermId " + (Data_Show.show(Language_Shape_Stlc_Syntax.showTermId)(termId) + (" in context " + Data_Show.show(showContext)(ctx))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Context (line 64, column 28 - line 66, column 101): " + [ v.constructor.name ]);
      };
  };
  var lookupData = function (typeId) {
      return function (ctx) {
          var v = Data_OrderedMap.lookup(Language_Shape_Stlc_Syntax.eqTypeId)(typeId)((Data_Newtype.unwrap()(ctx)).datas);
          if (v instanceof Data_Maybe.Just) {
              return v.value0;
          };
          if (v instanceof Data_Maybe.Nothing) {
              return Partial_Unsafe.unsafeCrashWith("could not find TypeId " + (Data_Show.show(Language_Shape_Stlc_Syntax.showTypeId)(typeId) + (" in context " + Data_Show.show(showContext)(ctx))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Context (line 56, column 25 - line 58, column 101): " + [ v.constructor.name ]);
      };
  };
  var flattenType = function (type_) {
      if (type_ instanceof Language_Shape_Stlc_Syntax.ArrowType) {
          return Record.modify({
              reflectSymbol: function () {
                  return "doms";
              }
          })()()(Type_Proxy["Proxy"].value)(function (v) {
              return new Data_List_Types.Cons(type_.value0.dom, v);
          })(flattenType(type_.value0.cod));
      };
      return {
          doms: Data_List_Types.Nil.value,
          cod: type_
      };
  };
  var defaultContext = {
      "default": {
          datas: Data_OrderedMap.empty,
          varTypes: Data_OrderedMap.empty,
          constrDataTypes: Data_OrderedMap.empty
      }
  };
  var _varTypes = Type_Proxy["Proxy"].value;
  var insertVarType = function (termId) {
      return function (type_) {
          return Data_Newtype.over()()(Context)(Record.modify({
              reflectSymbol: function () {
                  return "varTypes";
              }
          })()()(_varTypes)(Data_OrderedMap.insert(Language_Shape_Stlc_Syntax.eqTermId)(termId)(type_)));
      };
  };
  var _datas = Type_Proxy["Proxy"].value;
  var _constrDataTypes = Type_Proxy["Proxy"].value;
  var insertConstrDataType = function (termId) {
      return function (dataType) {
          return Data_Newtype.over()()(Context)(Record.modify({
              reflectSymbol: function () {
                  return "constrDataTypes";
              }
          })()()(_constrDataTypes)(Data_OrderedMap.insert(Language_Shape_Stlc_Syntax.eqTermId)(termId)(dataType)));
      };
  };
  var insertData = function (data_) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn))(Control_Category.identity(Control_Category.categoryFn))([ Data_Newtype.over()()(Context)(Record.modify({
          reflectSymbol: function () {
              return "datas";
          }
      })()()(_datas)(Data_OrderedMap.insert(Language_Shape_Stlc_Syntax.eqTypeId)(data_.typeBind.typeId)(data_))), Data_Foldable.foldr(Data_List_Types.foldableList)(function (sumItem) {
          return function (f) {
              var $16 = insertVarType(sumItem.termBind.termId)(typeOfSumItem(data_.typeBind.typeId)(sumItem));
              return function ($17) {
                  return f($16($17));
              };
          };
      })(Control_Category.identity(Control_Category.categoryFn))(data_.sumItems), Data_Foldable.foldr(Data_List_Types.foldableList)(function (sumItem) {
          return function (f) {
              var $18 = insertConstrDataType(sumItem.termBind.termId)({
                  typeId: data_.typeBind.typeId,
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultDataTypeMetadata)
              });
              return function ($19) {
                  return f($18($19));
              };
          };
      })(Control_Category.identity(Control_Category.categoryFn))(data_.sumItems) ]);
  };
  exports["insertData"] = insertData;
  exports["lookupData"] = lookupData;
  exports["insertVarType"] = insertVarType;
  exports["lookupVarType"] = lookupVarType;
  exports["flattenType"] = flattenType;
  exports["typeOfSumItem"] = typeOfSumItem;
  exports["defaultContext"] = defaultContext;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Hole"] = $PS["Language.Shape.Stlc.Hole"] || {};
  var exports = $PS["Language.Shape.Stlc.Hole"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];                
  var subType = function (sub) {
      return function (v) {
          if (v instanceof Language_Shape_Stlc_Syntax.ArrowType) {
              return new Language_Shape_Stlc_Syntax.ArrowType({
                  dom: subType(sub)(v.value0.dom),
                  cod: subType(sub)(v.value0.cod),
                  meta: v.value0.meta
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.DataType) {
              return new Language_Shape_Stlc_Syntax.DataType(v.value0);
          };
          if (v instanceof Language_Shape_Stlc_Syntax.HoleType) {
              var v1 = Data_Map_Internal.lookup(Language_Shape_Stlc_Syntax.ordHoleId)(v.value0.holeId)(sub);
              if (v1 instanceof Data_Maybe.Nothing) {
                  return new Language_Shape_Stlc_Syntax.HoleType({
                      holeId: v.value0.holeId,
                      weakening: v.value0.weakening,
                      meta: v.value0.meta
                  });
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v1.value0;
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Hole (line 38, column 52 - line 40, column 14): " + [ v1.constructor.name ]);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Hole (line 34, column 1 - line 34, column 35): " + [ sub.constructor.name, v.constructor.name ]);
      };
  };
  var unifyType = function (v) {
      return function (v1) {
          if (v instanceof Language_Shape_Stlc_Syntax.HoleType) {
              return Data_Maybe.Just.create(Data_Map_Internal.singleton(v.value0.holeId)(v1));
          };
          if (v1 instanceof Language_Shape_Stlc_Syntax.HoleType) {
              return unifyType(new Language_Shape_Stlc_Syntax.HoleType(v1.value0))(v);
          };
          if (v instanceof Language_Shape_Stlc_Syntax.ArrowType && v1 instanceof Language_Shape_Stlc_Syntax.ArrowType) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(unifyType(v.value0.dom)(v1.value0.dom))(function (a) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(unifyType(subType(a)(v.value0.cod))(subType(a)(v1.value0.cod)))(function (b) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Map_Internal.union(Language_Shape_Stlc_Syntax.ordHoleId)(a)(b));
                  });
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.DataType && v1 instanceof Language_Shape_Stlc_Syntax.DataType) {
              var $37 = Data_Eq.eq(Language_Shape_Stlc_Syntax.eqTypeId)(v.value0.typeId)(v1.value0.typeId);
              if ($37) {
                  return new Data_Maybe.Just(Data_Map_Internal.empty);
              };
              return Data_Maybe.Nothing.value;
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var subParamItem = function (sub) {
      return function (v) {
          return {
              type_: subType(sub)(v.type_),
              meta: v.meta
          };
      };
  };
  var subSumItem = function (sub) {
      return function (v) {
          return {
              termBind: v.termBind,
              paramItems: Data_Functor.map(Data_List_Types.functorList)(subParamItem(sub))(v.paramItems),
              meta: v.meta
          };
      };
  };
  var subTerm = function (sub) {
      return function (v) {
          if (v instanceof Language_Shape_Stlc_Syntax.Lam) {
              return new Language_Shape_Stlc_Syntax.Lam({
                  termBind: v.value0.termBind,
                  body: subTerm(sub)(v.value0.body),
                  meta: v.value0.meta
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.Neu) {
              return new Language_Shape_Stlc_Syntax.Neu({
                  termId: v.value0.termId,
                  argItems: Data_Functor.map(Data_List_Types.functorList)(subArgItem(sub))(v.value0.argItems),
                  meta: v.value0.meta
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.Let) {
              return new Language_Shape_Stlc_Syntax.Let({
                  termBind: v.value0.termBind,
                  sign: subType(sub)(v.value0.sign),
                  impl: subTerm(sub)(v.value0.impl),
                  body: subTerm(sub)(v.value0.body),
                  meta: v.value0.meta
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.Buf) {
              return new Language_Shape_Stlc_Syntax.Buf({
                  sign: subType(sub)(v.value0.sign),
                  impl: subTerm(sub)(v.value0.impl),
                  body: subTerm(sub)(v.value0.body),
                  meta: v.value0.meta
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.Data) {
              return new Language_Shape_Stlc_Syntax.Data({
                  typeBind: v.value0.typeBind,
                  sumItems: Data_Functor.map(Data_List_Types.functorList)(subSumItem(sub))(v.value0.sumItems),
                  body: subTerm(sub)(v.value0.body),
                  meta: v.value0.meta
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.Match) {
              return new Language_Shape_Stlc_Syntax.Match({
                  typeId: v.value0.typeId,
                  term: subTerm(sub)(v.value0.term),
                  caseItems: Data_Functor.map(Data_List_Types.functorList)(subCase(sub))(v.value0.caseItems),
                  meta: v.value0.meta
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.Hole) {
              return new Language_Shape_Stlc_Syntax.Hole({
                  meta: v.value0.meta
              });
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Hole (line 69, column 1 - line 69, column 35): " + [ sub.constructor.name, v.constructor.name ]);
      };
  };
  var subCase = function (sub) {
      return function (v) {
          return {
              termBindItems: v.termBindItems,
              body: subTerm(sub)(v.body),
              meta: v.meta
          };
      };
  };
  var subArgItem = function (sub) {
      return function (v) {
          return {
              term: subTerm(sub)(v.term),
              meta: v.meta
          };
      };
  };
  var restrictToFull = function (sub) {
      return Data_Functor.map(Data_Map_Internal.functorMap)(Language_Shape_Stlc_Syntax.HoleType.create)(sub);
  };
  var unifyTypeRestricted = function (v) {
      return function (v1) {
          if (v instanceof Language_Shape_Stlc_Syntax.HoleType && v1 instanceof Language_Shape_Stlc_Syntax.HoleType) {
              var $95 = Data_Eq.eq(Language_Shape_Stlc_Syntax.eqHoleId)(v.value0.holeId)(v1.value0.holeId);
              if ($95) {
                  return Data_Maybe.Just.create(Data_Map_Internal.singleton(v.value0.holeId)(v1.value0));
              };
              return Data_Maybe.Nothing.value;
          };
          if (v1 instanceof Language_Shape_Stlc_Syntax.HoleType) {
              return unifyTypeRestricted(new Language_Shape_Stlc_Syntax.HoleType(v1.value0))(v);
          };
          if (v instanceof Language_Shape_Stlc_Syntax.ArrowType && v1 instanceof Language_Shape_Stlc_Syntax.ArrowType) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(unifyTypeRestricted(v.value0.dom)(v1.value0.dom))(function (a) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(unifyTypeRestricted(subType(restrictToFull(a))(v.value0.cod))(subType(restrictToFull(a))(v1.value0.cod)))(function (b) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Map_Internal.union(Language_Shape_Stlc_Syntax.ordHoleId)(a)(b));
                  });
              });
          };
          if (v instanceof Language_Shape_Stlc_Syntax.DataType && v1 instanceof Language_Shape_Stlc_Syntax.DataType) {
              var $109 = Data_Eq.eq(Language_Shape_Stlc_Syntax.eqTypeId)(v.value0.typeId)(v1.value0.typeId);
              if ($109) {
                  return new Data_Maybe.Just(Data_Map_Internal.empty);
              };
              return Data_Maybe.Nothing.value;
          };
          return Data_Maybe.Nothing.value;
      };
  };                                         
  var emptyHoleEq = Data_Map_Internal.empty;
  exports["emptyHoleEq"] = emptyHoleEq;
  exports["subType"] = subType;
  exports["unifyType"] = unifyType;
  exports["unifyTypeRestricted"] = unifyTypeRestricted;
  exports["subTerm"] = subTerm;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Recursor.Proxy"] = $PS["Language.Shape.Stlc.Recursor.Proxy"] || {};
  var exports = $PS["Language.Shape.Stlc.Recursor.Proxy"];
  var Type_Proxy = $PS["Type.Proxy"];    
  var _type_ = Type_Proxy["Proxy"].value;
  var _typeId = Type_Proxy["Proxy"].value;
  var _typeBind = Type_Proxy["Proxy"].value;
  var _termId = Type_Proxy["Proxy"].value;       
  var _termBindItem = Type_Proxy["Proxy"].value;
  var _termBind = Type_Proxy["Proxy"].value;
  var _term = Type_Proxy["Proxy"].value;    
  var _sumItem = Type_Proxy["Proxy"].value;
  var _sign = Type_Proxy["Proxy"].value;      
  var _paramItem = Type_Proxy["Proxy"].value;
  var _impl = Type_Proxy["Proxy"].value;
  var _dom = Type_Proxy["Proxy"].value;
  var _cod = Type_Proxy["Proxy"].value;      
  var _caseItem = Type_Proxy["Proxy"].value;
  var _body = Type_Proxy["Proxy"].value;
  var _argItems = Type_Proxy["Proxy"].value;
  var _argItem = Type_Proxy["Proxy"].value;
  var _alpha = Type_Proxy["Proxy"].value;
  exports["_type_"] = _type_;
  exports["_term"] = _term;
  exports["_alpha"] = _alpha;
  exports["_argItem"] = _argItem;
  exports["_caseItem"] = _caseItem;
  exports["_sumItem"] = _sumItem;
  exports["_paramItem"] = _paramItem;
  exports["_termBindItem"] = _termBindItem;
  exports["_typeId"] = _typeId;
  exports["_typeBind"] = _typeBind;
  exports["_termBind"] = _termBind;
  exports["_dom"] = _dom;
  exports["_cod"] = _cod;
  exports["_body"] = _body;
  exports["_termId"] = _termId;
  exports["_argItems"] = _argItems;
  exports["_sign"] = _sign;
  exports["_impl"] = _impl;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Recursor.Syntax"] = $PS["Language.Shape.Stlc.Recursor.Syntax"] || {};
  var exports = $PS["Language.Shape.Stlc.Recursor.Syntax"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Language_Shape_Stlc_Recursor_Proxy = $PS["Language.Shape.Stlc.Recursor.Proxy"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Record = $PS["Record"];                
  var recTypeBind = function (dictLacks) {
      return function (rec) {
          return function (args) {
              return rec.typeBind(Record.union()({
                  typeId: Record.union()({
                      typeId: args.typeBind.typeId
                  })(Record["delete"]({
                      reflectSymbol: function () {
                          return "typeBind";
                      }
                  })()()(Language_Shape_Stlc_Recursor_Proxy["_typeBind"])(args))
              })(args));
          };
      };
  };
  var recType = function (dictLacks) {
      return function (rec) {
          return function (args) {
              var prune = Record["delete"]({
                  reflectSymbol: function () {
                      return "type_";
                  }
              })()()(Language_Shape_Stlc_Recursor_Proxy["_type_"]);
              if (args.type_ instanceof Language_Shape_Stlc_Syntax.ArrowType) {
                  return rec.arrowType(Record.union()({
                      arrowType: args.type_.value0,
                      dom: Record.union()({
                          type_: args.type_.value0.dom
                      })(prune(args)),
                      cod: Record.union()({
                          type_: args.type_.value0.cod
                      })(prune(args))
                  })(prune(args)));
              };
              if (args.type_ instanceof Language_Shape_Stlc_Syntax.DataType) {
                  return rec.dataType(Record.union()({
                      dataType: args.type_.value0,
                      typeId: Record.union()({
                          typeId: args.type_.value0.typeId
                      })(prune(args))
                  })(prune(args)));
              };
              if (args.type_ instanceof Language_Shape_Stlc_Syntax.HoleType) {
                  return rec.holeType(Record.union()({
                      holeType: args.type_.value0,
                      holeId: Record.union()({
                          holeId: args.type_.value0.holeId
                      })(prune(args))
                  })(prune(args)));
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Recursor.Syntax (line 37, column 20 - line 59, column 19): " + [ args.type_.constructor.name ]);
          };
      };
  };
  var recTermBindItem = function (dictLacks) {
      return function (rec) {
          return function (args) {
              var prune = Record["delete"]({
                  reflectSymbol: function () {
                      return "termBindItem";
                  }
              })()()(Language_Shape_Stlc_Recursor_Proxy["_termBindItem"]);
              return rec.termBindItem(Record.union()({
                  termBind: Record.union()({
                      termBind: args.termBindItem.termBind
                  })(prune(args))
              })(args));
          };
      };
  };
  var recTermBind = function (dictLacks) {
      return function (rec) {
          return function (args) {
              return rec.termBind(Record.union()({
                  termId: Record.union()({
                      termId: args.termBind.termId
                  })(Record["delete"]({
                      reflectSymbol: function () {
                          return "termBind";
                      }
                  })()()(Language_Shape_Stlc_Recursor_Proxy["_termBind"])(args))
              })(args));
          };
      };
  };
  var recTerm = function (dictLacks) {
      return function (rec) {
          return function (args) {
              var prune = Record["delete"]({
                  reflectSymbol: function () {
                      return "term";
                  }
              })()()(Language_Shape_Stlc_Recursor_Proxy["_term"]);
              if (args.term instanceof Language_Shape_Stlc_Syntax.Lam) {
                  return rec.lam(Record.union()({
                      lam: args.term.value0,
                      termBind: Record.union()({
                          termBind: args.term.value0.termBind
                      })(prune(args)),
                      body: Record.union()({
                          term: args.term.value0.body
                      })(prune(args))
                  })(prune(args)));
              };
              if (args.term instanceof Language_Shape_Stlc_Syntax.Neu) {
                  return rec.neu(Record.union()({
                      neu: args.term.value0,
                      termId: Record.union()({
                          termId: args.term.value0.termId
                      })(prune(args)),
                      argItems: Data_Functor.map(Data_List_Types.functorList)(function (argItem) {
                          return Record.union()({
                              argItem: argItem
                          })(prune(args));
                      })(args.term.value0.argItems)
                  })(prune(args)));
              };
              if (args.term instanceof Language_Shape_Stlc_Syntax.Let) {
                  return rec.let_(Record.union()({
                      let_: args.term.value0,
                      termBind: Record.union()({
                          termBind: args.term.value0.termBind
                      })(prune(args)),
                      sign: Record.union()({
                          type_: args.term.value0.sign
                      })(prune(args)),
                      impl: Record.union()({
                          term: args.term.value0.impl
                      })(prune(args)),
                      body: Record.union()({
                          term: args.term.value0.body
                      })(prune(args))
                  })(prune(args)));
              };
              if (args.term instanceof Language_Shape_Stlc_Syntax.Buf) {
                  return rec.buf(Record.union()({
                      buf: args.term.value0,
                      sign: Record.union()({
                          type_: args.term.value0.sign
                      })(prune(args)),
                      impl: Record.union()({
                          term: args.term.value0.impl
                      })(prune(args)),
                      body: Record.union()({
                          term: args.term.value0.body
                      })(prune(args))
                  })(prune(args)));
              };
              if (args.term instanceof Language_Shape_Stlc_Syntax.Data) {
                  return rec.data_(Record.union()({
                      data_: args.term.value0,
                      typeBind: Record.union()({
                          typeBind: args.term.value0.typeBind
                      })(prune(args)),
                      sumItems: Data_Functor.map(Data_List_Types.functorList)(function (sumItem) {
                          return Record.union()({
                              sumItem: sumItem
                          })(prune(args));
                      })(args.term.value0.sumItems),
                      body: Record.union()({
                          term: args.term.value0.body
                      })(prune(args))
                  })(prune(args)));
              };
              if (args.term instanceof Language_Shape_Stlc_Syntax.Match) {
                  return rec.match(Record.union()({
                      match: args.term.value0,
                      typeId: Record.union()({
                          typeId: args.term.value0.typeId
                      })(prune(args)),
                      term: Record.union()({
                          term: args.term.value0.term
                      })(prune(args)),
                      caseItems: Data_Functor.map(Data_List_Types.functorList)(function (caseItem) {
                          return Record.union()({
                              caseItem: caseItem
                          })(prune(args));
                      })(args.term.value0.caseItems)
                  })(prune(args)));
              };
              if (args.term instanceof Language_Shape_Stlc_Syntax.Hole) {
                  return rec.hole(Record.union()({
                      hole: args.term.value0
                  })(prune(args)));
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Recursor.Syntax (line 100, column 20 - line 157, column 19): " + [ args.term.constructor.name ]);
          };
      };
  };
  var recSumItem = function (dictLacks) {
      return function (rec) {
          return function (args) {
              var prune = Record["delete"]({
                  reflectSymbol: function () {
                      return "sumItem";
                  }
              })()()(Language_Shape_Stlc_Recursor_Proxy["_sumItem"]);
              return rec.sumItem(Record.union()({
                  termBind: Record.union()({
                      termBind: args.sumItem.termBind
                  })(prune(args)),
                  paramItems: Data_Functor.map(Data_List_Types.functorList)(function (paramItem) {
                      return Record.union()({
                          paramItem: paramItem
                      })(prune(args));
                  })(args.sumItem.paramItems)
              })(args));
          };
      };
  };
  var recParamItem = function (dictLacks) {
      return function (rec) {
          return function (args) {
              var prune = Record["delete"]({
                  reflectSymbol: function () {
                      return "paramItem";
                  }
              })()()(Language_Shape_Stlc_Recursor_Proxy["_paramItem"]);
              return rec.paramItem(Record.union()({
                  type_: Record.union()({
                      type_: args.paramItem.type_
                  })(prune(args))
              })(args));
          };
      };
  };
  var recCaseItem = function (dictLacks) {
      return function (rec) {
          return function (args) {
              var prune = Record["delete"]({
                  reflectSymbol: function () {
                      return "caseItem";
                  }
              })()()(Language_Shape_Stlc_Recursor_Proxy["_caseItem"]);
              return rec.caseItem(Record.union()({
                  termBindItems: Data_Functor.map(Data_List_Types.functorList)(function (termBindItem) {
                      return Record.union()({
                          termBindItem: termBindItem
                      })(prune(args));
                  })(args.caseItem.termBindItems),
                  body: Record.union()({
                      term: args.caseItem.body
                  })(prune(args))
              })(args));
          };
      };
  };
  var recArgItem = function (dictLacks) {
      return function (rec) {
          return function (args) {
              var prune = Record["delete"]({
                  reflectSymbol: function () {
                      return "argItem";
                  }
              })()()(Language_Shape_Stlc_Recursor_Proxy["_argItem"]);
              return rec.argItem(Record.union()({
                  term: Record.union()({
                      term: args.argItem.term
                  })(prune(args))
              })(args));
          };
      };
  };
  exports["recType"] = recType;
  exports["recTerm"] = recTerm;
  exports["recArgItem"] = recArgItem;
  exports["recSumItem"] = recSumItem;
  exports["recCaseItem"] = recCaseItem;
  exports["recParamItem"] = recParamItem;
  exports["recTermBindItem"] = recTermBindItem;
  exports["recTypeBind"] = recTypeBind;
  exports["recTermBind"] = recTermBind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Recursor.Context"] = $PS["Language.Shape.Stlc.Recursor.Context"] || {};
  var exports = $PS["Language.Shape.Stlc.Recursor.Context"];
  var Data_Default = $PS["Data.Default"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Show = $PS["Data.Show"];
  var Language_Shape_Stlc_Context = $PS["Language.Shape.Stlc.Context"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Recursor_Proxy = $PS["Language.Shape.Stlc.Recursor.Proxy"];
  var Language_Shape_Stlc_Recursor_Syntax = $PS["Language.Shape.Stlc.Recursor.Syntax"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Record = $PS["Record"];                
  var recTypeBind = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Syntax.recTypeBind();
  };
  var recType = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Syntax.recType();
  };
  var recTermBindItem = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Syntax.recTermBindItem();
  };
  var recTermBind = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Syntax.recTermBind();
  };
  var recSumItem = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Syntax.recSumItem();
  };
  var recParamItem = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Syntax.recParamItem();
  };
  var recArgItem = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return function (dictLacks3) {
                  return Language_Shape_Stlc_Recursor_Syntax.recArgItem();
              };
          };
      };
  };
  var mapArgsCtx = function (f) {
      return function (args) {
          var $36 = {};
          for (var $37 in args) {
              if ({}.hasOwnProperty.call(args, $37)) {
                  $36[$37] = args[$37];
              };
          };
          $36.gamma = f(args.gamma);
          return $36;
      };
  };
  var recCaseItem = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return function (dictLacks3) {
                  return function (rec) {
                      return Language_Shape_Stlc_Recursor_Syntax.recCaseItem()({
                          caseItem: function (args) {
                              var data_ = Language_Shape_Stlc_Context.lookupData(args.typeId)(args.gamma);
                              return rec.caseItem((function () {
                                  var $42 = {};
                                  for (var $43 in args) {
                                      if ({}.hasOwnProperty.call(args, $43)) {
                                          $42[$43] = args[$43];
                                      };
                                  };
                                  $42.termBindItems = Data_Functor.map(Data_List_Types.functorList)((function () {
                                      var $95 = Record["delete"]({
                                          reflectSymbol: function () {
                                              return "alpha";
                                          }
                                      })()()(Language_Shape_Stlc_Recursor_Proxy["_alpha"]);
                                      var $96 = Record["delete"]({
                                          reflectSymbol: function () {
                                              return "typeId";
                                          }
                                      })()()(Language_Shape_Stlc_Recursor_Proxy["_typeId"]);
                                      var $97 = Record["delete"]({
                                          reflectSymbol: function () {
                                              return "termId";
                                          }
                                      })()()(Language_Shape_Stlc_Recursor_Proxy["_termId"]);
                                      return function ($98) {
                                          return $95($96($97($98)));
                                      };
                                  })())(args.termBindItems);
                                  $42.body = Data_Foldable.foldl(Data_List_Types.foldableList)(function (term) {
                                      return function (v1) {
                                          return mapArgsCtx(Language_Shape_Stlc_Context.insertVarType(v1.value0.termBindItem.termBind.termId)(Language_Shape_Stlc_Context.typeOfSumItem(args.typeId)(v1.value1)))(term);
                                      };
                                  })(Record["delete"]({
                                      reflectSymbol: function () {
                                          return "typeId";
                                      }
                                  })()()(Language_Shape_Stlc_Recursor_Proxy["_typeId"])(Record["delete"]({
                                      reflectSymbol: function () {
                                          return "termId";
                                      }
                                  })()()(Language_Shape_Stlc_Recursor_Proxy["_termId"])(args.body)))(Data_List.zip(args.termBindItems)(data_.sumItems));
                                  return $42;
                              })());
                          }
                      });
                  };
              };
          };
      };
  };
  var recTerm = function (dictLacks) {
      return function (dictLacks1) {
          return function (rec) {
              var prune = function (dictLacks2) {
                  return function (args) {
                      return Record["delete"]({
                          reflectSymbol: function () {
                              return "alpha";
                          }
                      })()()(Language_Shape_Stlc_Recursor_Proxy["_alpha"])(args);
                  };
              };
              return Language_Shape_Stlc_Recursor_Syntax.recTerm()({
                  lam: function (args) {
                      return rec.lam((function () {
                          var $50 = {};
                          for (var $51 in args) {
                              if ({}.hasOwnProperty.call(args, $51)) {
                                  $50[$51] = args[$51];
                              };
                          };
                          $50.termBind = prune()(args.termBind);
                          $50.body = (function () {
                              if (args.alpha instanceof Language_Shape_Stlc_Syntax.ArrowType) {
                                  var v1 = mapArgsCtx(Language_Shape_Stlc_Context.insertVarType(args.lam.termBind.termId)(args.alpha.value0.dom))(args.body);
                                  var $46 = {};
                                  for (var $47 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $47)) {
                                          $46[$47] = v1[$47];
                                      };
                                  };
                                  $46.alpha = args.alpha.value0.cod;
                                  return $46;
                              };
                              return Partial_Unsafe.unsafeCrashWith("badly-typed lam with non-arrow type: " + Data_Show.show(Language_Shape_Stlc_Syntax.showType)(args.alpha));
                          })();
                          return $50;
                      })());
                  },
                  neu: function (args) {
                      return rec.neu((function () {
                          var v = Language_Shape_Stlc_Context.flattenType(Language_Shape_Stlc_Context.lookupVarType(args.neu.termId)(args.gamma));
                          var $60 = {};
                          for (var $61 in args) {
                              if ({}.hasOwnProperty.call(args, $61)) {
                                  $60[$61] = args[$61];
                              };
                          };
                          $60.termId = prune()(args.termId);
                          $60.argItems = Data_Functor.map(Data_List_Types.functorList)(function (v2) {
                              var $55 = {};
                              for (var $56 in v2.value0) {
                                  if ({}.hasOwnProperty.call(v2.value0, $56)) {
                                      $55[$56] = v2["value0"][$56];
                                  };
                              };
                              $55.alpha = v2.value1;
                              return $55;
                          })(Data_List.zip(args.argItems)(v.doms));
                          return $60;
                      })());
                  },
                  let_: function (args) {
                      return rec.let_((function () {
                          var $71 = {};
                          for (var $72 in args) {
                              if ({}.hasOwnProperty.call(args, $72)) {
                                  $71[$72] = args[$72];
                              };
                          };
                          $71.termBind = prune()(args.termBind);
                          $71.sign = prune()(args.sign);
                          $71.impl = (function () {
                              var $65 = {};
                              for (var $66 in args.impl) {
                                  if ({}.hasOwnProperty.call(args.impl, $66)) {
                                      $65[$66] = args["impl"][$66];
                                  };
                              };
                              $65.gamma = Language_Shape_Stlc_Context.insertVarType(args.let_.termBind.termId)(args.let_.sign)(args.gamma);
                              $65.alpha = args.let_.sign;
                              return $65;
                          })();
                          $71.body = (function () {
                              var $68 = {};
                              for (var $69 in args.body) {
                                  if ({}.hasOwnProperty.call(args.body, $69)) {
                                      $68[$69] = args["body"][$69];
                                  };
                              };
                              $68.gamma = Language_Shape_Stlc_Context.insertVarType(args.let_.termBind.termId)(args.let_.sign)(args.gamma);
                              return $68;
                          })();
                          return $71;
                      })());
                  },
                  buf: function (args) {
                      return rec.buf((function () {
                          var $77 = {};
                          for (var $78 in args) {
                              if ({}.hasOwnProperty.call(args, $78)) {
                                  $77[$78] = args[$78];
                              };
                          };
                          $77.sign = prune()(args.sign);
                          $77.impl = (function () {
                              var $74 = {};
                              for (var $75 in args.impl) {
                                  if ({}.hasOwnProperty.call(args.impl, $75)) {
                                      $74[$75] = args["impl"][$75];
                                  };
                              };
                              $74.alpha = args.buf.sign;
                              return $74;
                          })();
                          return $77;
                      })());
                  },
                  data_: function (args) {
                      return rec.data_((function () {
                          var $83 = {};
                          for (var $84 in args) {
                              if ({}.hasOwnProperty.call(args, $84)) {
                                  $83[$84] = args[$84];
                              };
                          };
                          $83.typeBind = prune()(args.typeBind);
                          $83.sumItems = Data_Functor.map(Data_List_Types.functorList)(prune())(args.sumItems);
                          $83.body = (function () {
                              var $80 = {};
                              for (var $81 in args.body) {
                                  if ({}.hasOwnProperty.call(args.body, $81)) {
                                      $80[$81] = args["body"][$81];
                                  };
                              };
                              $80.gamma = Language_Shape_Stlc_Context.insertData(args.data_)(args.body.gamma);
                              return $80;
                          })();
                          return $83;
                      })());
                  },
                  match: function (args) {
                      return rec.match((function () {
                          var $92 = {};
                          for (var $93 in args) {
                              if ({}.hasOwnProperty.call(args, $93)) {
                                  $92[$93] = args[$93];
                              };
                          };
                          $92.typeId = prune()(args.typeId);
                          $92.term = (function () {
                              var $86 = {};
                              for (var $87 in args.term) {
                                  if ({}.hasOwnProperty.call(args.term, $87)) {
                                      $86[$87] = args["term"][$87];
                                  };
                              };
                              $86.alpha = new Language_Shape_Stlc_Syntax.DataType({
                                  typeId: args.match.typeId,
                                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultDataTypeMetadata)
                              });
                              return $86;
                          })();
                          $92.caseItems = Data_Functor.map(Data_List_Types.functorList)(function (v1) {
                              return Record.union()({
                                  typeId: args.match.typeId,
                                  termId: v1.value1.termBind.termId
                              })(v1.value0);
                          })(Data_List.zip(args.caseItems)((Language_Shape_Stlc_Context.lookupData(args.match.typeId)(args.gamma)).sumItems));
                          return $92;
                      })());
                  },
                  hole: rec.hole
              });
          };
      };
  };
  exports["recType"] = recType;
  exports["recTerm"] = recTerm;
  exports["recArgItem"] = recArgItem;
  exports["recSumItem"] = recSumItem;
  exports["recCaseItem"] = recCaseItem;
  exports["recParamItem"] = recParamItem;
  exports["recTermBindItem"] = recTermBindItem;
  exports["recTypeBind"] = recTypeBind;
  exports["recTermBind"] = recTermBind;
})(PS);
(function(exports) {
  "use strict";

  exports.undefined = undefined
})(PS["Undefined"] = PS["Undefined"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Undefined"] = $PS["Undefined"] || {};
  var exports = $PS["Undefined"];
  var $foreign = $PS["Undefined"];
  exports["undefined"] = $foreign["undefined"];
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Changes"] = $PS["Language.Shape.Stlc.Changes"] || {};
  var exports = $PS["Language.Shape.Stlc.Changes"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Default = $PS["Data.Default"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Language_Shape_Stlc_Context = $PS["Language.Shape.Stlc.Context"];
  var Language_Shape_Stlc_Hole = $PS["Language.Shape.Stlc.Hole"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Recursor_Context = $PS["Language.Shape.Stlc.Recursor.Context"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Undefined = $PS["Undefined"];
  var Unsafe = $PS["Unsafe"];                
  var ArrowCh = (function () {
      function ArrowCh(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ArrowCh.create = function (value0) {
          return function (value1) {
              return new ArrowCh(value0, value1);
          };
      };
      return ArrowCh;
  })();
  var NoChange = (function () {
      function NoChange() {

      };
      NoChange.value = new NoChange();
      return NoChange;
  })();
  var InsertArg = (function () {
      function InsertArg(value0) {
          this.value0 = value0;
      };
      InsertArg.create = function (value0) {
          return new InsertArg(value0);
      };
      return InsertArg;
  })();
  var Swap = (function () {
      function Swap() {

      };
      Swap.value = new Swap();
      return Swap;
  })();
  var RemoveArg = (function () {
      function RemoveArg() {

      };
      RemoveArg.value = new RemoveArg();
      return RemoveArg;
  })();
  var Dig = (function () {
      function Dig(value0) {
          this.value0 = value0;
      };
      Dig.create = function (value0) {
          return new Dig(value0);
      };
      return Dig;
  })();
  var VariableTypeChange = (function () {
      function VariableTypeChange(value0) {
          this.value0 = value0;
      };
      VariableTypeChange.create = function (value0) {
          return new VariableTypeChange(value0);
      };
      return VariableTypeChange;
  })();
  var VariableDeletion = (function () {
      function VariableDeletion() {

      };
      VariableDeletion.value = new VariableDeletion();
      return VariableDeletion;
  })();
  var genericTypeChange_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new ArrowCh(x.value0.value0, x.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return NoChange.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new InsertArg(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return Swap.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return RemoveArg.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
              return new Dig(x.value0.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Changes (line 44, column 1 - line 44, column 37): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof ArrowCh) {
              return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
          };
          if (x instanceof NoChange) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
          };
          if (x instanceof InsertArg) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof Swap) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
          };
          if (x instanceof RemoveArg) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
          };
          if (x instanceof Dig) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Changes (line 44, column 1 - line 44, column 37): " + [ x.constructor.name ]);
      }
  };
  var showTypeChange = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericTypeChange_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(showTypeChange))(Data_Show_Generic.genericShowArgsArgument(showTypeChange)))({
              reflectSymbol: function () {
                  return "ArrowCh";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "NoChange";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Language_Shape_Stlc_Syntax.showType))({
              reflectSymbol: function () {
                  return "InsertArg";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "Swap";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "RemoveArg";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Language_Shape_Stlc_Syntax.showHoleId))({
              reflectSymbol: function () {
                  return "Dig";
              }
          })))))))(x);
      }
  };
  var wrapInDisplaced = function (v) {
      return function (term) {
          if (v instanceof Data_List_Types.Nil) {
              return term;
          };
          if (v instanceof Data_List_Types.Cons) {
              return new Language_Shape_Stlc_Syntax.Buf({
                  body: wrapInDisplaced(v.value1)(term),
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultBufMetadata),
                  sign: v.value0.value1,
                  impl: v.value0.value0
              });
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Changes (line 190, column 1 - line 190, column 45): " + [ v.constructor.name, term.constructor.name ]);
      };
  };
  var varChange = function (v) {
      return function (i) {
          return function (ch) {
              return {
                  termChanges: Data_Map_Internal.insert(Language_Shape_Stlc_Syntax.ordTermId)(i)(new VariableTypeChange(ch))(v.termChanges),
                  matchChanges: v.matchChanges,
                  dataTypeDeletions: v.dataTypeDeletions
              };
          };
      };
  };
  var eqTypeChange = {
      eq: function (x) {
          return function (y) {
              if (x instanceof ArrowCh && y instanceof ArrowCh) {
                  return Data_Eq.eq(eqTypeChange)(x.value0)(y.value0) && Data_Eq.eq(eqTypeChange)(x.value1)(y.value1);
              };
              if (x instanceof NoChange && y instanceof NoChange) {
                  return true;
              };
              if (x instanceof InsertArg && y instanceof InsertArg) {
                  return Data_Eq.eq(Language_Shape_Stlc_Syntax.eqType)(x.value0)(y.value0);
              };
              if (x instanceof Swap && y instanceof Swap) {
                  return true;
              };
              if (x instanceof RemoveArg && y instanceof RemoveArg) {
                  return true;
              };
              if (x instanceof Dig && y instanceof Dig) {
                  return Data_Eq.eq(Language_Shape_Stlc_Syntax.eqHoleId)(x.value0)(y.value0);
              };
              return false;
          };
      }
  };
  var emptyChanges = {
      termChanges: Data_Map_Internal.empty,
      matchChanges: Data_Map_Internal.empty,
      dataTypeDeletions: Data_Set.empty
  };
  var deleteVar = function (v) {
      return function (i) {
          return {
              termChanges: Data_Map_Internal.insert(Language_Shape_Stlc_Syntax.ordTermId)(i)(VariableDeletion.value)(v.termChanges),
              matchChanges: v.matchChanges,
              dataTypeDeletions: v.dataTypeDeletions
          };
      };
  };
  var combineSubs = function (v) {
      return function (v1) {
          return Data_Map_Internal.empty;
      };
  };
  var subHoles = function (sub) {
      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (holeEq) {
          return Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(combineSubs(holeEq)(sub));
      });
  };
  var chType = function (chs) {
      return function (v) {
          if (v instanceof Language_Shape_Stlc_Syntax.ArrowType) {
              var v1 = chType(chs)(v.value0.dom);
              var v2 = chType(chs)(v.value0.cod);
              return new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.ArrowType({
                  dom: v1.value0,
                  cod: v2.value0,
                  meta: v.value0.meta
              }), new ArrowCh(v1.value1, v2.value1));
          };
          if (v instanceof Language_Shape_Stlc_Syntax.HoleType) {
              return new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.HoleType({
                  holeId: v.value0.holeId,
                  weakening: Data_Set.difference(Language_Shape_Stlc_Syntax.ordTypeId)(v.value0.weakening)(chs),
                  meta: v.value0.meta
              }), NoChange.value);
          };
          if (v instanceof Language_Shape_Stlc_Syntax.DataType) {
              var $175 = Data_Set.member(Language_Shape_Stlc_Syntax.ordTypeId)(v.value0.typeId)(chs);
              if ($175) {
                  var holeId = Language_Shape_Stlc_Syntax.freshHoleId(Data_Unit.unit);
                  return new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.HoleType({
                      holeId: holeId,
                      weakening: Data_Set.empty,
                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleTypeMetadata)
                  }), new Dig(holeId));
              };
              return new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.DataType({
                  typeId: v.value0.typeId,
                  meta: v.value0.meta
              }), NoChange.value);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Changes (line 85, column 1 - line 85, column 52): " + [ chs.constructor.name, v.constructor.name ]);
      };
  };
  var chSum = Undefined["undefined"];
  var applyTC = function (v) {
      return function (v1) {
          if (v instanceof ArrowCh && v1 instanceof Language_Shape_Stlc_Syntax.ArrowType) {
              return new Language_Shape_Stlc_Syntax.ArrowType({
                  dom: applyTC(v.value0)(v1.value0.dom),
                  cod: applyTC(v.value1)(v1.value0.cod),
                  meta: v1.value0.meta
              });
          };
          if (v instanceof NoChange) {
              return v1;
          };
          if (v instanceof InsertArg) {
              return new Language_Shape_Stlc_Syntax.ArrowType({
                  dom: v.value0,
                  cod: v1,
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultArrowTypeMetadata)
              });
          };
          if (v instanceof Swap && (v1 instanceof Language_Shape_Stlc_Syntax.ArrowType && v1.value0.cod instanceof Language_Shape_Stlc_Syntax.ArrowType)) {
              return new Language_Shape_Stlc_Syntax.ArrowType({
                  dom: v1.value0.cod.value0.dom,
                  cod: new Language_Shape_Stlc_Syntax.ArrowType({
                      dom: v1.value0.dom,
                      cod: v1.value0.cod.value0.cod,
                      meta: v1.value0.cod.value0.meta
                  }),
                  meta: v1.value0.meta
              });
          };
          if (v instanceof RemoveArg && v1 instanceof Language_Shape_Stlc_Syntax.ArrowType) {
              return v1.value0.cod;
          };
          if (v instanceof Dig) {
              return new Language_Shape_Stlc_Syntax.HoleType({
                  holeId: Language_Shape_Stlc_Syntax.freshHoleId(Data_Unit.unit),
                  weakening: Data_Set.empty,
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleTypeMetadata)
              });
          };
          return Unsafe.error("Shouldn't get ehre. tc is: " + (Data_Show.show(showTypeChange)(v) + (" ty is: " + Data_Show.show(Language_Shape_Stlc_Syntax.showType)(v1))));
      };
  };
  var inferChTerm = Language_Shape_Stlc_Recursor_Context.recTerm()()({
      lam: function (args) {
          return function (chs) {
              var v = chType(chs.dataTypeDeletions)(args.alpha);
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(inferChTerm(args.body)(varChange(chs)(args.termBind.termBind.termId)(v.value1)))(function (v1) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Lam({
                      termBind: args.lam.termBind,
                      body: v1.value0,
                      meta: args.lam.meta
                  }), new ArrowCh(v.value1, v1.value1)));
              });
          };
      },
      neu: function (args) {
          return function (chs) {
              var varType = Language_Shape_Stlc_Context.lookupVarType(args.neu.termId)(args.gamma);
              var ifChanged = function (varTC) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chArgs(args.gamma)(varType)(chs)(varTC)(args.neu.argItems))(function (v) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(wrapInDisplaced(v.value1.value1)(Language_Shape_Stlc_Syntax.Neu.create({
                          termId: args.neu.termId,
                          argItems: v.value0,
                          meta: args.neu.meta
                      })), v.value1.value0));
                  });
              };
              var v = Data_Map_Internal.lookup(Language_Shape_Stlc_Syntax.ordTermId)(args.neu.termId)(chs.termChanges);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof VariableDeletion) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(displaceArgs(args.gamma)(varType)(chs)(args.neu.argItems))(function (displaced) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(wrapInDisplaced(displaced)(new Language_Shape_Stlc_Syntax.Hole({
                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                      })), NoChange.value));
                  });
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof VariableTypeChange) {
                  return ifChanged(v.value0.value0);
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return ifChanged(NoChange.value);
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Changes (line 278, column 9 - line 282, column 42): " + [ v.constructor.name ]);
          };
      },
      let_: function (args) {
          return function (chs) {
              var v = chType(chs.dataTypeDeletions)(args.let_.sign);
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm$prime(args.impl)(chs)(v.value1))(function (impl$prime) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(inferChTerm(args.body)(varChange(chs)(args.let_.termBind.termId)(v.value1)))(function (v1) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Let({
                          termBind: args.let_.termBind,
                          sign: args.let_.sign,
                          impl: impl$prime,
                          body: v1.value0,
                          meta: args.let_.meta
                      }), v1.value1));
                  });
              });
          };
      },
      buf: function (args) {
          return function (chs) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(inferChTerm(args.impl)(chs))(function (v) {
                  var type$prime = applyTC(v.value1)(args.buf.sign);
                  var v1 = chType(chs.dataTypeDeletions)(type$prime);
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(inferChTerm(args.body)(chs))(function (v2) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Buf({
                          sign: v1.value0,
                          impl: v.value0,
                          body: v2.value0,
                          meta: args.buf.meta
                      }), v2.value1));
                  });
              });
          };
      },
      data_: function (args) {
          return function (chs) {
              var sumItems$prime = chSum(args)(chs);
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(inferChTerm(args.body)(chs))(function (v) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Data({
                      typeBind: args.data_.typeBind,
                      sumItems: sumItems$prime,
                      body: v.value0,
                      meta: args.data_.meta
                  }), v.value1));
              });
          };
      },
      match: function (args) {
          return function (chs) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_List_Types.traversableList)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_List_Types.functorList)(function (cas) {
                  return chCaseItem(cas)(chs)(NoChange.value);
              })(args.caseItems)))(function (caseItems$prime) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm$prime(args.term)(chs)(NoChange.value))(function (term$prime) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Match({
                          typeId: args.match.typeId,
                          term: term$prime,
                          caseItems: caseItems$prime,
                          meta: args.match.meta
                      }), NoChange.value));
                  });
              });
          };
      },
      hole: function (args) {
          return function (chs) {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Hole(args.hole), NoChange.value));
          };
      }
  });
  var displaceArgs = function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  if (v3 instanceof Data_List_Types.Nil) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_List_Types.Nil.value);
                  };
                  if (v1 instanceof Language_Shape_Stlc_Syntax.ArrowType && v3 instanceof Data_List_Types.Cons) {
                      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(v)(v1.value0.dom)(v2)(NoChange.value)(v3.value0.term))(function (term$prime) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(displaceArgs(v)(v1.value0.cod)(v2)(v3.value1))(function (rest) {
                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_List_Types.Cons(new Data_Tuple.Tuple(term$prime, v1.value0.dom), rest));
                          });
                      });
                  };
                  return Unsafe.error("shouldn't get here, type is:" + Data_Show.show(Language_Shape_Stlc_Syntax.showType)(v1));
              };
          };
      };
  };
  var chTermAux = function (args) {
      return function (chs) {
          return function (sbjto) {
              return Language_Shape_Stlc_Recursor_Context.recTerm()()({
                  lam: function (args1) {
                      return function (chs1) {
                          return function (sbjto1) {
                              return Unsafe.error("shouldn't get here!");
                          };
                      };
                  },
                  neu: function (args1) {
                      return function (chs1) {
                          return function (sbjto1) {
                              var varType = Language_Shape_Stlc_Context.lookupVarType(args1.neu.termId)(args1.gamma);
                              var ifChanged = function (varTC) {
                                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chArgs(args1.gamma)(varType)(chs1)(varTC)(args1.neu.argItems))(function (v) {
                                      var maybeSub = Language_Shape_Stlc_Hole.unifyTypeRestricted(applyTC(sbjto1)(args1.alpha))(applyTC(v.value1.value0)(args1.alpha));
                                      if (maybeSub instanceof Data_Maybe.Just) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(subHoles(maybeSub.value0))(function () {
                                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(wrapInDisplaced(v.value1.value1)(Language_Shape_Stlc_Syntax.Neu.create({
                                                  termId: args1.neu.termId,
                                                  argItems: v.value0,
                                                  meta: args1.neu.meta
                                              })));
                                          });
                                      };
                                      if (maybeSub instanceof Data_Maybe.Nothing) {
                                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(displaceArgs(args1.gamma)(varType)(chs1)(args1.neu.argItems))(function (displaced2) {
                                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(wrapInDisplaced(Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1.value1)(displaced2))(new Language_Shape_Stlc_Syntax.Hole({
                                                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                                              })));
                                          });
                                      };
                                      throw new Error("Failed pattern match at Language.Shape.Stlc.Changes (line 154, column 17 - line 158, column 107): " + [ maybeSub.constructor.name ]);
                                  });
                              };
                              var v = Data_Map_Internal.lookup(Language_Shape_Stlc_Syntax.ordTermId)(args1.neu.termId)(chs1.termChanges);
                              if (v instanceof Data_Maybe.Just && v.value0 instanceof VariableDeletion) {
                                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(displaceArgs(args1.gamma)(varType)(chs1)(args1.neu.argItems))(function (displaced) {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(wrapInDisplaced(displaced)(new Language_Shape_Stlc_Syntax.Hole({
                                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                                      })));
                                  });
                              };
                              if (v instanceof Data_Maybe.Just && v.value0 instanceof VariableTypeChange) {
                                  return ifChanged(v.value0.value0);
                              };
                              if (v instanceof Data_Maybe.Nothing) {
                                  return ifChanged(NoChange.value);
                              };
                              throw new Error("Failed pattern match at Language.Shape.Stlc.Changes (line 160, column 9 - line 164, column 42): " + [ v.constructor.name ]);
                          };
                      };
                  },
                  let_: function (args1) {
                      return function (chs1) {
                          return function (sbjto1) {
                              var v = chType(chs1.dataTypeDeletions)(args1.let_.sign);
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm$prime(args1.impl)(chs1)(v.value1))(function (impl$prime) {
                                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm$prime(args1.body)(varChange(chs1)(args1.let_.termBind.termId)(v.value1))(sbjto1))(function (body$prime) {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Syntax.Let.create({
                                          termBind: args1.let_.termBind,
                                          sign: args1.let_.sign,
                                          impl: impl$prime,
                                          body: body$prime,
                                          meta: args1.let_.meta
                                      }));
                                  });
                              });
                          };
                      };
                  },
                  buf: function (args1) {
                      return function (chs1) {
                          return function (sbjto1) {
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(inferChTerm(args1.impl)(chs1))(function (v) {
                                  var type$prime = applyTC(v.value1)(args1.buf.sign);
                                  var v1 = chType(chs1.dataTypeDeletions)(type$prime);
                                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm$prime(args1.body)(chs1)(sbjto1))(function (body$prime) {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Syntax.Buf.create({
                                          sign: v1.value0,
                                          impl: v.value0,
                                          body: body$prime,
                                          meta: args1.buf.meta
                                      }));
                                  });
                              });
                          };
                      };
                  },
                  data_: function (args1) {
                      return function (chs1) {
                          return function (sbjto1) {
                              var sumItems$prime = chSum(args1)(chs1);
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm$prime(args1.body)(chs1)(sbjto1))(function (body$prime) {
                                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Syntax.Data.create({
                                      typeBind: args1.data_.typeBind,
                                      sumItems: sumItems$prime,
                                      body: body$prime,
                                      meta: args1.data_.meta
                                  }));
                              });
                          };
                      };
                  },
                  match: function (args1) {
                      return function (chs1) {
                          return function (sbjto1) {
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_List_Types.traversableList)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_List_Types.functorList)(function (cas) {
                                  return chCaseItem(cas)(chs1)(sbjto1);
                              })(args1.caseItems)))(function (caseItems$prime) {
                                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm$prime(args1.term)(chs1)(NoChange.value))(function (term$prime) {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Syntax.Match.create({
                                          typeId: args1.match.typeId,
                                          term: term$prime,
                                          caseItems: caseItems$prime,
                                          meta: args1.match.meta
                                      }));
                                  });
                              });
                          };
                      };
                  },
                  hole: function (args1) {
                      return function (chs1) {
                          return function (sbjto1) {
                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Language_Shape_Stlc_Syntax.Hole(args1.hole));
                          };
                      };
                  }
              })(args)(chs)(sbjto);
          };
      };
  };
  var chTerm$prime = function (args) {
      return function (chs) {
          return function (tc) {
              return chTerm(args.gamma)(args.alpha)(chs)(tc)(args.term);
          };
      };
  };
  var chTerm = function (gamma) {
      return function (v) {
          return function (chs) {
              return function (v1) {
                  return function (v2) {
                      if (v2 instanceof Language_Shape_Stlc_Syntax.Match) {
                          return chTermAux({
                              alpha: v,
                              gamma: gamma,
                              term: new Language_Shape_Stlc_Syntax.Match(v2.value0)
                          })(chs)(v1);
                      };
                      if (v2 instanceof Language_Shape_Stlc_Syntax.Let) {
                          return chTermAux({
                              alpha: v,
                              gamma: gamma,
                              term: new Language_Shape_Stlc_Syntax.Let(v2.value0)
                          })(chs)(v1);
                      };
                      if (v2 instanceof Language_Shape_Stlc_Syntax.Buf) {
                          return chTermAux({
                              alpha: v,
                              gamma: gamma,
                              term: new Language_Shape_Stlc_Syntax.Buf(v2.value0)
                          })(chs)(v1);
                      };
                      if (v instanceof Language_Shape_Stlc_Syntax.ArrowType && (v1 instanceof ArrowCh && v2 instanceof Language_Shape_Stlc_Syntax.Lam)) {
                          var v3 = chType(chs.dataTypeDeletions)(v.value0.dom);
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(Language_Shape_Stlc_Context.insertVarType(v2.value0.termBind.termId)(v.value0.dom)(gamma))(v.value0.cod)(varChange(chs)(v2.value0.termBind.termId)(v1.value0))(v1.value1)(v2.value0.body))(function (body$prime) {
                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Language_Shape_Stlc_Syntax.Lam({
                                  termBind: v2.value0.termBind,
                                  body: body$prime,
                                  meta: v2.value0.meta
                              }));
                          });
                      };
                      if (v instanceof Language_Shape_Stlc_Syntax.ArrowType && (v1 instanceof NoChange && v2 instanceof Language_Shape_Stlc_Syntax.Lam)) {
                          var v3 = chType(chs.dataTypeDeletions)(v.value0.dom);
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(Language_Shape_Stlc_Context.insertVarType(v2.value0.termBind.termId)(v.value0.dom)(gamma))(v.value0.cod)(varChange(chs)(v2.value0.termBind.termId)(v3.value1))(NoChange.value)(v2.value0.body))(function (body$prime) {
                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Language_Shape_Stlc_Syntax.Lam({
                                  termBind: v2.value0.termBind,
                                  body: body$prime,
                                  meta: v2.value0.meta
                              }));
                          });
                      };
                      if (v1 instanceof InsertArg) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(gamma)(v)(chs)(NoChange.value)(v2))(function (t$prime) {
                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Language_Shape_Stlc_Syntax.Lam({
                                  termBind: {
                                      termId: Language_Shape_Stlc_Syntax.freshTermId(Data_Unit.unit),
                                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTermBindMetadata)
                                  },
                                  body: t$prime,
                                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultLamMetadata)
                              }));
                          });
                      };
                      if (v instanceof Language_Shape_Stlc_Syntax.ArrowType && (v.value0.cod instanceof Language_Shape_Stlc_Syntax.ArrowType && (v1 instanceof Swap && (v2 instanceof Language_Shape_Stlc_Syntax.Lam && v2.value0.body instanceof Language_Shape_Stlc_Syntax.Lam)))) {
                          var v3 = chType(chs.dataTypeDeletions)(v.value0.dom);
                          var v4 = chType(chs.dataTypeDeletions)(v.value0.cod.value0.dom);
                          var gamma$prime = Language_Shape_Stlc_Context.insertVarType(v2.value0.body.value0.termBind.termId)(v4.value0)(Language_Shape_Stlc_Context.insertVarType(v2.value0.termBind.termId)(v3.value0)(gamma));
                          var chs$prime = varChange(varChange(chs)(v2.value0.termBind.termId)(v3.value1))(v2.value0.body.value0.termBind.termId)(v4.value1);
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(gamma$prime)(v.value0.cod.value0.cod)(chs$prime)(NoChange.value)(v2.value0.body.value0.body))(function (body$prime) {
                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Language_Shape_Stlc_Syntax.Lam({
                                  termBind: v2.value0.body.value0.termBind,
                                  body: new Language_Shape_Stlc_Syntax.Lam({
                                      termBind: v2.value0.termBind,
                                      body: body$prime,
                                      meta: v2.value0.body.value0.meta
                                  }),
                                  meta: v2.value0.meta
                              }));
                          });
                      };
                      if (v instanceof Language_Shape_Stlc_Syntax.ArrowType && (v1 instanceof RemoveArg && v2 instanceof Language_Shape_Stlc_Syntax.Lam)) {
                          return chTerm(Language_Shape_Stlc_Context.insertVarType(v2.value0.termBind.termId)(v.value0.dom)(gamma))(v.value0.cod)(deleteVar(chs)(v2.value0.termBind.termId))(NoChange.value)(v2.value0.body);
                      };
                      if (v instanceof Language_Shape_Stlc_Syntax.ArrowType && (v1 instanceof Dig && v2 instanceof Language_Shape_Stlc_Syntax.Lam)) {
                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Language_Shape_Stlc_Syntax.Buf({
                              body: new Language_Shape_Stlc_Syntax.Hole({
                                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                              }),
                              impl: new Language_Shape_Stlc_Syntax.Lam(v2.value0),
                              meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultBufMetadata),
                              sign: new Language_Shape_Stlc_Syntax.ArrowType(v.value0)
                          }));
                      };
                      return chTermAux({
                          alpha: v,
                          gamma: gamma,
                          term: v2
                      })(chs)(v1);
                  };
              };
          };
      };
  };
  var chCaseItem = Language_Shape_Stlc_Recursor_Context.recCaseItem()()()()({
      caseItem: function (args) {
          return function (chs) {
              return function (sbjto) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm$prime(args.body)(chs)(sbjto))(function (body$prime) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))({
                          body: body$prime,
                          meta: args.caseItem.meta,
                          termBindItems: args.caseItem.termBindItems
                      });
                  });
              };
          };
      }
  });
  var chArgs = function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  return function (v4) {
                      if (v1 instanceof Language_Shape_Stlc_Syntax.ArrowType && (v3 instanceof RemoveArg && v4 instanceof Data_List_Types.Cons)) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chArgs(v)(v1.value0.cod)(v2)(NoChange.value)(v4.value1))(function (v5) {
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(v)(v1.value0.dom)(v2)(NoChange.value)(v4.value0.term))(function (term$prime) {
                                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(v5.value0, new Data_Tuple.Tuple(v5.value1.value0, new Data_List_Types.Cons(new Data_Tuple.Tuple(term$prime, v1.value0.dom), v5.value1.value1))));
                              });
                          });
                      };
                      if (v3 instanceof InsertArg) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chArgs(v)(v1)(v2)(NoChange.value)(v4))(function (v5) {
                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultArgItemMetadata),
                                  term: new Language_Shape_Stlc_Syntax.Hole({
                                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                                  })
                              }, v5.value0), new Data_Tuple.Tuple(v5.value1.value0, v5.value1.value1)));
                          });
                      };
                      if (v1 instanceof Language_Shape_Stlc_Syntax.ArrowType && (v3 instanceof ArrowCh && v4 instanceof Data_List_Types.Cons)) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(v)(v1.value0.dom)(v2)(v3.value0)(v4.value0.term))(function (arg$prime) {
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chArgs(v)(v1.value0.cod)(v2)(v3.value1)(v4.value1))(function (v5) {
                                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      term: arg$prime,
                                      meta: v4.value0.meta
                                  }, v5.value0), new Data_Tuple.Tuple(v5.value1.value0, v5.value1.value1)));
                              });
                          });
                      };
                      if (v1 instanceof Language_Shape_Stlc_Syntax.ArrowType && (v1.value0.cod instanceof Language_Shape_Stlc_Syntax.ArrowType && (v3 instanceof Swap && (v4 instanceof Data_List_Types.Cons && v4.value1 instanceof Data_List_Types.Cons)))) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(v)(v1.value0.dom)(v2)(NoChange.value)(v4.value0.term))(function (arg1$prime) {
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(v)(v1.value0.cod.value0.dom)(v2)(NoChange.value)(v4.value1.value0.term))(function (arg2$prime) {
                                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chArgs(v)(v1.value0.cod.value0.cod)(v2)(NoChange.value)(v4.value1.value1))(function (v5) {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                          term: arg2$prime,
                                          meta: v4.value0.meta
                                      }, new Data_List_Types.Cons({
                                          term: arg1$prime,
                                          meta: v4.value1.value0.meta
                                      }, v5.value0)), new Data_Tuple.Tuple(v5.value1.value0, v5.value1.value1)));
                                  });
                              });
                          });
                      };
                      if (v4 instanceof Data_List_Types.Nil) {
                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(Data_List_Types.Nil.value, new Data_Tuple.Tuple(v3, Data_List_Types.Nil.value)));
                      };
                      if (v1 instanceof Language_Shape_Stlc_Syntax.ArrowType && (v3 instanceof NoChange && v4 instanceof Data_List_Types.Cons)) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chTerm(v)(v1.value0.dom)(v2)(NoChange.value)(v4.value0.term))(function (arg$prime) {
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(chArgs(v)(v1.value0.dom)(v2)(NoChange.value)(v4.value1))(function (v5) {
                                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      term: arg$prime,
                                      meta: v4.value0.meta
                                  }, v5.value0), new Data_Tuple.Tuple(v5.value1.value0, v5.value1.value1)));
                              });
                          });
                      };
                      if (v3 instanceof Dig) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(displaceArgs(v)(v1)(v2)(v4))(function (displaced) {
                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(Data_List_Types.Nil.value, new Data_Tuple.Tuple(new Dig(v3.value0), displaced)));
                          });
                      };
                      return Unsafe.error("shouldn't get here, tc is: " + (Data_Show.show(showTypeChange)(v3) + (" and ty is: " + (Data_Show.show(Language_Shape_Stlc_Syntax.showType)(v1) + (" and args is: " + Data_Show.show(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "meta";
                          }
                      })(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "term";
                          }
                      })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTerm))(Language_Shape_Stlc_Metadata.showArgItemMetadata))))(v4))))));
                  };
              };
          };
      };
  };
  exports["ArrowCh"] = ArrowCh;
  exports["NoChange"] = NoChange;
  exports["InsertArg"] = InsertArg;
  exports["Swap"] = Swap;
  exports["RemoveArg"] = RemoveArg;
  exports["Dig"] = Dig;
  exports["emptyChanges"] = emptyChanges;
  exports["deleteVar"] = deleteVar;
  exports["varChange"] = varChange;
  exports["applyTC"] = applyTC;
  exports["chTerm"] = chTerm;
  exports["chTerm'"] = chTerm$prime;
  exports["eqTypeChange"] = eqTypeChange;
  exports["showTypeChange"] = showTypeChange;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.ChAtIndex"] = $PS["Language.Shape.Stlc.ChAtIndex"] || {};
  var exports = $PS["Language.Shape.Stlc.ChAtIndex"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_OrderedMap = $PS["Data.OrderedMap"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Language_Shape_Stlc_Changes = $PS["Language.Shape.Stlc.Changes"];
  var Language_Shape_Stlc_Hole = $PS["Language.Shape.Stlc.Hole"];
  var Language_Shape_Stlc_Index = $PS["Language.Shape.Stlc.Index"];
  var Language_Shape_Stlc_Recursor_Context = $PS["Language.Shape.Stlc.Recursor.Context"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Unsafe = $PS["Unsafe"];                
  var ReplaceTerm = (function () {
      function ReplaceTerm(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceTerm.create = function (value0) {
          return function (value1) {
              return new ReplaceTerm(value0, value1);
          };
      };
      return ReplaceTerm;
  })();
  var ReplaceType = (function () {
      function ReplaceType(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceType.create = function (value0) {
          return function (value1) {
              return new ReplaceType(value0, value1);
          };
      };
      return ReplaceType;
  })();
  var genericToReplace = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new ReplaceTerm(x.value0.value0, x.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return new ReplaceType(x.value0.value0, x.value0.value1);
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.ChAtIndex (line 28, column 1 - line 28, column 56): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof ReplaceTerm) {
              return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
          };
          if (x instanceof ReplaceType) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.ChAtIndex (line 28, column 1 - line 28, column 56): " + [ x.constructor.name ]);
      }
  };
  var showToReplace = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericToReplace)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Language_Shape_Stlc_Syntax.showTerm))(Data_Show_Generic.genericShowArgsArgument(Language_Shape_Stlc_Changes.showTypeChange)))({
              reflectSymbol: function () {
                  return "ReplaceTerm";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Language_Shape_Stlc_Syntax.showType))(Data_Show_Generic.genericShowArgsArgument(Language_Shape_Stlc_Changes.showTypeChange)))({
              reflectSymbol: function () {
                  return "ReplaceType";
              }
          })))(x);
      }
  };
  var chAtType = function (args) {
      return function (v) {
          return function (v1) {
              if (v instanceof ReplaceType && v1 instanceof Data_List_Types.Nil) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(Data_List_Types.Nil.value, new Data_Tuple.Tuple(v.value1, Language_Shape_Stlc_Hole.emptyHoleEq))));
              };
              return Language_Shape_Stlc_Recursor_Context.recType()({
                  arrowType: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepArrowType && v2.value0.value1 === 0)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtType(args2.dom)(tRep1)(v2.value1))(function (v3) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.ArrowType({
                                          dom: v3.value0,
                                          cod: args2.arrowType.cod,
                                          meta: args2.arrowType.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepArrowType.value, 0), v3.value1.value0), new Data_Tuple.Tuple(new Language_Shape_Stlc_Changes.ArrowCh(v3.value1.value1.value0, Language_Shape_Stlc_Changes.NoChange.value), v3.value1.value1.value1))));
                                  });
                              };
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepArrowType && v2.value0.value1 === 1)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtType(args2.cod)(tRep1)(v2.value1))(function (v3) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.ArrowType({
                                          dom: args2.arrowType.dom,
                                          cod: v3.value0,
                                          meta: args2.arrowType.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepArrowType.value, 1), v3.value1.value0), new Data_Tuple.Tuple(new Language_Shape_Stlc_Changes.ArrowCh(Language_Shape_Stlc_Changes.NoChange.value, v3.value1.value1.value0), v3.value1.value1.value1))));
                                  });
                              };
                              return Unsafe.error("no5");
                          };
                      };
                  },
                  dataType: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              return Unsafe.error("no6");
                          };
                      };
                  },
                  holeType: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              return Unsafe.error("no7");
                          };
                      };
                  }
              })(args)(v)(v1);
          };
      };
  };
  var chAtTerm = function (args) {
      return function (v) {
          return function (v1) {
              if (v instanceof ReplaceTerm && v1 instanceof Data_List_Types.Nil) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(Data_List_Types.Nil.value, new Data_Tuple.Tuple(v.value1, Language_Shape_Stlc_Hole.emptyHoleEq))));
              };
              return Language_Shape_Stlc_Recursor_Context.recTerm()()({
                  lam: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepLam && v2.value0.value1 === 1)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm(args2.body)(tRep1)(v2.value1))(function (v3) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Lam({
                                          termBind: args2.lam.termBind,
                                          body: v3.value0,
                                          meta: args2.lam.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepLam.value, 1), v3.value1.value0), new Data_Tuple.Tuple(new Language_Shape_Stlc_Changes.ArrowCh(Language_Shape_Stlc_Changes.NoChange.value, v3.value1.value1.value0), v3.value1.value1.value1))));
                                  });
                              };
                              return Unsafe.error("no8");
                          };
                      };
                  },
                  neu: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepNeu && v2.value0.value1 === 1)) {
                                  var varType = Data_OrderedMap["lookup'"](Language_Shape_Stlc_Syntax.showTermId)(Language_Shape_Stlc_Syntax.showType)(Language_Shape_Stlc_Syntax.eqTermId)(args2.neu.termId)((Data_Newtype.unwrap()(args2.gamma)).varTypes);
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtArgItems(args2.gamma)(varType)(tRep1)(v2.value1)(args2.neu.argItems))(function (v3) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Neu({
                                          termId: args2.neu.termId,
                                          argItems: v3.value0,
                                          meta: args2.neu.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepNeu.value, 1), v3.value1.value0), new Data_Tuple.Tuple(Language_Shape_Stlc_Changes.NoChange.value, v3.value1.value1))));
                                  });
                              };
                              return Unsafe.error("no9");
                          };
                      };
                  },
                  let_: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepLet && v2.value0.value1 === 1)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtType(args2.sign)(tRep1)(v2.value1))(function (v3) {
                                      var changes = Language_Shape_Stlc_Changes.varChange(Language_Shape_Stlc_Changes.emptyChanges)(args2.termBind.termBind.termId)(v3.value1.value1.value0);
                                      var v4 = Control_Monad_State.runState(Language_Shape_Stlc_Changes["chTerm'"](args2.impl)(changes)(v3.value1.value1.value0))(v3.value1.value1.value1);
                                      var v5 = Control_Monad_State.runState(Language_Shape_Stlc_Changes["chTerm'"](args2.body)(changes)(Language_Shape_Stlc_Changes.NoChange.value))(v4.value1);
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Let({
                                          termBind: args2.let_.termBind,
                                          sign: v3.value0,
                                          impl: v4.value0,
                                          body: v5.value0,
                                          meta: args2.let_.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(Language_Shape_Stlc_Index.ixStepLet.sign, v3.value1.value0), new Data_Tuple.Tuple(Language_Shape_Stlc_Changes.NoChange.value, v5.value1))));
                                  });
                              };
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepLet && v2.value0.value1 === 2)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm(args2.impl)(tRep1)(v2.value1))(function (v3) {
                                      var sign$prime = Language_Shape_Stlc_Changes.applyTC(v3.value1.value1.value0)(args2.sign.type_);
                                      var v4 = Control_Monad_State.runState(Language_Shape_Stlc_Changes["chTerm'"](args2.body)(Language_Shape_Stlc_Changes.varChange(Language_Shape_Stlc_Changes.emptyChanges)(args2.termBind.termBind.termId)(v3.value1.value1.value0))(Language_Shape_Stlc_Changes.NoChange.value))(v3.value1.value1.value1);
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Let({
                                          termBind: args2.let_.termBind,
                                          sign: sign$prime,
                                          impl: v3.value0,
                                          body: v4.value0,
                                          meta: args2.let_.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(Language_Shape_Stlc_Index.ixStepLet.impl, v3.value1.value0), new Data_Tuple.Tuple(Language_Shape_Stlc_Changes.NoChange.value, v4.value1))));
                                  });
                              };
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepLet && v2.value0.value1 === 3)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm(args2.body)(tRep1)(v2.value1))(function (v3) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Let({
                                          termBind: args2.let_.termBind,
                                          sign: args2.let_.sign,
                                          impl: args2.let_.impl,
                                          body: v3.value0,
                                          meta: args2.let_.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(Language_Shape_Stlc_Index.ixStepLet.body, v3.value1.value0), new Data_Tuple.Tuple(v3.value1.value1.value0, v3.value1.value1.value1))));
                                  });
                              };
                              return Unsafe.error("no10");
                          };
                      };
                  },
                  buf: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepBuf && v2.value0.value1 === 1)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtType(args2.sign)(tRep1)(v2.value1))(function (v3) {
                                      var v4 = Control_Monad_State.runState(Language_Shape_Stlc_Changes["chTerm'"](args2.impl)(Language_Shape_Stlc_Changes.emptyChanges)(v3.value1.value1.value0))(v3.value1.value1.value1);
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Buf({
                                          sign: v3.value0,
                                          impl: v4.value0,
                                          body: args2.buf.body,
                                          meta: args2.buf.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(Language_Shape_Stlc_Index.ixStepBuf.sign, v3.value1.value0), new Data_Tuple.Tuple(Language_Shape_Stlc_Changes.NoChange.value, v4.value1))));
                                  });
                              };
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepBuf && v2.value0.value1 === 0)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm(args2.impl)(tRep1)(v2.value1))(function (v3) {
                                      var sign$prime = Language_Shape_Stlc_Changes.applyTC(v3.value1.value1.value0)(args2.sign.type_);
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Buf({
                                          sign: sign$prime,
                                          impl: v3.value0,
                                          body: args2.buf.body,
                                          meta: args2.buf.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(Language_Shape_Stlc_Index.ixStepBuf.impl, v3.value1.value0), new Data_Tuple.Tuple(Language_Shape_Stlc_Changes.NoChange.value, v3.value1.value1.value1))));
                                  });
                              };
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepBuf && v2.value0.value1 === 2)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm(args2.body)(tRep1)(v2.value1))(function (v3) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Buf({
                                          sign: args2.buf.sign,
                                          impl: args2.buf.impl,
                                          body: v3.value0,
                                          meta: args2.buf.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(Language_Shape_Stlc_Index.ixStepBuf.body, v3.value1.value0), new Data_Tuple.Tuple(v3.value1.value1.value0, v3.value1.value1.value1))));
                                  });
                              };
                              return Unsafe.error("no1");
                          };
                      };
                  },
                  data_: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepData && v2.value0.value1 === 1)) {
                                  return Unsafe.error("unimplemented");
                              };
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepData && v2.value0.value1 === 2)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm(args2.body)(tRep1)(v2.value1))(function (v3) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Data({
                                          typeBind: args2.data_.typeBind,
                                          sumItems: args2.data_.sumItems,
                                          body: v3.value0,
                                          meta: args2.data_.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(Language_Shape_Stlc_Index.ixStepData.body, v3.value1.value0), new Data_Tuple.Tuple(v3.value1.value1.value0, v3.value1.value1.value1))));
                                  });
                              };
                              return Unsafe.error("no2");
                          };
                      };
                  },
                  match: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepMatch && v2.value0.value1 === 0)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm(args2.term)(tRep1)(v2.value1))(function (v3) {
                                      var $228 = Data_Eq.eq(Language_Shape_Stlc_Changes.eqTypeChange)(v3.value1.value1.value0)(Language_Shape_Stlc_Changes.NoChange.value);
                                      if ($228) {
                                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Match({
                                              typeId: args2.match.typeId,
                                              term: v3.value0,
                                              caseItems: args2.match.caseItems,
                                              meta: args2.match.meta
                                          }), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepMatch.value, 0), v3.value1.value0), new Data_Tuple.Tuple(Language_Shape_Stlc_Changes.NoChange.value, v3.value1.value1.value1))));
                                      };
                                      return Data_Maybe.Nothing.value;
                                  });
                              };
                              if (v2 instanceof Data_List_Types.Cons && (v2.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepMatch && v2.value0.value1 === 1)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtMatchCases(args2.gamma)(args2.alpha)(tRep1)(v2.value1)(args2.match.caseItems))(function (v3) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Language_Shape_Stlc_Syntax.Match({
                                          typeId: args2.match.typeId,
                                          term: args2.match.term,
                                          caseItems: v3.value0,
                                          meta: args2.match.meta
                                      }), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepMatch.value, 1), v3.value1.value0), new Data_Tuple.Tuple(Language_Shape_Stlc_Changes.NoChange.value, v3.value1.value1))));
                                  });
                              };
                              return Unsafe.error("no");
                          };
                      };
                  },
                  hole: function (args2) {
                      return function (tRep1) {
                          return function (v2) {
                              return Unsafe.error("no4 bla " + Data_Show.show(Language_Shape_Stlc_Index.showIxDown)(v1));
                          };
                      };
                  }
              })(args)(v)(v1);
          };
      };
  };
  var chAtMatchCases = function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  return function (v4) {
                      if (v3 instanceof Data_List_Types.Cons && (v3.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepList && (v3.value0.value1 === 1 && v4 instanceof Data_List_Types.Cons))) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtMatchCases(v)(v1)(v2)(v3.value1)(v4.value1))(function (v5) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Data_List_Types.Cons(v4.value0, v5.value0), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepList.value, 1), v5.value1.value0), v5.value1.value1)));
                          });
                      };
                      if (v3 instanceof Data_List_Types.Cons && (v3.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepList && (v3.value0.value1 === 0 && (v3.value1 instanceof Data_List_Types.Cons && (v3.value1.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepCaseItem && (v3.value1.value0.value1 === 1 && v4 instanceof Data_List_Types.Cons)))))) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm({
                              alpha: v1,
                              gamma: v,
                              term: v4.value0.body
                          })(v2)(v3.value1.value1))(function (v5) {
                              var $265 = Data_Eq.eq(Language_Shape_Stlc_Changes.eqTypeChange)(v5.value1.value1.value0)(Language_Shape_Stlc_Changes.NoChange.value);
                              if ($265) {
                                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      termBindItems: v4.value0.termBindItems,
                                      meta: v4.value0.meta,
                                      body: v5.value0
                                  }, v4.value1), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepList.value, 0), new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepCaseItem.value, 1), v5.value1.value0)), v5.value1.value1.value1)));
                              };
                              return Data_Maybe.Nothing.value;
                          });
                      };
                      return Unsafe.error("blabla :" + Data_Show.show(Language_Shape_Stlc_Index.showIxDown)(v3));
                  };
              };
          };
      };
  };
  var chAtArgItems = function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  return function (v4) {
                      if (v1 instanceof Language_Shape_Stlc_Syntax.ArrowType && (v3 instanceof Data_List_Types.Cons && (v3.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepList && (v3.value0.value1 === 1 && v4 instanceof Data_List_Types.Cons)))) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtArgItems(v)(v1.value0.cod)(v2)(v3.value1)(v4.value1))(function (v5) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Data_List_Types.Cons(v4.value0, v5.value0), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepList.value, 1), v5.value1.value0), v5.value1.value1)));
                          });
                      };
                      if (v1 instanceof Language_Shape_Stlc_Syntax.ArrowType && (v3 instanceof Data_List_Types.Cons && (v3.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepList && (v3.value0.value1 === 0 && (v3.value1 instanceof Data_List_Types.Cons && (v3.value1.value0.value0 instanceof Language_Shape_Stlc_Index.IxStepArgItem && (v3.value1.value0.value1 === 0 && v4 instanceof Data_List_Types.Cons))))))) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(chAtTerm({
                              alpha: v1.value0.dom,
                              gamma: v,
                              term: v4.value0.term
                          })(v2)(v3.value1.value1))(function (v5) {
                              var $306 = Data_Eq.eq(Language_Shape_Stlc_Changes.eqTypeChange)(v5.value1.value1.value0)(Language_Shape_Stlc_Changes.NoChange.value);
                              if ($306) {
                                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      term: v5.value0,
                                      meta: v4.value0.meta
                                  }, v4.value1), new Data_Tuple.Tuple(new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepList.value, 0), new Data_List_Types.Cons(new Language_Shape_Stlc_Index.IxStep(Language_Shape_Stlc_Index.IxStepArgItem.value, 0), v5.value1.value0)), v5.value1.value1.value1)));
                              };
                              return Data_Maybe.Nothing.value;
                          });
                      };
                      return Unsafe.error("shouldn't get here 10");
                  };
              };
          };
      };
  };
  exports["ReplaceTerm"] = ReplaceTerm;
  exports["ReplaceType"] = ReplaceType;
  exports["chAtTerm"] = chAtTerm;
  exports["showToReplace"] = showToReplace;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.CopyPasteBackend"] = $PS["Language.Shape.Stlc.CopyPasteBackend"] || {};
  var exports = $PS["Language.Shape.Stlc.CopyPasteBackend"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Default = $PS["Data.Default"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Language_Shape_Stlc_Hole = $PS["Language.Shape.Stlc.Hole"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var fitsInHole = function (a) {
      return function (b) {
          if (a instanceof Language_Shape_Stlc_Syntax.ArrowType) {
              var v = fitsInHole(a.value0.cod)(b);
              if (v instanceof Data_Maybe.Just) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0 + 1 | 0, v.value0.value1));
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(function (s) {
                      return new Data_Tuple.Tuple(0, s);
                  })(Language_Shape_Stlc_Hole.unifyType(a)(b));
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.CopyPasteBackend (line 30, column 35 - line 32, column 60): " + [ v.constructor.name ]);
          };
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (s) {
              return new Data_Tuple.Tuple(0, s);
          })(Language_Shape_Stlc_Hole.unifyType(a)(b));
      };
  };
  var createNeu = function (x) {
      return function (n) {
          if (n === 0) {
              return new Language_Shape_Stlc_Syntax.Neu({
                  termId: x,
                  argItems: Data_Monoid.mempty(Data_List_Types.monoidList),
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultNeuMetadata)
              });
          };
          if (Data_Boolean.otherwise) {
              return new Language_Shape_Stlc_Syntax.Neu({
                  termId: x,
                  argItems: Data_Functor.map(Data_List_Types.functorList)(function (v) {
                      return {
                          term: new Language_Shape_Stlc_Syntax.Hole({
                              meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                          }),
                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultArgItemMetadata)
                      };
                  })(Data_List.range(1)(n)),
                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultNeuMetadata)
              });
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.CopyPasteBackend (line 43, column 1 - line 43, column 35): " + [ x.constructor.name, n.constructor.name ]);
      };
  };
  exports["fitsInHole"] = fitsInHole;
  exports["createNeu"] = createNeu;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Metacontext"] = $PS["Language.Shape.Stlc.Metacontext"] || {};
  var exports = $PS["Language.Shape.Stlc.Metacontext"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var Metacontext = function (x) {
      return x;
  };
  var showMetacontext = Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "dataNames";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "dataShadowDepths";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "dataShadowIndices";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "indentation";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "varNames";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "varShadowDepths";
      }
  })(Data_Show.showRecordFieldsCons({
      reflectSymbol: function () {
          return "varShadowIndices";
      }
  })(Data_Show.showRecordFieldsNil)(Data_Map_Internal.showMap(Language_Shape_Stlc_Syntax.showTermId)(Data_Show.showInt)))(Data_Map_Internal.showMap(Language_Shape_Stlc_Metadata.showName)(Data_Show.showInt)))(Data_Map_Internal.showMap(Language_Shape_Stlc_Syntax.showTermId)(Language_Shape_Stlc_Metadata.showName)))(Data_Show.showInt))(Data_Map_Internal.showMap(Language_Shape_Stlc_Syntax.showTypeId)(Data_Show.showInt)))(Data_Map_Internal.showMap(Language_Shape_Stlc_Metadata.showName)(Data_Show.showInt)))(Data_Map_Internal.showMap(Language_Shape_Stlc_Syntax.showTypeId)(Language_Shape_Stlc_Metadata.showName)));
  var defaultMetacontext = {
      "default": {
          varNames: Data_Map_Internal.empty,
          varShadowIndices: Data_Map_Internal.empty,
          varShadowDepths: Data_Map_Internal.empty,
          dataNames: Data_Map_Internal.empty,
          dataShadowIndices: Data_Map_Internal.empty,
          dataShadowDepths: Data_Map_Internal.empty,
          indentation: 0
      }
  };
  var _varShadowIndices = Type_Proxy["Proxy"].value;
  var _varShadowDepths = Type_Proxy["Proxy"].value;
  var _varNames = Type_Proxy["Proxy"].value;
  var insertVar = function (termId) {
      return function (name) {
          return function (meta) {
              var shadowDepth$prime = (function () {
                  var v = Data_Map_Internal.lookup(Language_Shape_Stlc_Metadata.ordName)(name)((Data_Newtype.unwrap()(meta)).varShadowDepths);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0 + 1 | 0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return 0;
                  };
                  throw new Error("Failed pattern match at Language.Shape.Stlc.Metacontext (line 67, column 20 - line 69, column 19): " + [ v.constructor.name ]);
              })();
              return Data_Newtype.over()()(Metacontext)((function () {
                  var $9 = Record.modify({
                      reflectSymbol: function () {
                          return "varNames";
                      }
                  })()()(_varNames)(Data_Map_Internal.insert(Language_Shape_Stlc_Syntax.ordTermId)(termId)(name));
                  var $10 = Record.modify({
                      reflectSymbol: function () {
                          return "varShadowDepths";
                      }
                  })()()(_varShadowDepths)(Data_Map_Internal.insert(Language_Shape_Stlc_Metadata.ordName)(name)(shadowDepth$prime));
                  var $11 = Record.modify({
                      reflectSymbol: function () {
                          return "varShadowIndices";
                      }
                  })()()(_varShadowIndices)(Data_Map_Internal.insert(Language_Shape_Stlc_Syntax.ordTermId)(termId)(shadowDepth$prime));
                  return function ($12) {
                      return $9($10($11($12)));
                  };
              })())(meta);
          };
      };
  };
  var _indentation = Type_Proxy["Proxy"].value;
  var incrementIndentation = Data_Newtype.over()()(Metacontext)(Record.modify({
      reflectSymbol: function () {
          return "indentation";
      }
  })()()(_indentation)(function (v) {
      return v + 1 | 0;
  }));
  var incrementIndentationUnless = function (b) {
      if (b) {
          return Control_Category.identity(Control_Category.categoryFn);
      };
      return Data_Newtype.over()()(Metacontext)(Record.modify({
          reflectSymbol: function () {
              return "indentation";
          }
      })()()(_indentation)(function (v) {
          return v + 1 | 0;
      }));
  };                       
  var _dataShadowIndices = Type_Proxy["Proxy"].value;
  var _dataShadowDepths = Type_Proxy["Proxy"].value;
  var _dataNames = Type_Proxy["Proxy"].value;
  var insertData = function (data_) {
      return function (meta) {
          var name = (Data_Newtype.unwrap()(data_.typeBind.meta)).name;
          var shadowDepth$prime = (function () {
              var v = Data_Map_Internal.lookup(Language_Shape_Stlc_Metadata.ordName)(name)((Data_Newtype.unwrap()(meta)).dataShadowDepths);
              if (v instanceof Data_Maybe.Just) {
                  return v.value0 + 1 | 0;
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return 0;
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Metacontext (line 85, column 20 - line 87, column 19): " + [ v.constructor.name ]);
          })();
          return Data_Function.flip(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(function (sumItem) {
              return insertVar(sumItem.termBind.termId)((Data_Newtype.unwrap()(sumItem.termBind.meta)).name);
          })))(data_.sumItems)(Data_Newtype.over()()(Metacontext)((function () {
              var $13 = Record.modify({
                  reflectSymbol: function () {
                      return "dataNames";
                  }
              })()()(_dataNames)(Data_Map_Internal.insert(Language_Shape_Stlc_Syntax.ordTypeId)(data_.typeBind.typeId)(name));
              var $14 = Record.modify({
                  reflectSymbol: function () {
                      return "dataShadowDepths";
                  }
              })()()(_dataShadowDepths)(Data_Map_Internal.insert(Language_Shape_Stlc_Metadata.ordName)(name)(shadowDepth$prime));
              var $15 = Record.modify({
                  reflectSymbol: function () {
                      return "dataShadowIndices";
                  }
              })()()(_dataShadowIndices)(Data_Map_Internal.insert(Language_Shape_Stlc_Syntax.ordTypeId)(data_.typeBind.typeId)(shadowDepth$prime));
              return function ($16) {
                  return $13($14($15($16)));
              };
          })())(meta));
      };
  };
  exports["insertVar"] = insertVar;
  exports["insertData"] = insertData;
  exports["incrementIndentation"] = incrementIndentation;
  exports["incrementIndentationUnless"] = incrementIndentationUnless;
  exports["showMetacontext"] = showMetacontext;
  exports["defaultMetacontext"] = defaultMetacontext;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Recursor.Index"] = $PS["Language.Shape.Stlc.Recursor.Index"] || {};
  var exports = $PS["Language.Shape.Stlc.Recursor.Index"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Language_Shape_Stlc_Index = $PS["Language.Shape.Stlc.Index"];
  var Language_Shape_Stlc_Recursor_Context = $PS["Language.Shape.Stlc.Recursor.Context"];                
  var visitVia = function (ixStep) {
      return function (v) {
          var $45 = {};
          for (var $46 in v) {
              if ({}.hasOwnProperty.call(v, $46)) {
                  $45[$46] = v[$46];
              };
          };
          $45.visit = {
              ix: Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.over()()(Data_Newtype.wrap())(Data_List_Types.Cons.create(ixStep)))(v.visit.ix),
              csr: Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap())(v.visit.csr))(function (ixSteps) {
                  if (ixSteps instanceof Data_List_Types.Cons) {
                      var $42 = Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(ixStep)(ixSteps.value0);
                      if ($42) {
                          return new Data_Maybe.Just(Data_Newtype.wrap()(ixSteps.value1));
                      };
                      return Data_Maybe.Nothing.value;
                  };
                  if (ixSteps instanceof Data_List_Types.Nil) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Language.Shape.Stlc.Recursor.Index (line 34, column 13 - line 36, column 29): " + [ ixSteps.constructor.name ]);
              })
          };
          return $45;
      };
  };
  var visitItemsVia = function (ixStep) {
      return function (argss) {
          var go = function (v) {
              if (v instanceof Data_List_Types.Nil) {
                  return Data_List_Types.Nil.value;
              };
              if (v instanceof Data_List_Types.Cons) {
                  return new Data_List_Types.Cons(visitVia(Language_Shape_Stlc_Index.ixStepList.head)(v.value0), go(Data_Functor.map(Data_List_Types.functorList)(visitVia(Language_Shape_Stlc_Index.ixStepList.tail))(v.value1)));
              };
              throw new Error("Failed pattern match at Language.Shape.Stlc.Recursor.Index (line 43, column 3 - line 43, column 15): " + [ v.constructor.name ]);
          };
          return go(Data_Functor.map(Data_List_Types.functorList)(visitVia(ixStep))(argss));
      };
  };
  var recType = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Context.recType()({
              arrowType: function (args) {
                  return rec.arrowType((function () {
                      var $54 = {};
                      for (var $55 in args) {
                          if ({}.hasOwnProperty.call(args, $55)) {
                              $54[$55] = args[$55];
                          };
                      };
                      $54.dom = visitVia(Language_Shape_Stlc_Index.ixStepArrowType.dom)(args.dom);
                      $54.cod = visitVia(Language_Shape_Stlc_Index.ixStepArrowType.cod)(args.cod);
                      return $54;
                  })());
              },
              dataType: function (args) {
                  return rec.dataType((function () {
                      var $57 = {};
                      for (var $58 in args) {
                          if ({}.hasOwnProperty.call(args, $58)) {
                              $57[$58] = args[$58];
                          };
                      };
                      $57.typeId = args.typeId;
                      return $57;
                  })());
              },
              holeType: function (args) {
                  return rec.holeType((function () {
                      var $60 = {};
                      for (var $61 in args) {
                          if ({}.hasOwnProperty.call(args, $61)) {
                              $60[$61] = args[$61];
                          };
                      };
                      $60.holeId = args.holeId;
                      return $60;
                  })());
              }
          });
      };
  };
  var recTermBindItem = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Context.recTermBindItem()({
              termBindItem: function (args) {
                  return rec.termBindItem((function () {
                      var $63 = {};
                      for (var $64 in args) {
                          if ({}.hasOwnProperty.call(args, $64)) {
                              $63[$64] = args[$64];
                          };
                      };
                      $63.termBind = visitVia(Language_Shape_Stlc_Index.ixStepTermBindItem.termBind)(args.termBind);
                      return $63;
                  })());
              }
          });
      };
  };
  var recSumItem = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Context.recSumItem()({
              sumItem: function (args) {
                  return rec.sumItem((function () {
                      var $66 = {};
                      for (var $67 in args) {
                          if ({}.hasOwnProperty.call(args, $67)) {
                              $66[$67] = args[$67];
                          };
                      };
                      $66.termBind = visitVia(Language_Shape_Stlc_Index.ixStepSumItem.termBind)(args.termBind);
                      $66.paramItems = visitItemsVia(Language_Shape_Stlc_Index.ixStepSumItem.paramItems)(args.paramItems);
                      return $66;
                  })());
              }
          });
      };
  };
  var recParamItem = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Context.recParamItem()({
              paramItem: function (args) {
                  return rec.paramItem((function () {
                      var $69 = {};
                      for (var $70 in args) {
                          if ({}.hasOwnProperty.call(args, $70)) {
                              $69[$70] = args[$70];
                          };
                      };
                      $69.type_ = visitVia(Language_Shape_Stlc_Index.ixStepParamItem.type_)(args.type_);
                      return $69;
                  })());
              }
          });
      };
  };
  var recCaseItem = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return function (dictLacks3) {
                  return function (rec) {
                      return Language_Shape_Stlc_Recursor_Context.recCaseItem()()()()({
                          caseItem: function (args) {
                              return rec.caseItem((function () {
                                  var $72 = {};
                                  for (var $73 in args) {
                                      if ({}.hasOwnProperty.call(args, $73)) {
                                          $72[$73] = args[$73];
                                      };
                                  };
                                  $72.termBindItems = visitItemsVia(Language_Shape_Stlc_Index.ixStepCaseItem.termBindItems)(args.termBindItems);
                                  $72.body = visitVia(Language_Shape_Stlc_Index.ixStepCaseItem.body)(args.body);
                                  return $72;
                              })());
                          }
                      });
                  };
              };
          };
      };
  };
  var recArgItem = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return function (dictLacks3) {
                  return function (rec) {
                      return Language_Shape_Stlc_Recursor_Context.recArgItem()()()()({
                          argItem: function (args) {
                              return rec.argItem((function () {
                                  var $75 = {};
                                  for (var $76 in args) {
                                      if ({}.hasOwnProperty.call(args, $76)) {
                                          $75[$76] = args[$76];
                                      };
                                  };
                                  $75.term = visitVia(Language_Shape_Stlc_Index.ixStepArgItem.term)(args.term);
                                  return $75;
                              })());
                          }
                      });
                  };
              };
          };
      };
  };
  var nonVisit = {
      ix: Data_Maybe.Nothing.value,
      csr: Data_Maybe.Nothing.value
  };
  var recTermBind = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Context.recTermBind()({
              termBind: function (args) {
                  return rec.termBind((function () {
                      var $81 = {};
                      for (var $82 in args) {
                          if ({}.hasOwnProperty.call(args, $82)) {
                              $81[$82] = args[$82];
                          };
                      };
                      $81.termId = (function () {
                          var $78 = {};
                          for (var $79 in args.termId) {
                              if ({}.hasOwnProperty.call(args.termId, $79)) {
                                  $78[$79] = args["termId"][$79];
                              };
                          };
                          $78.visit = nonVisit;
                          return $78;
                      })();
                      return $81;
                  })());
              }
          });
      };
  };
  var recTypeBind = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Context.recTypeBind()({
              typeBind: function (args) {
                  return rec.typeBind((function () {
                      var $87 = {};
                      for (var $88 in args) {
                          if ({}.hasOwnProperty.call(args, $88)) {
                              $87[$88] = args[$88];
                          };
                      };
                      $87.typeId = (function () {
                          var $84 = {};
                          for (var $85 in args.typeId) {
                              if ({}.hasOwnProperty.call(args.typeId, $85)) {
                                  $84[$85] = args["typeId"][$85];
                              };
                          };
                          $84.visit = nonVisit;
                          return $84;
                      })();
                      return $87;
                  })());
              }
          });
      };
  };
  var nilVisit = function (csr) {
      return {
          ix: new Data_Maybe.Just(Language_Shape_Stlc_Index.nilIxUp),
          csr: csr
      };
  };
  var dontVisit = function (args) {
      var $90 = {};
      for (var $91 in args) {
          if ({}.hasOwnProperty.call(args, $91)) {
              $90[$91] = args[$91];
          };
      };
      $90.visit = nonVisit;
      return $90;
  };
  var recTerm = function (dictLacks) {
      return function (dictLacks1) {
          return function (rec) {
              return Language_Shape_Stlc_Recursor_Context.recTerm()()({
                  lam: function (args) {
                      return rec.lam((function () {
                          var $93 = {};
                          for (var $94 in args) {
                              if ({}.hasOwnProperty.call(args, $94)) {
                                  $93[$94] = args[$94];
                              };
                          };
                          $93.termBind = visitVia(Language_Shape_Stlc_Index.ixStepLam.termBind)(args.termBind);
                          $93.body = visitVia(Language_Shape_Stlc_Index.ixStepLam.body)(args.body);
                          return $93;
                      })());
                  },
                  neu: function (args) {
                      return rec.neu((function () {
                          var $96 = {};
                          for (var $97 in args) {
                              if ({}.hasOwnProperty.call(args, $97)) {
                                  $96[$97] = args[$97];
                              };
                          };
                          $96.termId = dontVisit(args.termId);
                          $96.argItems = visitItemsVia(Language_Shape_Stlc_Index.ixStepNeu.argItems)(args.argItems);
                          return $96;
                      })());
                  },
                  let_: function (args) {
                      return rec.let_((function () {
                          var $99 = {};
                          for (var $100 in args) {
                              if ({}.hasOwnProperty.call(args, $100)) {
                                  $99[$100] = args[$100];
                              };
                          };
                          $99.termBind = visitVia(Language_Shape_Stlc_Index.ixStepLet.termBind)(args.termBind);
                          $99.sign = visitVia(Language_Shape_Stlc_Index.ixStepLet.sign)(args.sign);
                          $99.impl = visitVia(Language_Shape_Stlc_Index.ixStepLet.impl)(args.impl);
                          $99.body = visitVia(Language_Shape_Stlc_Index.ixStepLet.body)(args.body);
                          return $99;
                      })());
                  },
                  buf: function (args) {
                      return rec.buf((function () {
                          var $102 = {};
                          for (var $103 in args) {
                              if ({}.hasOwnProperty.call(args, $103)) {
                                  $102[$103] = args[$103];
                              };
                          };
                          $102.sign = visitVia(Language_Shape_Stlc_Index.ixStepBuf.sign)(args.sign);
                          $102.impl = visitVia(Language_Shape_Stlc_Index.ixStepBuf.impl)(args.impl);
                          $102.body = visitVia(Language_Shape_Stlc_Index.ixStepBuf.body)(args.body);
                          return $102;
                      })());
                  },
                  data_: function (args) {
                      return rec.data_((function () {
                          var $105 = {};
                          for (var $106 in args) {
                              if ({}.hasOwnProperty.call(args, $106)) {
                                  $105[$106] = args[$106];
                              };
                          };
                          $105.typeBind = visitVia(Language_Shape_Stlc_Index.ixStepData.typeBind)(args.typeBind);
                          $105.sumItems = visitItemsVia(Language_Shape_Stlc_Index.ixStepData.sumItems)(args.sumItems);
                          $105.body = visitVia(Language_Shape_Stlc_Index.ixStepData.body)(args.body);
                          return $105;
                      })());
                  },
                  match: function (args) {
                      return rec.match((function () {
                          var $111 = {};
                          for (var $112 in args) {
                              if ({}.hasOwnProperty.call(args, $112)) {
                                  $111[$112] = args[$112];
                              };
                          };
                          $111.typeId = (function () {
                              var $108 = {};
                              for (var $109 in args.typeId) {
                                  if ({}.hasOwnProperty.call(args.typeId, $109)) {
                                      $108[$109] = args["typeId"][$109];
                                  };
                              };
                              $108.visit = nonVisit;
                              return $108;
                          })();
                          $111.term = visitVia(Language_Shape_Stlc_Index.ixStepMatch.term)(args.term);
                          $111.caseItems = visitItemsVia(Language_Shape_Stlc_Index.ixStepMatch.caseItems)(args.caseItems);
                          return $111;
                      })());
                  },
                  hole: rec.hole
              });
          };
      };
  };
  exports["nonVisit"] = nonVisit;
  exports["nilVisit"] = nilVisit;
  exports["recType"] = recType;
  exports["recTerm"] = recTerm;
  exports["recArgItem"] = recArgItem;
  exports["recSumItem"] = recSumItem;
  exports["recCaseItem"] = recCaseItem;
  exports["recParamItem"] = recParamItem;
  exports["recTermBindItem"] = recTermBindItem;
  exports["recTypeBind"] = recTypeBind;
  exports["recTermBind"] = recTermBind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Recursor.Metacontext"] = $PS["Language.Shape.Stlc.Recursor.Metacontext"] || {};
  var exports = $PS["Language.Shape.Stlc.Recursor.Metacontext"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Language_Shape_Stlc_Metacontext = $PS["Language.Shape.Stlc.Metacontext"];
  var Language_Shape_Stlc_Recursor_Index = $PS["Language.Shape.Stlc.Recursor.Index"];                
  var recTypeBind = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Index.recTypeBind();
  };
  var recTermBindItem = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Index.recTermBindItem();
  };
  var recTermBind = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Index.recTermBind();
  };
  var recParamItem = function (dictLacks) {
      return Language_Shape_Stlc_Recursor_Index.recParamItem();
  };
  var recArgItem = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return function (dictLacks3) {
                  return Language_Shape_Stlc_Recursor_Index.recArgItem()()()();
              };
          };
      };
  };
  var mapArgsMeta = function (f) {
      return function (args) {
          var $32 = {};
          for (var $33 in args) {
              if ({}.hasOwnProperty.call(args, $33)) {
                  $32[$33] = args[$33];
              };
          };
          $32.meta = f(args.meta);
          return $32;
      };
  };
  var recCaseItem = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return function (dictLacks3) {
                  return function (rec) {
                      return Language_Shape_Stlc_Recursor_Index.recCaseItem()()()()({
                          caseItem: function (args) {
                              return rec.caseItem((function () {
                                  var $38 = {};
                                  for (var $39 in args) {
                                      if ({}.hasOwnProperty.call(args, $39)) {
                                          $38[$39] = args[$39];
                                      };
                                  };
                                  $38.termBindItems = args.termBindItems;
                                  $38.body = Data_Foldable.foldl(Data_List_Types.foldableList)(function (term) {
                                      return function (v1) {
                                          return mapArgsMeta(Language_Shape_Stlc_Metacontext.insertVar(v1.termBindItem.termBind.termId)((Data_Newtype.unwrap()(v1.termBindItem.termBind.meta)).name))(term);
                                      };
                                  })(mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(args.body))(args.termBindItems);
                                  return $38;
                              })());
                          }
                      });
                  };
              };
          };
      };
  };
  var recSumItem = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Index.recSumItem()({
              sumItem: function (args) {
                  return rec.sumItem((function () {
                      var $41 = {};
                      for (var $42 in args) {
                          if ({}.hasOwnProperty.call(args, $42)) {
                              $41[$42] = args[$42];
                          };
                      };
                      $41.termBind = mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(args.termBind);
                      $41.paramItems = Data_Functor.map(Data_List_Types.functorList)(function (v1) {
                          return mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(v1);
                      })(args.paramItems);
                      return $41;
                  })());
              }
          });
      };
  };
  var recTerm = function (dictLacks) {
      return function (dictLacks1) {
          return function (rec) {
              return Language_Shape_Stlc_Recursor_Index.recTerm()()({
                  lam: function (args) {
                      return rec.lam((function () {
                          var $44 = {};
                          for (var $45 in args) {
                              if ({}.hasOwnProperty.call(args, $45)) {
                                  $44[$45] = args[$45];
                              };
                          };
                          $44.termBind = mapArgsMeta(Language_Shape_Stlc_Metacontext.insertVar(args.lam.termBind.termId)((Data_Newtype.unwrap()(args.lam.termBind.meta)).name))(args.termBind);
                          $44.body = mapArgsMeta((function () {
                              var $71 = Language_Shape_Stlc_Metacontext.insertVar(args.lam.termBind.termId)((Data_Newtype.unwrap()(args.lam.termBind.meta)).name);
                              return function ($72) {
                                  return Language_Shape_Stlc_Metacontext.incrementIndentation($71($72));
                              };
                          })())(args.body);
                          return $44;
                      })());
                  },
                  neu: function (args) {
                      return rec.neu((function () {
                          var $47 = {};
                          for (var $48 in args) {
                              if ({}.hasOwnProperty.call(args, $48)) {
                                  $47[$48] = args[$48];
                              };
                          };
                          $47.termId = args.termId;
                          $47.argItems = Data_Functor.map(Data_List_Types.functorList)(function (v1) {
                              return mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(v1);
                          })(args.argItems);
                          return $47;
                      })());
                  },
                  let_: function (args) {
                      return rec.let_((function () {
                          var $50 = {};
                          for (var $51 in args) {
                              if ({}.hasOwnProperty.call(args, $51)) {
                                  $50[$51] = args[$51];
                              };
                          };
                          $50.termBind = mapArgsMeta((function () {
                              var $73 = Language_Shape_Stlc_Metacontext.insertVar(args.let_.termBind.termId)((Data_Newtype.unwrap()(args.let_.termBind.meta)).name);
                              return function ($74) {
                                  return Language_Shape_Stlc_Metacontext.incrementIndentation($73($74));
                              };
                          })())(args.termBind);
                          $50.sign = mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(args.sign);
                          $50.impl = mapArgsMeta((function () {
                              var $75 = Language_Shape_Stlc_Metacontext.insertVar(args.let_.termBind.termId)((Data_Newtype.unwrap()(args.let_.termBind.meta)).name);
                              return function ($76) {
                                  return Language_Shape_Stlc_Metacontext.incrementIndentation($75($76));
                              };
                          })())(args.impl);
                          $50.body = mapArgsMeta((function () {
                              var $77 = Language_Shape_Stlc_Metacontext.incrementIndentationUnless((Data_Newtype.unwrap()(args.let_.meta)).indentedBody);
                              var $78 = Language_Shape_Stlc_Metacontext.insertVar(args.let_.termBind.termId)((Data_Newtype.unwrap()(args.let_.termBind.meta)).name);
                              return function ($79) {
                                  return $77($78($79));
                              };
                          })())(args.body);
                          return $50;
                      })());
                  },
                  buf: function (args) {
                      return rec.buf((function () {
                          var $53 = {};
                          for (var $54 in args) {
                              if ({}.hasOwnProperty.call(args, $54)) {
                                  $53[$54] = args[$54];
                              };
                          };
                          $53.sign = mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(args.sign);
                          $53.impl = mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(args.impl);
                          $53.body = mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentationUnless((Data_Newtype.unwrap()(args.buf.meta)).indentedBody))(args.body);
                          return $53;
                      })());
                  },
                  data_: function (args) {
                      return rec.data_((function () {
                          var $56 = {};
                          for (var $57 in args) {
                              if ({}.hasOwnProperty.call(args, $57)) {
                                  $56[$57] = args[$57];
                              };
                          };
                          $56.typeBind = mapArgsMeta(Language_Shape_Stlc_Metacontext.insertData(args.data_))(args.typeBind);
                          $56.sumItems = Data_Functor.map(Data_List_Types.functorList)(function (v1) {
                              return mapArgsMeta((function () {
                                  var $80 = Language_Shape_Stlc_Metacontext.insertData(args.data_);
                                  return function ($81) {
                                      return Language_Shape_Stlc_Metacontext.incrementIndentation($80($81));
                                  };
                              })())(v1);
                          })(args.sumItems);
                          $56.body = mapArgsMeta((function () {
                              var $82 = Language_Shape_Stlc_Metacontext.incrementIndentationUnless((Data_Newtype.unwrap()(args.data_.meta)).indentedBody);
                              var $83 = Language_Shape_Stlc_Metacontext.insertData(args.data_);
                              return function ($84) {
                                  return $82($83($84));
                              };
                          })())(args.body);
                          return $56;
                      })());
                  },
                  match: function (args) {
                      return rec.match((function () {
                          var $59 = {};
                          for (var $60 in args) {
                              if ({}.hasOwnProperty.call(args, $60)) {
                                  $59[$60] = args[$60];
                              };
                          };
                          $59.typeId = args.typeId;
                          $59.term = mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(args.term);
                          $59.caseItems = Data_Functor.map(Data_List_Types.functorList)(function (argItem) {
                              return mapArgsMeta((function () {
                                  var $85 = Data_Foldable.foldr(Data_List_Types.foldableList)(function (termBindItem) {
                                      return function (f) {
                                          var $87 = Language_Shape_Stlc_Metacontext.insertVar(termBindItem.termBind.termId)((Data_Newtype.unwrap()(termBindItem.termBind.meta)).name);
                                          return function ($88) {
                                              return $87(f($88));
                                          };
                                      };
                                  })(Control_Category.identity(Control_Category.categoryFn))(argItem.caseItem.termBindItems);
                                  return function ($86) {
                                      return Language_Shape_Stlc_Metacontext.incrementIndentation($85($86));
                                  };
                              })())(argItem);
                          })(args.caseItems);
                          return $59;
                      })());
                  },
                  hole: rec.hole
              });
          };
      };
  };
  var recType = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Index.recType()({
              arrowType: function (args) {
                  return rec.arrowType((function () {
                      var $62 = {};
                      for (var $63 in args) {
                          if ({}.hasOwnProperty.call(args, $63)) {
                              $62[$63] = args[$63];
                          };
                      };
                      $62.dom = args.dom;
                      $62.cod = mapArgsMeta(Language_Shape_Stlc_Metacontext.incrementIndentation)(args.cod);
                      return $62;
                  })());
              },
              dataType: function (args) {
                  return rec.dataType((function () {
                      var $65 = {};
                      for (var $66 in args) {
                          if ({}.hasOwnProperty.call(args, $66)) {
                              $65[$66] = args[$66];
                          };
                      };
                      $65.typeId = args.typeId;
                      return $65;
                  })());
              },
              holeType: function (args) {
                  return rec.holeType((function () {
                      var $68 = {};
                      for (var $69 in args) {
                          if ({}.hasOwnProperty.call(args, $69)) {
                              $68[$69] = args[$69];
                          };
                      };
                      $68.holeId = args.holeId;
                      return $68;
                  })());
              }
          });
      };
  };
  exports["recType"] = recType;
  exports["recTerm"] = recTerm;
  exports["recArgItem"] = recArgItem;
  exports["recSumItem"] = recSumItem;
  exports["recCaseItem"] = recCaseItem;
  exports["recParamItem"] = recParamItem;
  exports["recTermBindItem"] = recTermBindItem;
  exports["recTypeBind"] = recTypeBind;
  exports["recTermBind"] = recTermBind;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function createClass(baseClass) {
    function bindProperty(instance, prop, value) {
      switch (prop) {
        case 'state':
        case 'render':
        case 'componentDidMount':
        case 'componentWillUnmount':
          instance[prop] = value;
          break;

        case 'componentDidCatch':
        case 'componentWillUpdate':
        case 'shouldComponentUpdate':
        case 'getSnapshotBeforeUpdate':
          instance[prop] = function (a, b) { return value(a)(b)(); };
          break;

        case 'componentDidUpdate':
          instance[prop] = function (a, b, c) { return value(a)(b)(c)(); };
          break;

        case 'unsafeComponentWillMount':
          instance['UNSAFE_componentWillMount'] = value;
          break;

        case 'unsafeComponentWillReceiveProps':
          instance['UNSAFE_componentWillReceiveProps'] = function (a) { return value(a)(); };
          break;

        case 'unsafeComponentWillUpdate':
          instance['UNSAFE_componentWillUpdate'] = function (a, b) { return value(a)(b)(); };
          break;

        default:
          throw new Error('[purescript-react] Not a component property: ' + prop);
      }
    }

    return function (displayName) {
      return function (ctrFn) {
        var Constructor = function (props) {
          baseClass.call(this, props);
          var spec = ctrFn(this)();
          for (var k in spec) {
            bindProperty(this, k, spec[k]);
          }
        };

        Constructor.displayName = displayName;
        Constructor.prototype = Object.create(baseClass.prototype);
        Constructor.prototype.constructor = Constructor;

        return Constructor;
      };
    };
  }

  var componentImpl = createClass(React.Component);
  exports.componentImpl = componentImpl;       

  function setStateImpl(this_) {
    return function(state){
      return function(){
        this_.setState(state);
      };
    };
  }
  exports.setStateImpl = setStateImpl;                        

  function getState(this_) {
    return function(){
      if (!this_.state) {
        throw new Error('[purescript-react] Cannot get state within constructor');
      }
      return this_.state;
    };
  }
  exports.getState = getState;                              

  function createElement(class_) {
    return function(props){
      return function(children){
        return React.createElement.apply(React, [class_, props].concat(children));
      };
    };
  }                                         
  exports.createElementTagName = createElement;

  function createLeafElement(class_) {
    return function(props) {
      return React.createElement(class_, props);
    };
  }
  exports.createLeafElementImpl = createLeafElement;

  function createElementDynamic(class_) {
    return function(props) {
      return function(children){
        return React.createElement(class_, props, children);
      };
    };
  };                                                      
  exports.createElementTagNameDynamic = createElementDynamic;
})(PS["React"] = PS["React"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["React"] = $PS["React"] || {};
  var exports = $PS["React"];
  var $foreign = $PS["React"];                                    
  var modifyState = $foreign.setStateImpl;
  var createLeafElement = function (dictReactPropFields) {
      return $foreign.createLeafElementImpl;
  };
  var component = function (dictReactComponentSpec) {
      return $foreign.componentImpl;
  };
  exports["component"] = component;
  exports["modifyState"] = modifyState;
  exports["createLeafElement"] = createLeafElement;
  exports["getState"] = $foreign.getState;
  exports["createElementTagName"] = $foreign.createElementTagName;
  exports["createElementTagNameDynamic"] = $foreign.createElementTagNameDynamic;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function unsafeMkProps(key) {
    return function(value){
      var result = {};
      result[key] = value;
      return result;
    };
  }
  exports.unsafeMkProps = unsafeMkProps;        

  function unsafeFromPropsArray(props) {
    var result = {};

    for (var i = 0, len = props.length; i < len; i++) {
      var prop = props[i];

      for (var key in prop) {
        if (prop.hasOwnProperty(key)) {
          result[key] = prop[key];
        }
      }
    }

    return result;
  };
  exports.unsafeFromPropsArray = unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  "use strict";

  exports.mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["mkEffectFn1"] = $foreign.mkEffectFn1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["React.DOM.Props"] = $PS["React.DOM.Props"] || {};
  var exports = $PS["React.DOM.Props"];
  var $foreign = $PS["React.DOM.Props"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var onMouseUp = function (f) {
      return $foreign.unsafeMkProps("onMouseUp")(Effect_Uncurried.mkEffectFn1(f));
  };
  var onMouseOver = function (f) {
      return $foreign.unsafeMkProps("onMouseOver")(Effect_Uncurried.mkEffectFn1(f));
  };
  var onMouseOut = function (f) {
      return $foreign.unsafeMkProps("onMouseOut")(Effect_Uncurried.mkEffectFn1(f));
  };
  var onMouseDown = function (f) {
      return $foreign.unsafeMkProps("onMouseDown")(Effect_Uncurried.mkEffectFn1(f));
  };
  var onClick = function (f) {
      return $foreign.unsafeMkProps("onClick")(Effect_Uncurried.mkEffectFn1(f));
  };                                              
  var className = $foreign.unsafeMkProps("className");
  var _id = $foreign.unsafeMkProps("id");
  exports["className"] = className;
  exports["_id"] = _id;
  exports["onClick"] = onClick;
  exports["onMouseDown"] = onMouseDown;
  exports["onMouseOut"] = onMouseOut;
  exports["onMouseOver"] = onMouseOver;
  exports["onMouseUp"] = onMouseUp;
  exports["unsafeFromPropsArray"] = $foreign.unsafeFromPropsArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["React.DOM"] = $PS["React.DOM"] || {};
  var exports = $PS["React.DOM"];
  var React = $PS["React"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var text = Unsafe_Coerce.unsafeCoerce;  
  var mkDOM = function (dynamic) {
      return function (tag) {
          return function (props) {
              var createElement = (function () {
                  if (!dynamic) {
                      return React.createElementTagName;
                  };
                  if (dynamic) {
                      return React.createElementTagNameDynamic;
                  };
                  throw new Error("Failed pattern match at React.DOM (line 15, column 5 - line 17, column 55): " + [ dynamic.constructor.name ]);
              })();
              return createElement(tag)(React_DOM_Props.unsafeFromPropsArray(props));
          };
      };
  };                              
  var span = mkDOM(false)("span");
  var div = mkDOM(false)("div");  
  var br = function (props) {
      return mkDOM(false)("br")(props)([  ]);
  };
  var br$prime = br([  ]);
  exports["text"] = text;
  exports["br'"] = br$prime;
  exports["div"] = div;
  exports["span"] = span;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Rendering.Token"] = $PS["Language.Shape.Stlc.Rendering.Token"] || {};
  var exports = $PS["Language.Shape.Stlc.Rendering.Token"];
  var Data_Array = $PS["Data.Array"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_Common = $PS["Data.String.Common"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var token = {
      arrowType1: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" \u2192 ") ]),
      lam1: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text("fun ") ]),
      lam2: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" \u21d2 ") ]),
      data1: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text("type ") ]),
      data2: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" = ") ]),
      data3: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text(" in ") ]),
      neu1: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" ") ]),
      let1: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text("let ") ]),
      let2: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" : ") ]),
      let3: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" = ") ]),
      let4: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text(" in ") ]),
      buf1: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text("buf ") ]),
      buf2: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" : ") ]),
      buf3: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text(" in ") ]),
      match1: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text("match ") ]),
      match2: React_DOM.span([ React_DOM_Props.className("token delimiter") ])([ React_DOM.text(" with ") ]),
      sumItem1: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text("| ") ]),
      sumItem2: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" ") ]),
      caseItem1: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text("| ") ]),
      caseItem2: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" ") ]),
      caseItem3: React_DOM.span([ React_DOM_Props.className("token") ])([ React_DOM.text(" \u21d2 ") ]),
      lparen: React_DOM.span([ React_DOM_Props.className("token punctuation paren lparen") ])([ React_DOM.text("(") ]),
      rparen: React_DOM.span([ React_DOM_Props.className("token punctuation paren rparen") ])([ React_DOM.text(")") ]),
      space: React_DOM.span([ React_DOM_Props.className("token space") ])([ React_DOM.text(" ") ])
  };
  var indentation = function (i) {
      return React_DOM.span([ React_DOM_Props.className("indentation") ])([ React_DOM.text(Data_String_Common.joinWith("")(Data_Array.replicate(i)("  "))) ]);
  };
  var newline = function (meta) {
      return function (indented) {
          if (indented) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
                  var $1 = (Data_Newtype.unwrap()(meta)).indentation === 0;
                  if ($1) {
                      return [ React_DOM["br'"], React_DOM["br'"] ];
                  };
                  return [ React_DOM["br'"] ];
              })())([ indentation((Data_Newtype.unwrap()(meta)).indentation) ]);
          };
          return [  ];
      };
  };
  var newlineOrSpace = function (meta) {
      return function (indented) {
          if (indented) {
              return [ React_DOM["br'"], indentation((Data_Newtype.unwrap()(meta)).indentation) ];
          };
          return [ token.space ];
      };
  };
  exports["token"] = token;
  exports["newline"] = newline;
  exports["newlineOrSpace"] = newlineOrSpace;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Rendering.Utilities"] = $PS["Language.Shape.Stlc.Rendering.Utilities"] || {};
  var exports = $PS["Language.Shape.Stlc.Rendering.Utilities"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Language_Shape_Stlc_Rendering_Token = $PS["Language.Shape.Stlc.Rendering.Token"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];                
  var requiresParenType = function (v) {
      if (v instanceof Language_Shape_Stlc_Syntax.ArrowType) {
          return true;
      };
      return false;
  };
  var requiresParenTerm = function (v) {
      if (v instanceof Language_Shape_Stlc_Syntax.Lam) {
          return true;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.Neu && Data_List.length(v.value0.argItems) === 0) {
          return true;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.Let) {
          return true;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.Buf) {
          return true;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.Data) {
          return true;
      };
      if (v instanceof Language_Shape_Stlc_Syntax.Match) {
          return true;
      };
      return false;
  };   
  var renderConcatArray = (function () {
      var $18 = Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity));
      return function ($19) {
          return (function (v) {
              return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.foldl(Data_Semigroup.append(Data_Semigroup.semigroupArray))([  ]))(v);
          })($18($19));
      };
  })();
  var maybeArray = function (ma) {
      return function (f) {
          return Data_Maybe.maybe([  ])(function ($20) {
              return Data_Array.singleton(f($20));
          })(ma);
      };
  };
  var enParen = function (m) {
      return renderConcatArray([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.lparen ]), m, Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.rparen ]) ]);
  };
  var enParenIf = function (m) {
      return function (v) {
          if (v) {
              return enParen(m);
          };
          if (!v) {
              return m;
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Utilities (line 61, column 1 - line 61, column 73): " + [ m.constructor.name, v.constructor.name ]);
      };
  };
  exports["maybeArray"] = maybeArray;
  exports["enParenIf"] = enParenIf;
  exports["requiresParenType"] = requiresParenType;
  exports["requiresParenTerm"] = requiresParenTerm;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Syntax.Modify"] = $PS["Language.Shape.Stlc.Syntax.Modify"] || {};
  var exports = $PS["Language.Shape.Stlc.Syntax.Modify"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Debug = $PS["Debug"];
  var Language_Shape_Stlc_Index = $PS["Language.Shape.Stlc.Index"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Recursor_Proxy = $PS["Language.Shape.Stlc.Recursor.Proxy"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Record = $PS["Record"];                
  var modifySyntaxAt = function (f) {
      return function (v) {
          return function (syn) {
              var w = function (dictIsSymbol) {
                  return function (dictCons) {
                      return function (dictShow) {
                          return function (label) {
                              return function (wrapR) {
                                  return function (wrap) {
                                      return function (unwrap) {
                                          return function (steps1) {
                                              return function (r) {
                                                  var a0 = Record.get(dictIsSymbol)()(label)(r);
                                                  var syn0 = wrap(a0);
                                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(go(steps1)(syn0))(function (syn11) {
                                                      return Control_Bind.bind(Data_Maybe.bindMaybe)(unwrap(syn11))(function (a1) {
                                                          var r$prime = Record.set(dictIsSymbol)()()(label)(a1)(r);
                                                          var syn2 = wrapR(r$prime);
                                                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(syn2);
                                                      });
                                                  });
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
              var go = function (v1) {
                  return function (syn2) {
                      if (v1 instanceof Data_List_Types.Nil) {
                          return f(syn2);
                      };
                      if (v1 instanceof Data_List_Types.Cons) {
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxType && syn2.value0 instanceof Language_Shape_Stlc_Syntax.ArrowType) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepArrowType.dom)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "dom";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showType)(Language_Shape_Stlc_Recursor_Proxy["_dom"])(function ($42) {
                                      return Language_Shape_Stlc_Syntax.SyntaxType.create(Language_Shape_Stlc_Syntax.ArrowType.create($42));
                                  })(Language_Shape_Stlc_Syntax.SyntaxType.create)(Language_Shape_Stlc_Syntax.toType)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepArrowType.cod)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "cod";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showType)(Language_Shape_Stlc_Recursor_Proxy["_cod"])(function ($43) {
                                      return Language_Shape_Stlc_Syntax.SyntaxType.create(Language_Shape_Stlc_Syntax.ArrowType.create($43));
                                  })(Language_Shape_Stlc_Syntax.SyntaxType.create)(Language_Shape_Stlc_Syntax.toType)(v1.value1)(syn2.value0.value0);
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && syn2.value0 instanceof Language_Shape_Stlc_Syntax.Lam) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepLam.termBind)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "termBind";
                                      }
                                  })()(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "meta";
                                      }
                                  })(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "termId";
                                      }
                                  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata)))(Language_Shape_Stlc_Recursor_Proxy["_termBind"])(function ($44) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Lam.create($44));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTermBind.create)(Language_Shape_Stlc_Syntax.toTermBind)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepLam.body)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "body";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_body"])(function ($45) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Lam.create($45));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0.value0);
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && syn2.value0 instanceof Language_Shape_Stlc_Syntax.Neu) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepNeu.termId)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "termId";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTermId)(Language_Shape_Stlc_Recursor_Proxy["_termId"])(function ($46) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Neu.create($46));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTermId.create)(Language_Shape_Stlc_Syntax.toTermId)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepNeu.argItems)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "argItems";
                                      }
                                  })()(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "meta";
                                      }
                                  })(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "term";
                                      }
                                  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTerm))(Language_Shape_Stlc_Metadata.showArgItemMetadata))))(Language_Shape_Stlc_Recursor_Proxy["_argItems"])(function ($47) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Neu.create($47));
                                  })((function () {
                                      var $48 = Data_Functor.map(Data_List_Types.functorList)(Language_Shape_Stlc_Syntax.SyntaxArgItem.create);
                                      return function ($49) {
                                          return Language_Shape_Stlc_Syntax.SyntaxList.create($48($49));
                                      };
                                  })())((function () {
                                      var $50 = Control_Bind.join(Data_Maybe.bindMaybe);
                                      var $51 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Maybe.applicativeMaybe)(Language_Shape_Stlc_Syntax.toArgItem));
                                      return function ($52) {
                                          return $50($51(Language_Shape_Stlc_Syntax.toSyntaxList($52)));
                                      };
                                  })())(v1.value1)(syn2.value0.value0);
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && syn2.value0 instanceof Language_Shape_Stlc_Syntax.Let) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepLet.termBind)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "termBind";
                                      }
                                  })()(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "meta";
                                      }
                                  })(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "termId";
                                      }
                                  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata)))(Language_Shape_Stlc_Recursor_Proxy["_termBind"])(function ($53) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Let.create($53));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTermBind.create)(Language_Shape_Stlc_Syntax.toTermBind)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepLet.sign)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "sign";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showType)(Language_Shape_Stlc_Recursor_Proxy["_sign"])(function ($54) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Let.create($54));
                                  })(Language_Shape_Stlc_Syntax.SyntaxType.create)(Language_Shape_Stlc_Syntax.toType)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepLet.impl)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "impl";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_impl"])(function ($55) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Let.create($55));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepLet.body)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "body";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_body"])(function ($56) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Let.create($56));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0.value0);
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && syn2.value0 instanceof Language_Shape_Stlc_Syntax.Buf) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepBuf.sign)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "sign";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showType)(Language_Shape_Stlc_Recursor_Proxy["_sign"])(function ($57) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Buf.create($57));
                                  })(Language_Shape_Stlc_Syntax.SyntaxType.create)(Language_Shape_Stlc_Syntax.toType)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepBuf.impl)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "impl";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_impl"])(function ($58) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Buf.create($58));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepBuf.body)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "body";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_body"])(function ($59) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Buf.create($59));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0.value0);
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && syn2.value0 instanceof Language_Shape_Stlc_Syntax.Data) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepData.typeBind)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "typeBind";
                                      }
                                  })()(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "meta";
                                      }
                                  })(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "typeId";
                                      }
                                  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTypeId))(Language_Shape_Stlc_Metadata.showTypeBindMetadata)))(Language_Shape_Stlc_Recursor_Proxy["_typeBind"])(function ($60) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Data.create($60));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTypeBind.create)(Language_Shape_Stlc_Syntax.toTypeBind)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepData.sumItems)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(go(v1.value1)(Language_Shape_Stlc_Syntax.rollSyntaxList(Language_Shape_Stlc_Syntax.SyntaxSumItem.create)(syn2.value0.value0.sumItems)))(function (synList) {
                                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Syntax.unrollSyntaxList(Language_Shape_Stlc_Syntax.toSumItem)(synList))(function (sumItems) {
                                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Data({
                                              typeBind: syn2.value0.value0.typeBind,
                                              sumItems: sumItems,
                                              body: syn2.value0.value0.body,
                                              meta: syn2.value0.value0.meta
                                          })));
                                      });
                                  });
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepData.body)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "body";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_body"])(function ($61) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Data.create($61));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0.value0);
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && syn2.value0 instanceof Language_Shape_Stlc_Syntax.Match) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepMatch.term)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "term";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_term"])(function ($62) {
                                      return Language_Shape_Stlc_Syntax.SyntaxTerm.create(Language_Shape_Stlc_Syntax.Match.create($62));
                                  })(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepMatch.caseItems)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(go(v1.value1)(Language_Shape_Stlc_Syntax.rollSyntaxList(Language_Shape_Stlc_Syntax.SyntaxCaseItem.create)(syn2.value0.value0.caseItems)))(function (synList) {
                                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Syntax.unrollSyntaxList(Language_Shape_Stlc_Syntax.toCaseItem)(synList))(function (caseItems) {
                                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Match({
                                              typeId: syn2.value0.value0.typeId,
                                              term: syn2.value0.value0.term,
                                              caseItems: caseItems,
                                              meta: syn2.value0.value0.meta
                                          })));
                                      });
                                  });
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxArgItem && Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepArgItem.term)) {
                              return w({
                                  reflectSymbol: function () {
                                      return "term";
                                  }
                              })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_term"])(Language_Shape_Stlc_Syntax.SyntaxArgItem.create)(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0);
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxSumItem) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepSumItem.termBind)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "termBind";
                                      }
                                  })()(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "meta";
                                      }
                                  })(Data_Show.showRecordFieldsCons({
                                      reflectSymbol: function () {
                                          return "termId";
                                      }
                                  })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata)))(Language_Shape_Stlc_Recursor_Proxy["_termBind"])(Language_Shape_Stlc_Syntax.SyntaxSumItem.create)(Language_Shape_Stlc_Syntax.SyntaxTermBind.create)(Language_Shape_Stlc_Syntax.toTermBind)(v1.value1)(syn2.value0);
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepSumItem.paramItems)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(go(v1.value1)(Language_Shape_Stlc_Syntax.rollSyntaxList(Language_Shape_Stlc_Syntax.SyntaxParamItem.create)(syn2.value0.paramItems)))(function (synList) {
                                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Syntax.unrollSyntaxList(Language_Shape_Stlc_Syntax.toParamItem)(synList))(function (paramItems) {
                                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Language_Shape_Stlc_Syntax.SyntaxSumItem.create({
                                              termBind: syn2.value0.termBind,
                                              paramItems: paramItems,
                                              meta: syn2.value0.meta
                                          }));
                                      });
                                  });
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxCaseItem) {
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepCaseItem.termBindItems)) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(go(v1.value1)(Language_Shape_Stlc_Syntax.rollSyntaxList(Language_Shape_Stlc_Syntax.SyntaxTermBindItem.create)(syn2.value0.termBindItems)))(function (synList) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Debug.traceM()(Data_Maybe.monadMaybe)("SyntaxCaseItem.synList = " + Data_Show.show(Language_Shape_Stlc_Syntax.showSyntax)(synList)))(function () {
                                          return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Syntax.unrollSyntaxList(Language_Shape_Stlc_Syntax.toTermBindItem)(synList))(function (termBindItems) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Debug.traceM()(Data_Maybe.monadMaybe)("SyntaxCaseItem.termBindItems = " + Data_Show.show(Data_List_Types.showList(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                                                  reflectSymbol: function () {
                                                      return "meta";
                                                  }
                                              })(Data_Show.showRecordFieldsCons({
                                                  reflectSymbol: function () {
                                                      return "termBind";
                                                  }
                                              })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                                                  reflectSymbol: function () {
                                                      return "meta";
                                                  }
                                              })(Data_Show.showRecordFieldsCons({
                                                  reflectSymbol: function () {
                                                      return "termId";
                                                  }
                                              })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata))))(Language_Shape_Stlc_Metadata.showTermBindItemMetadata))))(termBindItems)))(function () {
                                                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Language_Shape_Stlc_Syntax.SyntaxCaseItem.create({
                                                      termBindItems: termBindItems,
                                                      body: syn2.value0.body,
                                                      meta: syn2.value0.meta
                                                  }));
                                              });
                                          });
                                      });
                                  });
                              };
                              if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepCaseItem.body)) {
                                  return w({
                                      reflectSymbol: function () {
                                          return "body";
                                      }
                                  })()(Language_Shape_Stlc_Syntax.showTerm)(Language_Shape_Stlc_Recursor_Proxy["_body"])(Language_Shape_Stlc_Syntax.SyntaxCaseItem.create)(Language_Shape_Stlc_Syntax.SyntaxTerm.create)(Language_Shape_Stlc_Syntax.toTerm)(v1.value1)(syn2.value0);
                              };
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxParamItem && Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepParamItem.type_)) {
                              return w({
                                  reflectSymbol: function () {
                                      return "type_";
                                  }
                              })()(Language_Shape_Stlc_Syntax.showType)(Language_Shape_Stlc_Recursor_Proxy["_type_"])(Language_Shape_Stlc_Syntax.SyntaxParamItem.create)(Language_Shape_Stlc_Syntax.SyntaxType.create)(Language_Shape_Stlc_Syntax.toType)(v1.value1)(syn2.value0);
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxTermBindItem && Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepTermBindItem.termBind)) {
                              return w({
                                  reflectSymbol: function () {
                                      return "termBind";
                                  }
                              })()(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                                  reflectSymbol: function () {
                                      return "meta";
                                  }
                              })(Data_Show.showRecordFieldsCons({
                                  reflectSymbol: function () {
                                      return "termId";
                                  }
                              })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showTermId))(Language_Shape_Stlc_Metadata.showTermBindMetadata)))(Language_Shape_Stlc_Recursor_Proxy["_termBind"])(Language_Shape_Stlc_Syntax.SyntaxTermBindItem.create)(Language_Shape_Stlc_Syntax.SyntaxTermBind.create)(Language_Shape_Stlc_Syntax.toTermBind)(v1.value1)(syn2.value0);
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxList && (syn2.value0 instanceof Data_List_Types.Cons && Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepList.head))) {
                              return Data_Functor.map(Data_Maybe.functorMaybe)(function (synHead$prime) {
                                  return new Language_Shape_Stlc_Syntax.SyntaxList(new Data_List_Types.Cons(synHead$prime, syn2.value0.value1));
                              })(go(v1.value1)(syn2.value0.value0));
                          };
                          if (syn2 instanceof Language_Shape_Stlc_Syntax.SyntaxList && (syn2.value0 instanceof Data_List_Types.Cons && Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v1.value0)(Language_Shape_Stlc_Index.ixStepList.tail))) {
                              return Data_Functor.map(Data_Maybe.functorMaybe)(function (synsTail$prime) {
                                  return new Language_Shape_Stlc_Syntax.SyntaxList(new Data_List_Types.Cons(syn2.value0.value0, synsTail$prime));
                              })(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Syntax.toSyntaxList)(go(v1.value1)(new Language_Shape_Stlc_Syntax.SyntaxList(syn2.value0.value1))));
                          };
                          return Data_Maybe.Nothing.value;
                      };
                      throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.Modify (line 23, column 3 - line 23, column 21): " + [ v1.constructor.name, syn2.constructor.name ]);
                  };
              };
              return go(v)(syn);
          };
      };
  };
  exports["modifySyntaxAt"] = modifySyntaxAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Syntax.Metadata"] = $PS["Language.Shape.Stlc.Syntax.Metadata"] || {};
  var exports = $PS["Language.Shape.Stlc.Syntax.Metadata"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_List = $PS["Data.List"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Language_Shape_Stlc_Index = $PS["Language.Shape.Stlc.Index"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Language_Shape_Stlc_Syntax_Modify = $PS["Language.Shape.Stlc.Syntax.Modify"];
  var replaceNameAt = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (x) {
              return function (toSyntax) {
                  return function (wrapMeta) {
                      return function (name$prime) {
                          return function (ix) {
                              return Language_Shape_Stlc_Syntax_Modify.modifySyntaxAt(function (v) {
                                  return Data_Maybe.Just.create(toSyntax((function () {
                                      var $43 = {};
                                      for (var $44 in x) {
                                          if ({}.hasOwnProperty.call(x, $44)) {
                                              $43[$44] = x[$44];
                                          };
                                      };
                                      $43.meta = Data_Newtype.over(dictNewtype)(dictNewtype1)(wrapMeta)(function (meta) {
                                          var $40 = {};
                                          for (var $41 in meta) {
                                              if ({}.hasOwnProperty.call(meta, $41)) {
                                                  $40[$41] = meta[$41];
                                              };
                                          };
                                          $40.name = name$prime;
                                          return $40;
                                      })(x.meta);
                                      return $43;
                                  })()));
                              })(ix);
                          };
                      };
                  };
              };
          };
      };
  };
  var isIndentableIxStep = function (v) {
      var indentableIxStepLabels = [ Language_Shape_Stlc_Index.IxStepArrowType.value, Language_Shape_Stlc_Index.IxStepLam.value, Language_Shape_Stlc_Index.IxStepLet.value, Language_Shape_Stlc_Index.IxStepBuf.value, Language_Shape_Stlc_Index.IxStepData.value, Language_Shape_Stlc_Index.IxStepMatch.value, Language_Shape_Stlc_Index.IxStepArgItem.value, Language_Shape_Stlc_Index.IxStepSumItem.value, Language_Shape_Stlc_Index.IxStepCaseItem.value, Language_Shape_Stlc_Index.IxStepParamItem.value, Language_Shape_Stlc_Index.IxStepTermBindItem.value, Language_Shape_Stlc_Index.IxStepList.value ];
      return Data_Array.elem(Language_Shape_Stlc_Index.eqIxStepLabel)(v.value0)(indentableIxStepLabels);
  };
  var stepUpToNearestIndentableParentIxUp = function ($copy_ix) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(ix) {
          var v = Data_List.uncons(Data_Newtype.unwrap()(ix));
          if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, ix);
          };
          if (v instanceof Data_Maybe.Just) {
              var $50 = isIndentableIxStep(v.value0.head);
              if ($50) {
                  $tco_done = true;
                  return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.head), Data_Newtype.wrap()(v.value0.tail));
              };
              $copy_ix = Data_Newtype.wrap()(v.value0.tail);
              return;
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.Metadata (line 54, column 42 - line 60, column 55): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_ix);
      };
      return $tco_result;
  };
  var indentTerm = function (v) {
      return function (term) {
          if (v instanceof Data_Maybe.Nothing) {
              return term;
          };
          if (v instanceof Data_Maybe.Just) {
              if (term instanceof Language_Shape_Stlc_Syntax.Lam && Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepLam.body)) {
                  return new Language_Shape_Stlc_Syntax.Lam({
                      termBind: term.value0.termBind,
                      body: term.value0.body,
                      meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.LamMetadata)(function (o) {
                          return {
                              indentedBody: !o.indentedBody,
                              name: o.name
                          };
                      })(term.value0.meta)
                  });
              };
              if (term instanceof Language_Shape_Stlc_Syntax.Let) {
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepLet.termBind)) {
                      return new Language_Shape_Stlc_Syntax.Let(term.value0);
                  };
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepLet.sign)) {
                      return new Language_Shape_Stlc_Syntax.Let({
                          termBind: term.value0.termBind,
                          sign: term.value0.sign,
                          impl: term.value0.impl,
                          body: term.value0.body,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.LetMetadata)(function (o) {
                              return {
                                  indentedSign: !o.indentedSign,
                                  indentedBody: o.indentedBody,
                                  indentedImpl: o.indentedImpl,
                                  name: o.name
                              };
                          })(term.value0.meta)
                      });
                  };
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepLet.impl)) {
                      return new Language_Shape_Stlc_Syntax.Let({
                          termBind: term.value0.termBind,
                          sign: term.value0.sign,
                          impl: term.value0.impl,
                          body: term.value0.body,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.LetMetadata)(function (o) {
                              return {
                                  indentedImpl: !o.indentedImpl,
                                  indentedBody: o.indentedBody,
                                  indentedSign: o.indentedSign,
                                  name: o.name
                              };
                          })(term.value0.meta)
                      });
                  };
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepLet.body)) {
                      return new Language_Shape_Stlc_Syntax.Let({
                          termBind: term.value0.termBind,
                          sign: term.value0.sign,
                          impl: term.value0.impl,
                          body: term.value0.body,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.LetMetadata)(function (o) {
                              return {
                                  indentedBody: !o.indentedBody,
                                  indentedImpl: o.indentedImpl,
                                  indentedSign: o.indentedSign,
                                  name: o.name
                              };
                          })(term.value0.meta)
                      });
                  };
              };
              if (term instanceof Language_Shape_Stlc_Syntax.Buf) {
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepBuf.sign)) {
                      return new Language_Shape_Stlc_Syntax.Buf({
                          sign: term.value0.sign,
                          impl: term.value0.impl,
                          body: term.value0.body,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.BufMetadata)(function (o) {
                              return {
                                  indentedSign: !o.indentedSign,
                                  indentedBody: o.indentedBody,
                                  indentedImpl: o.indentedImpl
                              };
                          })(term.value0.meta)
                      });
                  };
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepBuf.impl)) {
                      return new Language_Shape_Stlc_Syntax.Buf({
                          sign: term.value0.sign,
                          impl: term.value0.impl,
                          body: term.value0.body,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.BufMetadata)(function (o) {
                              return {
                                  indentedImpl: !o.indentedImpl,
                                  indentedBody: o.indentedBody,
                                  indentedSign: o.indentedSign
                              };
                          })(term.value0.meta)
                      });
                  };
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepBuf.body)) {
                      return new Language_Shape_Stlc_Syntax.Buf({
                          sign: term.value0.sign,
                          impl: term.value0.impl,
                          body: term.value0.body,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.BufMetadata)(function (o) {
                              return {
                                  indentedBody: !o.indentedBody,
                                  indentedImpl: o.indentedImpl,
                                  indentedSign: o.indentedSign
                              };
                          })(term.value0.meta)
                      });
                  };
              };
              if (term instanceof Language_Shape_Stlc_Syntax.Data) {
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepData.typeBind)) {
                      return new Language_Shape_Stlc_Syntax.Data(term.value0);
                  };
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepData.sumItems)) {
                      return new Language_Shape_Stlc_Syntax.Data({
                          typeBind: term.value0.typeBind,
                          sumItems: term.value0.sumItems,
                          body: term.value0.body,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.DataMetadata)(function (o) {
                              return {
                                  indentedSumItems: !o.indentedSumItems,
                                  indentedBody: o.indentedBody,
                                  name: o.name
                              };
                          })(term.value0.meta)
                      });
                  };
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepData.body)) {
                      return new Language_Shape_Stlc_Syntax.Data({
                          typeBind: term.value0.typeBind,
                          sumItems: term.value0.sumItems,
                          body: term.value0.body,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.DataMetadata)(function (o) {
                              return {
                                  indentedBody: !o.indentedBody,
                                  indentedSumItems: o.indentedSumItems,
                                  name: o.name
                              };
                          })(term.value0.meta)
                      });
                  };
              };
              if (term instanceof Language_Shape_Stlc_Syntax.Match) {
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepMatch.term)) {
                      return new Language_Shape_Stlc_Syntax.Match(term.value0);
                  };
                  if (Data_Eq.eq(Language_Shape_Stlc_Index.eqIxStep)(v.value0)(Language_Shape_Stlc_Index.ixStepMatch.caseItems)) {
                      return new Language_Shape_Stlc_Syntax.Match({
                          typeId: term.value0.typeId,
                          term: term.value0.term,
                          caseItems: term.value0.caseItems,
                          meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.MatchMetadata)(function (o) {
                              return {
                                  indentedCaseItems: !o.indentedCaseItems
                              };
                          })(term.value0.meta)
                      });
                  };
              };
              return term;
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.Metadata (line 24, column 1 - line 24, column 43): " + [ v.constructor.name, term.constructor.name ]);
      };
  };
  var indentArgItem = function (v) {
      return function (argItem) {
          if (v instanceof Data_Maybe.Nothing) {
              return argItem;
          };
          if (v instanceof Data_Maybe.Just) {
              return {
                  term: argItem.term,
                  meta: Data_Newtype.over()()(Language_Shape_Stlc_Metadata.ArgItemMetadata)(function (o) {
                      return {
                          indented: !o.indented
                      };
                  })(argItem.meta)
              };
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Syntax.Metadata (line 48, column 1 - line 48, column 52): " + [ v.constructor.name, argItem.constructor.name ]);
      };
  };
  var indentSyntaxAt = function (mb_step) {
      return Language_Shape_Stlc_Syntax_Modify.modifySyntaxAt(function (v) {
          if (v instanceof Language_Shape_Stlc_Syntax.SyntaxTerm) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Language_Shape_Stlc_Syntax.SyntaxTerm.create(indentTerm(mb_step)(v.value0)));
          };
          if (v instanceof Language_Shape_Stlc_Syntax.SyntaxArgItem) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Language_Shape_Stlc_Syntax.SyntaxArgItem.create(indentArgItem(mb_step)(v.value0)));
          };
          return new Data_Maybe.Just(v);
      });
  };
  exports["indentSyntaxAt"] = indentSyntaxAt;
  exports["stepUpToNearestIndentableParentIxUp"] = stepUpToNearestIndentableParentIxUp;
  exports["replaceNameAt"] = replaceNameAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Recursor.Action"] = $PS["Language.Shape.Stlc.Recursor.Action"] || {};
  var exports = $PS["Language.Shape.Stlc.Recursor.Action"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Data_Array = $PS["Data.Array"];
  var Data_Default = $PS["Data.Default"];
  var Data_Function = $PS["Data.Function"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Debug = $PS["Debug"];
  var Effect = $PS["Effect"];
  var Language_Shape_Stlc_ChAtIndex = $PS["Language.Shape.Stlc.ChAtIndex"];
  var Language_Shape_Stlc_Changes = $PS["Language.Shape.Stlc.Changes"];
  var Language_Shape_Stlc_Context = $PS["Language.Shape.Stlc.Context"];
  var Language_Shape_Stlc_Event_KeyboardEvent = $PS["Language.Shape.Stlc.Event.KeyboardEvent"];
  var Language_Shape_Stlc_Index = $PS["Language.Shape.Stlc.Index"];
  var Language_Shape_Stlc_Key = $PS["Language.Shape.Stlc.Key"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Recursor_Metacontext = $PS["Language.Shape.Stlc.Recursor.Metacontext"];
  var Language_Shape_Stlc_Rendering_Utilities = $PS["Language.Shape.Stlc.Rendering.Utilities"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Language_Shape_Stlc_Syntax_Metadata = $PS["Language.Shape.Stlc.Syntax.Metadata"];
  var Language_Shape_Stlc_Types = $PS["Language.Shape.Stlc.Types"];
  var React = $PS["React"];
  var Record = $PS["Record"];
  var Unsafe = $PS["Unsafe"];
  var recTermId = function (rec) {
      return function (args) {
          return rec.termId(Record.union()({
              actions: [  ]
          })(args));
      };
  };
  var recTermBindItem = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Metacontext.recTermBindItem()({
              termBindItem: function (args) {
                  return rec.termBindItem(Record.union()({
                      actions: [  ]
                  })(args));
              }
          });
      };
  };
  var recSumItem = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Metacontext.recSumItem()({
              sumItem: function (args) {
                  return rec.sumItem(Record.union()({
                      actions: [  ]
                  })(args));
              }
          });
      };
  };
  var recParamItem = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Metacontext.recParamItem()({
              paramItem: function (args) {
                  return rec.paramItem(Record.union()({
                      actions: [  ]
                  })(args));
              }
          });
      };
  };
  var recCaseItem = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return function (dictLacks3) {
                  return function (rec) {
                      return Language_Shape_Stlc_Recursor_Metacontext.recCaseItem()()()()({
                          caseItem: function (args) {
                              return rec.caseItem(Record.union()({
                                  actions: [  ]
                              })(args));
                          }
                      });
                  };
              };
          };
      };
  };
  var bindMaybeEffectUnit = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return function (v1) {
              return v1(v.value0);
          };
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
      };
      throw new Error("Failed pattern match at Language.Shape.Stlc.Recursor.Action (line 46, column 23 - line 48, column 31): " + [ v.constructor.name ]);
  };
  var recTermBind = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Metacontext.recTermBind()({
              termBind: function (args) {
                  return rec.termBind(Record.union()({
                      actions: [ {
                          label: new Data_Maybe.Just("edit"),
                          triggers: [ Language_Shape_Stlc_Types.ActionTrigger_Keytype.value ],
                          effect: function (v) {
                              if (v.mb_event instanceof Data_Maybe.Just) {
                                  return function __do() {
                                      Debug.traceM()(Effect.monadEffect)("[event] ActionTrigger_Keytype")();
                                      return bindMaybeEffectUnit(args.visit.ix)(function (ix) {
                                          return bindMaybeEffectUnit(Language_Shape_Stlc_Event_KeyboardEvent.handleKeytype_Name(v.mb_event.value0)((Data_Newtype.unwrap()(args.termBind.meta)).name))(function (name$prime) {
                                              return React.modifyState(v["this"])(function (st) {
                                                  return {
                                                      term: Unsafe.fromJust(Language_Shape_Stlc_Syntax.toTerm(Unsafe.fromJust(Language_Shape_Stlc_Syntax_Metadata.replaceNameAt()()(args.termBind)(Language_Shape_Stlc_Syntax.SyntaxTermBind.create)(Language_Shape_Stlc_Metadata.TermBindMetadata)(name$prime)(Language_Shape_Stlc_Index.toIxDown(ix))(new Language_Shape_Stlc_Syntax.SyntaxTerm(st.term))))),
                                                      type_: st.type_,
                                                      mb_ix: st.mb_ix,
                                                      history: st.history,
                                                      clipboard: st.clipboard,
                                                      dragboard: st.dragboard,
                                                      highlights: st.highlights
                                                  };
                                              });
                                          });
                                      })();
                                  };
                              };
                              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                          }
                      } ]
                  })(args));
              }
          });
      };
  };
  var recTypeBind = function (dictLacks) {
      return function (rec) {
          return Language_Shape_Stlc_Recursor_Metacontext.recTypeBind()({
              typeBind: function (args) {
                  return rec.typeBind(Record.union()({
                      actions: [ {
                          label: new Data_Maybe.Just("edit"),
                          triggers: [ Language_Shape_Stlc_Types.ActionTrigger_Keytype.value ],
                          effect: function (v) {
                              if (v.mb_event instanceof Data_Maybe.Just) {
                                  return function __do() {
                                      Debug.traceM()(Effect.monadEffect)("[event] ActionTrigger_Keytype")();
                                      return bindMaybeEffectUnit(args.visit.ix)(function (ix) {
                                          return bindMaybeEffectUnit(Language_Shape_Stlc_Event_KeyboardEvent.handleKeytype_Name(v.mb_event.value0)((Data_Newtype.unwrap()(args.typeBind.meta)).name))(function (name$prime) {
                                              return React.modifyState(v["this"])(function (st) {
                                                  return {
                                                      term: Unsafe.fromJust(Language_Shape_Stlc_Syntax.toTerm(Unsafe.fromJust(Language_Shape_Stlc_Syntax_Metadata.replaceNameAt()()(args.typeBind)(Language_Shape_Stlc_Syntax.SyntaxTypeBind.create)(Language_Shape_Stlc_Metadata.TypeBindMetadata)(name$prime)(Language_Shape_Stlc_Index.toIxDown(ix))(new Language_Shape_Stlc_Syntax.SyntaxTerm(st.term))))),
                                                      type_: st.type_,
                                                      mb_ix: st.mb_ix,
                                                      history: st.history,
                                                      clipboard: st.clipboard,
                                                      dragboard: st.dragboard,
                                                      highlights: st.highlights
                                                  };
                                              });
                                          });
                                      })();
                                  };
                              };
                              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                          }
                      } ]
                  })(args));
              }
          });
      };
  };
  var applyChange = function (change) {
      return function (st) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Debug.traceM()(Data_Maybe.monadMaybe)("===[ change ]==="))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Debug.traceM()(Data_Maybe.monadMaybe)(Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                  reflectSymbol: function () {
                      return "ix";
                  }
              })(Data_Show.showRecordFieldsCons({
                  reflectSymbol: function () {
                      return "toReplace";
                  }
              })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_ChAtIndex.showToReplace))(Language_Shape_Stlc_Index.showIxDown)))(change)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Debug.traceM()(Data_Maybe.monadMaybe)("===[ history ]==="))(function () {
                      var history = Data_Array.cons(Language_Shape_Stlc_Types.toHistoryItem(st)(change))(st.history);
                      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Debug.traceM()(Data_Maybe.monadMaybe)(Data_Show.show(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "change";
                          }
                      })(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "mb_ix";
                          }
                      })(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "term";
                          }
                      })(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "type_";
                          }
                      })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_Syntax.showType))(Language_Shape_Stlc_Syntax.showTerm))(Data_Maybe.showMaybe(Language_Shape_Stlc_Index.showIxDown)))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "ix";
                          }
                      })(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "toReplace";
                          }
                      })(Data_Show.showRecordFieldsNil)(Language_Shape_Stlc_ChAtIndex.showToReplace))(Language_Shape_Stlc_Index.showIxDown))))))(history)))(function () {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_ChAtIndex.chAtTerm({
                              term: st.term,
                              gamma: Data_Default["default"](Language_Shape_Stlc_Context.defaultContext),
                              alpha: st.type_
                          })(change.toReplace)(change.ix))(function (v) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                  term: v.value0,
                                  type_: Language_Shape_Stlc_Changes.applyTC(v.value1.value1.value0)(st.type_),
                                  mb_ix: new Data_Maybe.Just(v.value1.value0),
                                  history: history,
                                  clipboard: st.clipboard,
                                  dragboard: st.dragboard,
                                  highlights: st.highlights
                              });
                          });
                      });
                  });
              });
          });
      };
  };
  var doChange = function ($$this) {
      return function (change) {
          return React.modifyState($$this)(function (st) {
              return Data_Maybe.maybe(st)(Control_Category.identity(Control_Category.categoryFn))(applyChange(change)(st));
          });
      };
  };
  var actionIndent = function (mb_ix) {
      return {
          label: new Data_Maybe.Just("indent"),
          effect: function (v) {
              return bindMaybeEffectUnit(mb_ix)(function (ix) {
                  return function __do() {
                      Debug.traceM()(Effect.monadEffect)("indent")();
                      var v1 = Language_Shape_Stlc_Syntax_Metadata.stepUpToNearestIndentableParentIxUp(ix);
                      return React.modifyState(v["this"])(function (st) {
                          return {
                              term: Unsafe.fromJust(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Syntax.toTerm)(Language_Shape_Stlc_Syntax_Metadata.indentSyntaxAt(v1.value0)(Language_Shape_Stlc_Index.toIxDown(v1.value1))(new Language_Shape_Stlc_Syntax.SyntaxTerm(st.term)))),
                              type_: st.type_,
                              mb_ix: st.mb_ix,
                              history: st.history,
                              clipboard: st.clipboard,
                              dragboard: st.dragboard,
                              highlights: st.highlights
                          };
                      })();
                  };
              });
          },
          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.indent) ]
      };
  };
  var recArgItem = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return function (dictLacks3) {
                  return function (rec) {
                      return Language_Shape_Stlc_Recursor_Metacontext.recArgItem()()()()({
                          argItem: function (args) {
                              return rec.argItem(Record.union()({
                                  actions: [ actionIndent(args.visit.ix) ]
                              })(args));
                          }
                      });
                  };
              };
          };
      };
  };
  var recTerm = function (dictLacks) {
      return function (dictLacks1) {
          return function (rec) {
              var common = function (term) {
                  return function (args) {
                      return [ {
                          label: new Data_Maybe.Just("enlambda"),
                          effect: function (v) {
                              return bindMaybeEffectUnit(args.visit.ix)(function (ix) {
                                  return doChange(v["this"])({
                                      ix: Language_Shape_Stlc_Index.toIxDown(ix),
                                      toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Lam({
                                          termBind: {
                                              termId: Language_Shape_Stlc_Syntax.freshTermId(Data_Unit.unit),
                                              meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTermBindMetadata)
                                          },
                                          body: term,
                                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultLamMetadata)
                                      }), new Language_Shape_Stlc_Changes.InsertArg(Language_Shape_Stlc_Syntax.freshHoleType(Data_Unit.unit)))
                                  });
                              });
                          },
                          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.lambda) ]
                      }, {
                          label: new Data_Maybe.Just("dig"),
                          effect: function (v) {
                              return bindMaybeEffectUnit(args.visit.ix)(function (ix) {
                                  return doChange(v["this"])({
                                      ix: Language_Shape_Stlc_Index.toIxDown(ix),
                                      toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Hole({
                                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                                      }), Language_Shape_Stlc_Changes.NoChange.value)
                                  });
                              });
                          },
                          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.dig) ]
                      }, {
                          label: new Data_Maybe.Just("enlet"),
                          effect: function (v) {
                              return bindMaybeEffectUnit(args.visit.ix)(function (ix) {
                                  return doChange(v["this"])({
                                      ix: Language_Shape_Stlc_Index.toIxDown(ix),
                                      toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Let({
                                          termBind: Language_Shape_Stlc_Syntax.freshTermBind(Data_Unit.unit),
                                          sign: Language_Shape_Stlc_Syntax.freshHoleType(Data_Unit.unit),
                                          impl: Language_Shape_Stlc_Syntax.freshHole(Data_Unit.unit),
                                          body: term,
                                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultLetMetadata)
                                      }), Language_Shape_Stlc_Changes.NoChange.value)
                                  });
                              });
                          },
                          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.let_) ]
                      }, {
                          label: new Data_Maybe.Just("enbuffer"),
                          effect: function (v) {
                              return bindMaybeEffectUnit(args.visit.ix)(function (ix) {
                                  return doChange(v["this"])({
                                      ix: Language_Shape_Stlc_Index.toIxDown(ix),
                                      toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Buf({
                                          sign: Language_Shape_Stlc_Syntax.freshHoleType(Data_Unit.unit),
                                          impl: Language_Shape_Stlc_Syntax.freshHole(Data_Unit.unit),
                                          body: term,
                                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultBufMetadata)
                                      }), Language_Shape_Stlc_Changes.NoChange.value)
                                  });
                              });
                          },
                          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.buf) ]
                      }, {
                          label: new Data_Maybe.Just("endata"),
                          effect: function (v) {
                              return bindMaybeEffectUnit(args.visit.ix)(function (ix) {
                                  return doChange(v["this"])({
                                      ix: Language_Shape_Stlc_Index.toIxDown(ix),
                                      toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Data({
                                          typeBind: Language_Shape_Stlc_Syntax.freshTypeBind(Data_Unit.unit),
                                          sumItems: Data_Monoid.mempty(Data_List_Types.monoidList),
                                          body: term,
                                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultDataMetadata)
                                      }), Language_Shape_Stlc_Changes.NoChange.value)
                                  });
                              });
                          },
                          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.data_) ]
                      }, actionIndent(args.visit.ix) ];
                  };
              };
              return Language_Shape_Stlc_Recursor_Metacontext.recTerm()()({
                  lam: function (args) {
                      return rec.lam(Record.union()({
                          actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.Lam(args.lam))(args))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ {
                              label: new Data_Maybe.Just("unlambda"),
                              triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.unlambda) ],
                              effect: function (v) {
                                  return function __do() {
                                      var st = React.getState(v["this"])();
                                      var state = Language_Shape_Stlc_Changes.chTerm(args.gamma)(args.alpha)(Language_Shape_Stlc_Changes.deleteVar(Language_Shape_Stlc_Changes.emptyChanges)(args.lam.termBind.termId))(Language_Shape_Stlc_Changes.NoChange.value)(args.lam.body);
                                      var v1 = Control_Monad_State.runState(state)(Data_Map_Internal.empty);
                                      return doChange(v["this"])({
                                          ix: Unsafe.fromJust(st.mb_ix),
                                          toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(v1.value0, Language_Shape_Stlc_Changes.RemoveArg.value)
                                      })();
                                  };
                              }
                          } ])(Language_Shape_Stlc_Rendering_Utilities.maybeArray((function () {
                              if (args.lam.body instanceof Language_Shape_Stlc_Syntax.Lam) {
                                  return new Data_Maybe.Just(args.lam.body.value0);
                              };
                              return Data_Maybe.Nothing.value;
                          })())(function (lam$prime) {
                              return {
                                  label: new Data_Maybe.Just("swaplambdas"),
                                  triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.swap) ],
                                  effect: function (v) {
                                      return function __do() {
                                          var st = React.getState(v["this"])();
                                          return doChange(v["this"])({
                                              ix: Unsafe.fromJust(st.mb_ix),
                                              toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Lam({
                                                  termBind: lam$prime.termBind,
                                                  body: new Language_Shape_Stlc_Syntax.Lam({
                                                      termBind: args.lam.termBind,
                                                      body: lam$prime.body,
                                                      meta: lam$prime.meta
                                                  }),
                                                  meta: args.lam.meta
                                              }), Language_Shape_Stlc_Changes.Swap.value)
                                          })();
                                      };
                                  }
                              };
                          })))
                      })(args));
                  },
                  neu: function (args) {
                      return rec.neu(Record.union()({
                          actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.Neu(args.neu))(args))([  ])
                      })(args));
                  },
                  let_: function (args) {
                      return rec.let_(Record.union()({
                          actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.Let(args.let_))(args))([ {
                              label: new Data_Maybe.Just("unlet"),
                              triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.unlet) ],
                              effect: function (v) {
                                  return function __do() {
                                      var st = React.getState(v["this"])();
                                      var state = Language_Shape_Stlc_Changes.chTerm(args.gamma)(args.alpha)(Language_Shape_Stlc_Changes.deleteVar(Language_Shape_Stlc_Changes.emptyChanges)(args.let_.termBind.termId))(Language_Shape_Stlc_Changes.NoChange.value)(args.let_.body);
                                      var v1 = Control_Monad_State.runState(state)(Data_Map_Internal.empty);
                                      return doChange(v["this"])({
                                          ix: Unsafe.fromJust(st.mb_ix),
                                          toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(v1.value0, Language_Shape_Stlc_Changes.NoChange.value)
                                      })();
                                  };
                              }
                          } ])
                      })(args));
                  },
                  buf: function (args) {
                      return rec.buf(Record.union()({
                          actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.Buf(args.buf))(args))([ {
                              label: new Data_Maybe.Just("unbuffer"),
                              triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.unbuf) ],
                              effect: function (v) {
                                  return function __do() {
                                      var st = React.getState(v["this"])();
                                      return doChange(v["this"])({
                                          ix: Unsafe.fromJust(st.mb_ix),
                                          toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(args.buf.body, Language_Shape_Stlc_Changes.NoChange.value)
                                      })();
                                  };
                              }
                          } ])
                      })(args));
                  },
                  data_: function (args) {
                      return rec.data_(Record.union()({
                          actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.Data(args.data_))(args))([  ])
                      })(args));
                  },
                  match: function (args) {
                      return rec.match(Record.union()({
                          actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.Match(args.match))(args))([  ])
                      })(args));
                  },
                  hole: function (args) {
                      return rec.hole(Record.union()({
                          actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.Hole(args.hole))(args))([ {
                              label: new Data_Maybe.Just("inlambda"),
                              triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.inlambda) ],
                              effect: function (v) {
                                  return function __do() {
                                      var st = React.getState(v["this"])();
                                      if (args.alpha instanceof Language_Shape_Stlc_Syntax.ArrowType) {
                                          return doChange(v["this"])({
                                              ix: Unsafe.fromJust(st.mb_ix),
                                              toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Lam({
                                                  termBind: Language_Shape_Stlc_Syntax.freshTermBind(Data_Unit.unit),
                                                  body: Language_Shape_Stlc_Syntax.freshHole(Data_Unit.unit),
                                                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultLamMetadata)
                                              }), Language_Shape_Stlc_Changes.NoChange.value)
                                          })();
                                      };
                                      return Data_Unit.unit;
                                  };
                              }
                          } ])
                      })(args));
                  }
              });
          };
      };
  };
  var recType = function (dictLacks) {
      return function (rec) {
          var common = function (type_) {
              return function (args) {
                  return [ {
                      label: new Data_Maybe.Just("enarrow"),
                      effect: function (v) {
                          return function __do() {
                              var st = React.getState(v["this"])();
                              var holeType = Language_Shape_Stlc_Syntax.freshHoleType(Data_Unit.unit);
                              return doChange(v["this"])({
                                  ix: Unsafe.fromJust(st.mb_ix),
                                  toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceType(new Language_Shape_Stlc_Syntax.ArrowType({
                                      dom: holeType,
                                      cod: type_,
                                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultArrowTypeMetadata)
                                  }), new Language_Shape_Stlc_Changes.InsertArg(holeType))
                              })();
                          };
                      },
                      triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.lambda) ]
                  }, {
                      label: new Data_Maybe.Just("dig"),
                      effect: function (v) {
                          return function __do() {
                              var st = React.getState(v["this"])();
                              var holeId = Language_Shape_Stlc_Syntax.freshHoleId(Data_Unit.unit);
                              return doChange(v["this"])({
                                  ix: Unsafe.fromJust(st.mb_ix),
                                  toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceType(new Language_Shape_Stlc_Syntax.HoleType({
                                      holeId: holeId,
                                      weakening: Data_Set.empty,
                                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleTypeMetadata)
                                  }), new Language_Shape_Stlc_Changes.Dig(holeId))
                              })();
                          };
                      },
                      triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.dig) ]
                  }, actionIndent(args.visit.ix) ];
              };
          };
          return Language_Shape_Stlc_Recursor_Metacontext.recType()({
              arrowType: function (args) {
                  return rec.arrowType(Record.union()({
                      actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.ArrowType(args.arrowType))(args))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ {
                          label: new Data_Maybe.Just("unarrow"),
                          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.unlambda) ],
                          effect: function (v) {
                              return function __do() {
                                  var st = React.getState(v["this"])();
                                  return doChange(v["this"])({
                                      ix: Unsafe.fromJust(st.mb_ix),
                                      toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceType(args.arrowType.cod, Language_Shape_Stlc_Changes.RemoveArg.value)
                                  })();
                              };
                          }
                      } ])(Language_Shape_Stlc_Rendering_Utilities.maybeArray((function () {
                          if (args.arrowType.cod instanceof Language_Shape_Stlc_Syntax.ArrowType) {
                              return new Data_Maybe.Just(args.arrowType.cod.value0);
                          };
                          return Data_Maybe.Nothing.value;
                      })())(function (arrowType$prime) {
                          return {
                              label: new Data_Maybe.Just("swaparrow"),
                              triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.swap) ],
                              effect: function (v) {
                                  return function __do() {
                                      var st = React.getState(v["this"])();
                                      return doChange(v["this"])({
                                          ix: Unsafe.fromJust(st.mb_ix),
                                          toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceType(new Language_Shape_Stlc_Syntax.ArrowType({
                                              dom: arrowType$prime.dom,
                                              cod: new Language_Shape_Stlc_Syntax.ArrowType({
                                                  dom: args.arrowType.dom,
                                                  cod: arrowType$prime.cod,
                                                  meta: arrowType$prime.meta
                                              }),
                                              meta: args.arrowType.meta
                                          }), Language_Shape_Stlc_Changes.Swap.value)
                                      })();
                                  };
                              }
                          };
                      })))
                  })(args));
              },
              dataType: function (args) {
                  return rec.dataType(Record.union()({
                      actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.DataType(args.dataType))(args))([  ])
                  })(args));
              },
              holeType: function (args) {
                  return rec.holeType(Record.union()({
                      actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(common(new Language_Shape_Stlc_Syntax.HoleType(args.holeType))(args))([  ])
                  })(args));
              }
          });
      };
  };
  exports["applyChange"] = applyChange;
  exports["doChange"] = doChange;
  exports["recType"] = recType;
  exports["recTerm"] = recTerm;
  exports["recArgItem"] = recArgItem;
  exports["recSumItem"] = recSumItem;
  exports["recCaseItem"] = recCaseItem;
  exports["recParamItem"] = recParamItem;
  exports["recTermBindItem"] = recTermBindItem;
  exports["recTypeBind"] = recTypeBind;
  exports["recTermBind"] = recTermBind;
  exports["recTermId"] = recTermId;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.OrderedSet"] = $PS["Data.OrderedSet"] || {};
  var exports = $PS["Data.OrderedSet"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var foldableOrderedSet = Data_List_Types.foldableList;
  var insert = function (dictEq) {
      return function (a) {
          return function (s) {
              var $10 = Data_Foldable.elem(foldableOrderedSet)(dictEq)(a)(s);
              if ($10) {
                  return s;
              };
              return Data_Newtype.over()()(Data_Newtype.wrap())(Data_List_Types.Cons.create(a))(s);
          };
      };
  };
  var semigroupOrderedSet = function (dictEq) {
      return {
          append: function (xs) {
              return function (v) {
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(function (l) {
                      return function (y) {
                          return insert(dictEq)(y)(l);
                      };
                  })(xs)(v);
              };
          }
      };
  };
  var monoidOrderedSet = function (dictEq) {
      return {
          mempty: Data_Newtype.wrap()(Data_Monoid.mempty(Data_List_Types.monoidList)),
          Semigroup0: function () {
              return semigroupOrderedSet(dictEq);
          }
      };
  };
  var findIndexRev = function (dictEq) {
      return function (cond) {
          return function (s) {
              return Data_List.findIndex(cond)(Data_List.reverse(Data_Newtype.unwrap()(s)));
          };
      };
  };
  var findIndex = function (dictEq) {
      return function (cond) {
          return function (s) {
              return Data_List.findIndex(cond)(Data_Newtype.unwrap()(s));
          };
      };
  };
  exports["insert"] = insert;
  exports["findIndexRev"] = findIndexRev;
  exports["monoidOrderedSet"] = monoidOrderedSet;
})(PS);
(function(exports) {
  'use strict';

  exports.stopPropagation = function stopPropagation(event) {
    return function() {
      return event.stopPropagation();
    };
  };
})(PS["React.SyntheticEvent"] = PS["React.SyntheticEvent"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["React.SyntheticEvent"] = $PS["React.SyntheticEvent"] || {};
  var exports = $PS["React.SyntheticEvent"];
  var $foreign = $PS["React.SyntheticEvent"];
  exports["stopPropagation"] = $foreign.stopPropagation;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Rendering.ClickDragDrop"] = $PS["Language.Shape.Stlc.Rendering.ClickDragDrop"] || {};
  var exports = $PS["Language.Shape.Stlc.Rendering.ClickDragDrop"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Default = $PS["Data.Default"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Debug = $PS["Debug"];
  var Effect = $PS["Effect"];
  var Language_Shape_Stlc_ChAtIndex = $PS["Language.Shape.Stlc.ChAtIndex"];
  var Language_Shape_Stlc_Changes = $PS["Language.Shape.Stlc.Changes"];
  var Language_Shape_Stlc_CopyPasteBackend = $PS["Language.Shape.Stlc.CopyPasteBackend"];
  var Language_Shape_Stlc_Hole = $PS["Language.Shape.Stlc.Hole"];
  var Language_Shape_Stlc_Index = $PS["Language.Shape.Stlc.Index"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Recursor_Action = $PS["Language.Shape.Stlc.Recursor.Action"];
  var Language_Shape_Stlc_Rendering_Utilities = $PS["Language.Shape.Stlc.Rendering.Utilities"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var React = $PS["React"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var React_SyntheticEvent = $PS["React.SyntheticEvent"];
  var Unsafe = $PS["Unsafe"];                
  var propsClickDragDrop = function ($$this) {
      return function (props) {
          return Data_Array.concat([ Language_Shape_Stlc_Rendering_Utilities.maybeArray(props.visit.ix)(function (ix) {
              return React_DOM_Props.onClick(function (event) {
                  return function __do() {
                      Debug.traceM()(Effect.monadEffect)("clicked on a node: " + Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(props.label))();
                      React_SyntheticEvent.stopPropagation(event)();
                      return React.modifyState($$this)(function (v) {
                          return {
                              term: v.term,
                              type_: v.type_,
                              mb_ix: new Data_Maybe.Just(Language_Shape_Stlc_Index.toIxDown(ix)),
                              history: v.history,
                              clipboard: v.clipboard,
                              dragboard: v.dragboard,
                              highlights: v.highlights
                          };
                      })();
                  };
              });
          }), (function () {
              if (props.syntax instanceof Data_Maybe.Just && props.syntax.value0 instanceof Language_Shape_Stlc_Syntax.SyntaxTerm) {
                  return Data_Array.concat(Language_Shape_Stlc_Rendering_Utilities.maybeArray(props.visit.ix)(function (ix) {
                      return [ React_DOM_Props.onMouseDown(function (event) {
                          return function __do() {
                              React_SyntheticEvent.stopPropagation(event)();
                              return React.modifyState($$this)(function (v) {
                                  return {
                                      term: v.term,
                                      type_: v.type_,
                                      mb_ix: v.mb_ix,
                                      history: v.history,
                                      clipboard: v.clipboard,
                                      dragboard: new Data_Maybe.Just(new Data_Tuple.Tuple(Language_Shape_Stlc_Index.toIxDown(ix), new Data_Tuple.Tuple(props.gamma, new Data_Tuple.Tuple(Unsafe.fromJust(props.alpha), props.syntax.value0.value0)))),
                                      highlights: v.highlights
                                  };
                              })();
                          };
                      }), React_DOM_Props.onMouseUp(function (event) {
                          return function __do() {
                              var st = React.getState($$this)();
                              if (st.dragboard instanceof Data_Maybe.Just) {
                                  React_SyntheticEvent.stopPropagation(event)();
                                  var ixDown = Language_Shape_Stlc_Index.toIxDown(ix);
                                  return Control_Applicative.unless(Effect.applicativeEffect)(Language_Shape_Stlc_Index.isSuperIxDown(ixDown)(st.dragboard.value0.value0))((function () {
                                      if (props.syntax.value0.value0 instanceof Language_Shape_Stlc_Syntax.Hole) {
                                          var v = Language_Shape_Stlc_CopyPasteBackend.fitsInHole(st.dragboard.value0.value1.value1.value0)(Unsafe.fromJust(props.alpha));
                                          if (v instanceof Data_Maybe.Just) {
                                              if (v.value0.value0 === 0) {
                                                  return React.modifyState($$this)(function (st1) {
                                                      return Data_Maybe.maybe(st1)(Control_Category.identity(Control_Category.categoryFn))(Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                                          dragboard: Data_Maybe.Nothing.value,
                                                          clipboard: st1.clipboard,
                                                          highlights: st1.highlights,
                                                          history: st1.history,
                                                          mb_ix: st1.mb_ix,
                                                          term: st1.term,
                                                          type_: st1.type_
                                                      }))(function (st2) {
                                                          return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Recursor_Action.applyChange({
                                                              ix: st.dragboard.value0.value0,
                                                              toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Hole({
                                                                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                                                              }), Language_Shape_Stlc_Changes.NoChange.value)
                                                          })(st2))(function (st3) {
                                                              return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Recursor_Action.applyChange({
                                                                  ix: ixDown,
                                                                  toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(st.dragboard.value0.value1.value1.value1, Language_Shape_Stlc_Changes.NoChange.value)
                                                              })(st3))(function (st4) {
                                                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                                                      term: Language_Shape_Stlc_Hole.subTerm(v.value0.value1)(st4.term),
                                                                      type_: Language_Shape_Stlc_Hole.subType(v.value0.value1)(st4.type_),
                                                                      clipboard: st4.clipboard,
                                                                      dragboard: st4.dragboard,
                                                                      highlights: st4.highlights,
                                                                      history: st4.history,
                                                                      mb_ix: st4.mb_ix
                                                                  }))(function (st5) {
                                                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(st5);
                                                                  });
                                                              });
                                                          });
                                                      }));
                                                  });
                                              };
                                              if (Data_Boolean.otherwise) {
                                                  return Partial_Unsafe.unsafeCrashWith("[unimplemented] use createNeu to add arguments to pasted term if needed");
                                              };
                                          };
                                          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                      };
                                      return React.modifyState($$this)(function (st1) {
                                          return Data_Maybe.maybe(st1)(Control_Category.identity(Control_Category.categoryFn))(Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                              dragboard: Data_Maybe.Nothing.value,
                                              clipboard: st1.clipboard,
                                              highlights: st1.highlights,
                                              history: st1.history,
                                              mb_ix: st1.mb_ix,
                                              term: st1.term,
                                              type_: st1.type_
                                          }))(function (st2) {
                                              return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Recursor_Action.applyChange({
                                                  ix: st.dragboard.value0.value0,
                                                  toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Hole({
                                                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                                                  }), Language_Shape_Stlc_Changes.NoChange.value)
                                              })(st2))(function (st3) {
                                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Recursor_Action.applyChange({
                                                      ix: ixDown,
                                                      toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Buf({
                                                          sign: st.dragboard.value0.value1.value1.value0,
                                                          impl: st.dragboard.value0.value1.value1.value1,
                                                          body: props.syntax.value0.value0,
                                                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultBufMetadata)
                                                      }), Language_Shape_Stlc_Changes.NoChange.value)
                                                  })(st3))(function (st4) {
                                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(st4);
                                                  });
                                              });
                                          }));
                                      });
                                  })())();
                              };
                              if (st.dragboard instanceof Data_Maybe.Nothing) {
                                  return Data_Unit.unit;
                              };
                              throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.ClickDragDrop (line 83, column 21 - line 163, column 34): " + [ st.dragboard.constructor.name ]);
                          };
                      }) ];
                  }));
              };
              return [  ];
          })() ]);
      };
  };
  exports["propsClickDragDrop"] = propsClickDragDrop;
})(PS);
(function(exports) {
  "use strict"

  exports.getElementById = id => () => document.getElementById(id)

  exports.setHighlight = b => e => () => {
      if (b)
        e.classList.add("highlighted")
      else 
        e.classList.remove("highlighted")
    }
})(PS["Language.Shape.Stlc.Rendering.Highlight"] = PS["Language.Shape.Stlc.Rendering.Highlight"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Rendering.Highlight"] = $PS["Language.Shape.Stlc.Rendering.Highlight"] || {};
  var exports = $PS["Language.Shape.Stlc.Rendering.Highlight"];
  var $foreign = $PS["Language.Shape.Stlc.Rendering.Highlight"];
  var Data_Array = $PS["Data.Array"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var React = $PS["React"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var React_SyntheticEvent = $PS["React.SyntheticEvent"];                
  var propsHighlight = function ($$this) {
      return function (props) {
          return function (elemId) {
              return [ React_DOM_Props.onMouseOver(function (event) {
                  return function __do() {
                      React_SyntheticEvent.stopPropagation(event)();
                      var elem = $foreign.getElementById(elemId)();
                      var st = React.getState($$this)();
                      (function () {
                          var v = Data_Array.uncons(st.highlights);
                          if (v instanceof Data_Maybe.Nothing) {
                              return Data_Unit.unit;
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return $foreign.setHighlight(false)(v.value0.head)();
                          };
                          throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Highlight (line 69, column 7 - line 71, column 59): " + [ v.constructor.name ]);
                      })();
                      $foreign.setHighlight(true)(elem)();
                      return React.modifyState($$this)(function (st1) {
                          return {
                              term: st1.term,
                              type_: st1.type_,
                              mb_ix: st1.mb_ix,
                              history: st1.history,
                              clipboard: st1.clipboard,
                              dragboard: st1.dragboard,
                              highlights: Data_Array.cons(elem)(st1.highlights)
                          };
                      })();
                  };
              }), React_DOM_Props.onMouseOut(function (event) {
                  return function __do() {
                      React_SyntheticEvent.stopPropagation(event)();
                      var elem = $foreign.getElementById(elemId)();
                      var st = React.getState($$this)();
                      $foreign.setHighlight(false)(elem)();
                      var highlights = (function () {
                          var v = Data_Array.uncons(st.highlights);
                          if (v instanceof Data_Maybe.Nothing) {
                              return Partial_Unsafe.unsafeCrashWith("expected there to be a parent on highlights stack")();
                          };
                          if (v instanceof Data_Maybe.Just) {
                              var v1 = Data_Array.uncons(v.value0.tail);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return [  ];
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  $foreign.setHighlight(true)(v1.value0.head)();
                                  return v1.value0.tail;
                              };
                              throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Highlight (line 86, column 39 - line 91, column 30): " + [ v1.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Highlight (line 84, column 21 - line 91, column 30): " + [ v.constructor.name ]);
                      })();
                      return React.modifyState($$this)(function (st1) {
                          return {
                              term: st1.term,
                              type_: st1.type_,
                              mb_ix: st1.mb_ix,
                              history: st1.history,
                              clipboard: st1.clipboard,
                              dragboard: st1.dragboard,
                              highlights: highlights
                          };
                      })();
                  };
              }) ];
          };
      };
  };
  exports["propsHighlight"] = propsHighlight;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Rendering.Types"] = $PS["Language.Shape.Stlc.Rendering.Types"] || {};
  var exports = $PS["Language.Shape.Stlc.Rendering.Types"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Data_Default = $PS["Data.Default"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_OrderedSet = $PS["Data.OrderedSet"];
  var Language_Shape_Stlc_Context = $PS["Language.Shape.Stlc.Context"];
  var Language_Shape_Stlc_Metacontext = $PS["Language.Shape.Stlc.Metacontext"];
  var Language_Shape_Stlc_Recursor_Index = $PS["Language.Shape.Stlc.Recursor.Index"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var emptyRenderEnvironment = {
      syntax: Data_Maybe.Nothing.value,
      gamma: Data_Default["default"](Language_Shape_Stlc_Context.defaultContext),
      meta: Data_Default["default"](Language_Shape_Stlc_Metacontext.defaultMetacontext),
      alpha: Data_Default["default"](Data_Default.defaultMaybe),
      actions: [  ],
      holeIds: Data_Monoid.mempty(Data_OrderedSet.monoidOrderedSet(Language_Shape_Stlc_Syntax.eqHoleId))
  };
  var runM = Data_Function.flip(Control_Monad_State.runState)(emptyRenderEnvironment);
  var defaultNodeProps = {
      syntax: Data_Default["default"](Data_Default.defaultMaybe),
      label: Data_Default["default"](Data_Default.defaultMaybe),
      visit: Language_Shape_Stlc_Recursor_Index.nonVisit,
      alpha: Data_Default["default"](Data_Default.defaultMaybe),
      gamma: Data_Default["default"](Language_Shape_Stlc_Context.defaultContext),
      meta: Data_Default["default"](Language_Shape_Stlc_Metacontext.defaultMetacontext),
      actions: [  ]
  };
  var makeNodeProps = function (v) {
      return {
          syntax: defaultNodeProps.syntax,
          label: defaultNodeProps.label,
          gamma: v.gamma,
          alpha: defaultNodeProps.alpha,
          visit: v.visit,
          meta: v.meta,
          actions: v.actions
      };
  };
  var _holeIds = Type_Proxy["Proxy"].value;
  exports["runM"] = runM;
  exports["_holeIds"] = _holeIds;
  exports["emptyRenderEnvironment"] = emptyRenderEnvironment;
  exports["makeNodeProps"] = makeNodeProps;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Rendering.Syntax"] = $PS["Language.Shape.Stlc.Rendering.Syntax"] || {};
  var exports = $PS["Language.Shape.Stlc.Rendering.Syntax"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Default = $PS["Data.Default"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_OrderedSet = $PS["Data.OrderedSet"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Language_Shape_Stlc_Context = $PS["Language.Shape.Stlc.Context"];
  var Language_Shape_Stlc_Index = $PS["Language.Shape.Stlc.Index"];
  var Language_Shape_Stlc_Metacontext = $PS["Language.Shape.Stlc.Metacontext"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Recursor_Action = $PS["Language.Shape.Stlc.Recursor.Action"];
  var Language_Shape_Stlc_Recursor_Index = $PS["Language.Shape.Stlc.Recursor.Index"];
  var Language_Shape_Stlc_Rendering_ClickDragDrop = $PS["Language.Shape.Stlc.Rendering.ClickDragDrop"];
  var Language_Shape_Stlc_Rendering_Highlight = $PS["Language.Shape.Stlc.Rendering.Highlight"];
  var Language_Shape_Stlc_Rendering_Token = $PS["Language.Shape.Stlc.Rendering.Token"];
  var Language_Shape_Stlc_Rendering_Types = $PS["Language.Shape.Stlc.Rendering.Types"];
  var Language_Shape_Stlc_Rendering_Utilities = $PS["Language.Shape.Stlc.Rendering.Utilities"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var React_SyntheticEvent = $PS["React.SyntheticEvent"];
  var Record = $PS["Record"];                
  var renderNode = function ($$this) {
      return function (props) {
          return function (elemsM) {
              var mb_elemId = Data_Functor.map(Data_Maybe.functorMaybe)(Language_Shape_Stlc_Index.hashIxUp)(props.visit.ix);
              var isSelected = Data_Eq.eq(Data_Maybe.eqMaybe(Language_Shape_Stlc_Index.eqIxDown))(props.visit.csr)(new Data_Maybe.Just(Language_Shape_Stlc_Index.nilIxDown));
              var propsSpan = Data_Array.concat([ Language_Shape_Stlc_Rendering_Utilities.maybeArray(props.label)(function (label) {
                  return React_DOM_Props.className(Data_String_Common.joinWith(" ")([ "node", label, (function () {
                      if (isSelected) {
                          return "selected";
                      };
                      return "";
                  })() ]));
              }), Language_Shape_Stlc_Rendering_Utilities.maybeArray(mb_elemId)(function (elemId) {
                  return React_DOM_Props["_id"](elemId);
              }), Language_Shape_Stlc_Rendering_ClickDragDrop.propsClickDragDrop($$this)(props), Data_Array.concat(Language_Shape_Stlc_Rendering_Utilities.maybeArray(mb_elemId)(function (elemId) {
                  return Language_Shape_Stlc_Rendering_Highlight.propsHighlight($$this)(props)(elemId);
              })) ]);
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Applicative.when(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(isSelected)(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
                  var $35 = {};
                  for (var $36 in v) {
                      if ({}.hasOwnProperty.call(v, $36)) {
                          $35[$36] = v[$36];
                      };
                  };
                  $35.syntax = props.syntax;
                  $35.alpha = props.alpha;
                  $35.gamma = props.gamma;
                  $35.actions = props.actions;
                  $35.meta = props.meta;
                  return $35;
              })))(function () {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(elemsM)))(function (elems) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ React_DOM.span(propsSpan)(elems) ]);
                  });
              });
          };
      };
  };
  var renderItems = function (items) {
      return Data_Foldable.foldM(Data_List_Types.foldableList)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(function (elems) {
          return function (v) {
              return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(function (v1) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(elems)(v1);
              })(v);
          };
      })([  ])(items);
  };
  var printShadow = function (shadow) {
      var $38 = 0 < shadow;
      if ($38) {
          return [ React_DOM.span([ React_DOM_Props.className("shadow") ])([ React_DOM.text(Data_Show.show(Data_Show.showInt)(shadow)) ]) ];
      };
      return [  ];
  };
  var printName = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return [ React_DOM.span([ React_DOM_Props.className("name") ])([ React_DOM.text(v.value0) ]) ];
      };
      if (v instanceof Data_Maybe.Nothing) {
          return [ React_DOM.span([ React_DOM_Props.className("name discarded") ])([ React_DOM.text("~") ]) ];
      };
      throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Syntax (line 407, column 27 - line 409, column 80): " + [ v.constructor.name ]);
  };
  var printTermId = function (v) {
      var name = (function () {
          var v1 = Data_Map_Internal.lookup(Language_Shape_Stlc_Syntax.ordTermId)(v.termId)((Data_Newtype.unwrap()(v.meta)).varNames);
          if (v1 instanceof Data_Maybe.Just) {
              return v1.value0;
          };
          if (v1 instanceof Data_Maybe.Nothing) {
              return Partial_Unsafe.unsafeCrashWith("could not find name of term id " + (Data_Show.show(Language_Shape_Stlc_Syntax.showTermId)(v.termId) + (" in metacontext " + Data_Show.show(Language_Shape_Stlc_Metacontext.showMetacontext)(v.meta))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Syntax (line 391, column 10 - line 393, column 117): " + [ v1.constructor.name ]);
      })();
      var shadow = (function () {
          var v1 = Data_Map_Internal.lookup(Language_Shape_Stlc_Syntax.ordTermId)(v.termId)((Data_Newtype.unwrap()(v.meta)).varShadowIndices);
          if (v1 instanceof Data_Maybe.Just) {
              return v1.value0;
          };
          if (v1 instanceof Data_Maybe.Nothing) {
              return Partial_Unsafe.unsafeCrashWith("could not find shadow of var name " + (Data_Show.show(Language_Shape_Stlc_Metadata.showName)(name) + (" in metacontext " + Data_Show.show(Language_Shape_Stlc_Metacontext.showMetacontext)(v.meta))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Syntax (line 395, column 12 - line 397, column 118): " + [ v1.constructor.name ]);
      })();
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ React_DOM.span([ React_DOM_Props.className("termId") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(printName(name))(printShadow(shadow))) ]);
  };
  var renderTermBind = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recTermBind()({
          termBind: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: v.syntax,
                      label: new Data_Maybe.Just("TermBind"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ printTermId(args.termId) ]);
          }
      });
  };
  var renderTermBindItem = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recTermBindItem()({
          termBindItem: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: v.syntax,
                      label: new Data_Maybe.Just("TermBindItem"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.meta)((Data_Newtype.unwrap()(args.termBindItem.meta)).indented)), renderTermBind($$this)(args.termBind) ]);
          }
      });
  };
  var renderTermId = function ($$this) {
      return function (argsTermId) {
          return Language_Shape_Stlc_Recursor_Action.recTermId({
              termId: function (args) {
                  return renderNode($$this)((function () {
                      var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                      return {
                          syntax: v.syntax,
                          label: new Data_Maybe.Just("TermId"),
                          gamma: v.gamma,
                          alpha: v.alpha,
                          visit: v.visit,
                          meta: v.meta,
                          actions: v.actions
                      };
                  })())([ printTermId(argsTermId) ]);
              }
          })(argsTermId);
      };
  };
  var printTypeId = function (v) {
      var name = (function () {
          var v1 = Data_Map_Internal.lookup(Language_Shape_Stlc_Syntax.ordTypeId)(v.typeId)((Data_Newtype.unwrap()(v.meta)).dataNames);
          if (v1 instanceof Data_Maybe.Just) {
              return v1.value0;
          };
          if (v1 instanceof Data_Maybe.Nothing) {
              return Partial_Unsafe.unsafeCrashWith("could not find name of type id " + (Data_Show.show(Language_Shape_Stlc_Syntax.showTypeId)(v.typeId) + (" in metacontext " + Data_Show.show(Language_Shape_Stlc_Metacontext.showMetacontext)(v.meta))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Syntax (line 375, column 10 - line 377, column 117): " + [ v1.constructor.name ]);
      })();
      var shadow = (function () {
          var v1 = Data_Map_Internal.lookup(Language_Shape_Stlc_Syntax.ordTypeId)(v.typeId)((Data_Newtype.unwrap()(v.meta)).dataShadowIndices);
          if (v1 instanceof Data_Maybe.Just) {
              return v1.value0;
          };
          if (v1 instanceof Data_Maybe.Nothing) {
              return Partial_Unsafe.unsafeCrashWith("could not find shadow of data name " + (Data_Show.show(Language_Shape_Stlc_Metadata.showName)(name) + (" in metacontext " + Data_Show.show(Language_Shape_Stlc_Metacontext.showMetacontext)(v.meta))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Syntax (line 379, column 12 - line 381, column 119): " + [ v1.constructor.name ]);
      })();
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ React_DOM.span([ React_DOM_Props.className("typeId") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(printName(name))(printShadow(shadow))) ]);
  };
  var renderTypeBind = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recTypeBind()({
          typeBind: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: v.syntax,
                      label: new Data_Maybe.Just("TypeBind"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ printTypeId(args.typeId) ]);
          }
      });
  };
  var printHoleId = function (args) {
      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_OrderedSet.findIndexRev(Language_Shape_Stlc_Syntax.eqHoleId)(function (v) {
          return Data_Eq.eq(Language_Shape_Stlc_Syntax.eqHoleId)(args.holeId)(v);
      }))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (v) {
          return v.holeIds;
      })))(function (mb_i) {
          if (mb_i instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ React_DOM.span([ React_DOM_Props.className("holeId") ])([ React_DOM.text("?" + Data_Show.show(Data_Show.showInt)(mb_i.value0)) ]) ]);
          };
          if (mb_i instanceof Data_Maybe.Nothing) {
              return Partial_Unsafe.unsafeCrashWith("count not find index of holeId " + (Data_Show.show(Language_Shape_Stlc_Syntax.showHoleId)(args.holeId) + (" in metacontext " + Data_Show.show(Language_Shape_Stlc_Metacontext.showMetacontext)(args.meta))));
          };
          throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Syntax (line 402, column 3 - line 404, column 127): " + [ mb_i.constructor.name ]);
      });
  };
  var renderType = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recType()({
          arrowType: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxType.create(new Language_Shape_Stlc_Syntax.ArrowType(args.arrowType))),
                      label: new Data_Maybe.Just("ArrowType"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Language_Shape_Stlc_Rendering_Utilities.enParenIf(renderType($$this)(args.dom))(Language_Shape_Stlc_Rendering_Utilities.requiresParenType(args.dom.type_)), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.arrowType1 ]), renderType($$this)(args.cod) ]);
          },
          dataType: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxType.create(new Language_Shape_Stlc_Syntax.DataType(args.dataType))),
                      label: new Data_Maybe.Just("DataType"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ printTypeId(args.typeId) ]);
          },
          holeType: function (args) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Record.modify({
                  reflectSymbol: function () {
                      return "holeIds";
                  }
              })()()(Language_Shape_Stlc_Rendering_Types["_holeIds"])(Data_OrderedSet.insert(Language_Shape_Stlc_Syntax.eqHoleId)(args.holeType.holeId))))(function () {
                  return renderNode($$this)((function () {
                      var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                      return {
                          syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxType.create(new Language_Shape_Stlc_Syntax.HoleType(args.holeType))),
                          label: new Data_Maybe.Just("HoleType"),
                          gamma: v.gamma,
                          alpha: v.alpha,
                          visit: v.visit,
                          meta: v.meta,
                          actions: v.actions
                      };
                  })())([ printHoleId({
                      holeId: args.holeType.holeId,
                      meta: args.holeId.meta
                  }) ]);
              });
          }
      });
  };
  var renderParamItem = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recParamItem()({
          paramItem: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: v.syntax,
                      label: new Data_Maybe.Just("ParamItem"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.meta)((Data_Newtype.unwrap()(args.paramItem.meta)).indented)), renderType($$this)(args.type_) ]);
          }
      });
  };
  var renderSumItem = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recSumItem()({
          sumItem: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: v.syntax,
                      label: new Data_Maybe.Just("SumItem"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.meta)((Data_Newtype.unwrap()(args.sumItem.meta)).indented)), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.sumItem1 ]), renderTermBind($$this)(args.termBind), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.sumItem2 ]), renderItems(Data_Functor.map(Data_List_Types.functorList)(renderParamItem($$this))(args.paramItems)) ]);
          }
      });
  };
  var addHoleIdsFromType = function (v) {
      if (v instanceof Language_Shape_Stlc_Syntax.ArrowType) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addHoleIdsFromType(v.value0.dom))(function () {
              return addHoleIdsFromType(v.value0.cod);
          });
      };
      if (v instanceof Language_Shape_Stlc_Syntax.DataType) {
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
      };
      if (v instanceof Language_Shape_Stlc_Syntax.HoleType) {
          return Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Record.modify({
              reflectSymbol: function () {
                  return "holeIds";
              }
          })()()(Language_Shape_Stlc_Rendering_Types["_holeIds"])(Data_OrderedSet.insert(Language_Shape_Stlc_Syntax.eqHoleId)(v.value0.holeId)));
      };
      throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Syntax (line 115, column 22 - line 120, column 90): " + [ v.constructor.name ]);
  };
  var renderTerm = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recTerm()()({
          lam: function (args) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addHoleIdsFromType(args.alpha))(function () {
                  return renderNode($$this)((function () {
                      var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                      return {
                          syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Lam(args.lam))),
                          label: new Data_Maybe.Just("Lam"),
                          gamma: v.gamma,
                          alpha: new Data_Maybe.Just(args.alpha),
                          visit: v.visit,
                          meta: v.meta,
                          actions: v.actions
                      };
                  })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.lam1 ]), renderTermBind($$this)(args.termBind), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.lam2 ]), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.body.meta)((Data_Newtype.unwrap()(args.lam.meta)).indentedBody)), renderTerm($$this)(args.body) ]);
              });
          },
          neu: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Neu(args.neu))),
                      label: new Data_Maybe.Just("Neu"),
                      gamma: v.gamma,
                      alpha: new Data_Maybe.Just(args.alpha),
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())((function () {
                  var $62 = Data_List.length(args.neu.argItems) === 0;
                  if ($62) {
                      return [ renderTermId($$this)(args.termId) ];
                  };
                  return [ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.lparen ]), renderTermId($$this)(args.termId), renderItems(Data_Functor.map(Data_List_Types.functorList)(renderArgItem($$this))(args.argItems)), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.rparen ]) ];
              })());
          },
          let_: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Let(args.let_))),
                      label: new Data_Maybe.Just("Let"),
                      gamma: v.gamma,
                      alpha: new Data_Maybe.Just(args.alpha),
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.let1 ]), renderTermBind($$this)(args.termBind), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.let2 ]), (function () {
                  var $63 = (Data_Newtype.unwrap()(args.let_.meta)).indentedSign;
                  if ($63) {
                      return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.sign.meta)(true)), renderType($$this)(args.sign) ]));
                  };
                  return renderType($$this)(args.sign);
              })(), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.let3 ]), (function () {
                  var $64 = (Data_Newtype.unwrap()(args.let_.meta)).indentedImpl;
                  if ($64) {
                      return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.impl.meta)(true)), renderTerm($$this)(args.impl) ]));
                  };
                  return renderTerm($$this)(args.impl);
              })(), (function () {
                  var $65 = (Data_Newtype.unwrap()(args.let_.meta)).indentedBody;
                  if ($65) {
                      return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.body.meta)(true)), renderTerm($$this)(args.body) ]));
                  };
                  return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.let4 ]), renderTerm($$this)(args.body) ]));
              })() ]);
          },
          buf: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Buf(args.buf))),
                      label: new Data_Maybe.Just("Buf"),
                      gamma: v.gamma,
                      alpha: new Data_Maybe.Just(args.alpha),
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.buf1 ]), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.impl.meta)((Data_Newtype.unwrap()(args.buf.meta)).indentedImpl)), renderTerm($$this)(args.impl), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.buf2 ]), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.sign.meta)((Data_Newtype.unwrap()(args.buf.meta)).indentedSign)), renderType($$this)(args.sign), (function () {
                  var $66 = (Data_Newtype.unwrap()(args.buf.meta)).indentedBody;
                  if ($66) {
                      return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.body.meta)(true)), renderTerm($$this)(args.body) ]));
                  };
                  return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.buf3 ]), renderTerm($$this)(args.body) ]));
              })() ]);
          },
          data_: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Data(args.data_))),
                      label: new Data_Maybe.Just("Data"),
                      gamma: v.gamma,
                      alpha: new Data_Maybe.Just(args.alpha),
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.data1 ]), renderTypeBind($$this)(args.typeBind), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.data2 ]), renderItems(Data_Functor.map(Data_List_Types.functorList)(renderSumItem($$this))(args.sumItems)), (function () {
                  var $67 = (Data_Newtype.unwrap()(args.data_.meta)).indentedBody;
                  if ($67) {
                      return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.body.meta)(true)), renderTerm($$this)(args.body) ]));
                  };
                  return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(Data_Array.concat)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.data3 ]), renderTerm($$this)(args.body) ]));
              })() ]);
          },
          match: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Match(args.match))),
                      label: new Data_Maybe.Just("Match"),
                      gamma: v.gamma,
                      alpha: new Data_Maybe.Just(args.alpha),
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.match1 ]), renderTerm($$this)(args.term), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.match2 ]), renderItems(Data_Functor.map(Data_List_Types.functorList)(renderCaseItem($$this))(args.caseItems)) ]);
          },
          hole: function (args) {
              return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity))(function (elems) {
                  return [ React_DOM.span([ React_DOM_Props.className("hole-container") ])(elems) ];
              })(renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: Data_Maybe.Just.create(Language_Shape_Stlc_Syntax.SyntaxTerm.create(new Language_Shape_Stlc_Syntax.Hole(args.hole))),
                      label: new Data_Maybe.Just("Hole"),
                      gamma: v.gamma,
                      alpha: new Data_Maybe.Just(args.alpha),
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ renderType($$this)({
                  type_: args.alpha,
                  gamma: args.gamma,
                  visit: Language_Shape_Stlc_Recursor_Index.nonVisit,
                  meta: args.meta
              }) ]));
          }
      });
  };
  var renderCaseItem = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recCaseItem()()()()({
          caseItem: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: v.syntax,
                      label: new Data_Maybe.Just("CaseItem"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newline(args.meta)((Data_Newtype.unwrap()(args.caseItem.meta)).indented)), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.caseItem1 ]), printTermId({
                  termId: args.termId,
                  gamma: args.gamma,
                  visit: Language_Shape_Stlc_Recursor_Index.nonVisit,
                  meta: args.meta
              }), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.caseItem2 ]), renderItems(Data_Functor.map(Data_List_Types.functorList)(renderTermBindItem($$this))(args.termBindItems)), Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))([ Language_Shape_Stlc_Rendering_Token.token.caseItem3 ]), renderTerm($$this)(args.body) ]);
          }
      });
  };
  var renderArgItem = function ($$this) {
      return Language_Shape_Stlc_Recursor_Action.recArgItem()()()()({
          argItem: function (args) {
              return renderNode($$this)((function () {
                  var v = Language_Shape_Stlc_Rendering_Types.makeNodeProps(args);
                  return {
                      syntax: v.syntax,
                      label: new Data_Maybe.Just("ArgItem"),
                      gamma: v.gamma,
                      alpha: v.alpha,
                      visit: v.visit,
                      meta: v.meta,
                      actions: v.actions
                  };
              })())([ Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Language_Shape_Stlc_Rendering_Token.newlineOrSpace(args.meta)((Data_Newtype.unwrap()(args.argItem.meta)).indented)), Language_Shape_Stlc_Rendering_Utilities.enParenIf(renderTerm($$this)(args.term))(Language_Shape_Stlc_Rendering_Utilities.requiresParenTerm(args.term.term)) ]);
          }
      });
  };
  var renderProgram = function ($$this) {
      return function __do() {
          var st = React.getState($$this)();
          var v = Language_Shape_Stlc_Rendering_Types.runM(renderTerm($$this)({
              term: st.term,
              gamma: Data_Default["default"](Language_Shape_Stlc_Context.defaultContext),
              alpha: st.type_,
              visit: Language_Shape_Stlc_Recursor_Index.nilVisit(st.mb_ix),
              meta: Data_Default["default"](Language_Shape_Stlc_Metacontext.defaultMetacontext)
          }));
          return new Data_Tuple.Tuple([ React_DOM.div([ React_DOM_Props.className("program"), React_DOM_Props.onClick(function (event) {
              return function __do() {
                  React_SyntheticEvent.stopPropagation(event)();
                  return React.modifyState($$this)(function (v1) {
                      return {
                          term: v1.term,
                          type_: v1.type_,
                          mb_ix: Data_Maybe.Nothing.value,
                          history: v1.history,
                          clipboard: v1.clipboard,
                          dragboard: v1.dragboard,
                          highlights: v1.highlights
                      };
                  })();
              };
          }) ])(v.value0) ], v.value1);
      };
  };
  exports["renderProgram"] = renderProgram;
  exports["renderType"] = renderType;
  exports["renderTypeBind"] = renderTypeBind;
  exports["renderTermId"] = renderTermId;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Rendering.Editor"] = $PS["Language.Shape.Stlc.Rendering.Editor"] || {};
  var exports = $PS["Language.Shape.Stlc.Rendering.Editor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Data_Array = $PS["Data.Array"];
  var Data_Default = $PS["Data.Default"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_OrderedMap = $PS["Data.OrderedMap"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Debug = $PS["Debug"];
  var Effect = $PS["Effect"];
  var KeyboardCursor = $PS["KeyboardCursor"];
  var Language_Shape_Stlc_ChAtIndex = $PS["Language.Shape.Stlc.ChAtIndex"];
  var Language_Shape_Stlc_Changes = $PS["Language.Shape.Stlc.Changes"];
  var Language_Shape_Stlc_CopyPasteBackend = $PS["Language.Shape.Stlc.CopyPasteBackend"];
  var Language_Shape_Stlc_Hole = $PS["Language.Shape.Stlc.Hole"];
  var Language_Shape_Stlc_Key = $PS["Language.Shape.Stlc.Key"];
  var Language_Shape_Stlc_Metadata = $PS["Language.Shape.Stlc.Metadata"];
  var Language_Shape_Stlc_Recursor_Action = $PS["Language.Shape.Stlc.Recursor.Action"];
  var Language_Shape_Stlc_Recursor_Index = $PS["Language.Shape.Stlc.Recursor.Index"];
  var Language_Shape_Stlc_Rendering_Syntax = $PS["Language.Shape.Stlc.Rendering.Syntax"];
  var Language_Shape_Stlc_Rendering_Token = $PS["Language.Shape.Stlc.Rendering.Token"];
  var Language_Shape_Stlc_Rendering_Utilities = $PS["Language.Shape.Stlc.Rendering.Utilities"];
  var Language_Shape_Stlc_Syntax = $PS["Language.Shape.Stlc.Syntax"];
  var Language_Shape_Stlc_Types = $PS["Language.Shape.Stlc.Types"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var Unsafe = $PS["Unsafe"];                
  var renderPalette = function ($$this) {
      return function (env) {
          var renderAction = function (action) {
              return [ React_DOM.div([ React_DOM_Props.className("action"), React_DOM_Props.onClick(function (event) {
                  return (Data_Newtype.unwrap()(action)).effect({
                      "this": $$this,
                      mb_event: Data_Maybe.Nothing.value,
                      trigger: Language_Shape_Stlc_Types.ActionTrigger_Click.value
                  });
              }) ])([ React_DOM.text(Data_Show.show(Language_Shape_Stlc_Types.showAction)(action)) ]) ];
          };
          return [ React_DOM.div([ React_DOM_Props.className("palette") ])([ React_DOM.div([ React_DOM_Props.className("header") ])([ React_DOM.text("Palette") ]), React_DOM.div([ React_DOM_Props.className("actions") ])(Data_Array.concat(Data_Functor.map(Data_Functor.functorArray)(renderAction)(env.actions))) ]) ];
      };
  };
  var renderEnvironment = function ($$this) {
      return function (env) {
          var renderContext = function (gamma) {
              var renderVarType = function (termId) {
                  var type_ = Data_OrderedMap["lookup''"](Language_Shape_Stlc_Syntax.ordTermId)("renderVarType.type_")(termId)((Data_Newtype.unwrap()(gamma)).varTypes);
                  return React_DOM.span([ React_DOM_Props.className("context-varType") ])(Data_Array.concat([ [ React_DOM.span([ React_DOM_Props.className("context-varType-var"), React_DOM_Props.onClick(function (event) {
                      var v = Language_Shape_Stlc_CopyPasteBackend.fitsInHole(type_)(Unsafe.fromJust(env.alpha));
                      if (v instanceof Data_Maybe.Just) {
                          var term = Language_Shape_Stlc_CopyPasteBackend.createNeu(termId)(v.value0.value0);
                          return React.modifyState($$this)(function (st) {
                              return Data_Maybe.maybe(st)(Control_Category.identity(Control_Category.categoryFn))(Control_Bind.bind(Data_Maybe.bindMaybe)(Language_Shape_Stlc_Recursor_Action.applyChange({
                                  ix: Unsafe.fromJust(st.mb_ix),
                                  toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(term, Language_Shape_Stlc_Changes.NoChange.value)
                              })(st))(function (st1) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                      term: Language_Shape_Stlc_Hole.subTerm(v.value0.value1)(st1.term),
                                      type_: Language_Shape_Stlc_Hole.subType(v.value0.value1)(st1.type_),
                                      clipboard: st1.clipboard,
                                      dragboard: st1.dragboard,
                                      highlights: st1.highlights,
                                      history: st1.history,
                                      mb_ix: st1.mb_ix
                                  }))(function (st2) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(st2);
                                  });
                              }));
                          });
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                      };
                      throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Editor (line 204, column 25 - line 225, column 47): " + [ v.constructor.name ]);
                  }) ])(Data_Function.flip(Control_Monad_State.evalState)(env)(Language_Shape_Stlc_Rendering_Syntax.renderTermId($$this)({
                      termId: termId,
                      gamma: gamma,
                      visit: Language_Shape_Stlc_Recursor_Index.nonVisit,
                      meta: env.meta
                  }))) ], [ Language_Shape_Stlc_Rendering_Token.token.let2 ], [ React_DOM.span([ React_DOM_Props.className("context-varType-type") ])(Data_Function.flip(Control_Monad_State.evalState)(env)(Language_Shape_Stlc_Rendering_Syntax.renderType($$this)({
                      type_: type_,
                      gamma: gamma,
                      visit: Language_Shape_Stlc_Recursor_Index.nonVisit,
                      meta: env.meta
                  }))) ] ]));
              };
              var renderData = function (typeId) {
                  var data_ = Data_OrderedMap["lookup''"](Language_Shape_Stlc_Syntax.ordTypeId)("renderData.data_")(typeId)((Data_Newtype.unwrap()(gamma)).datas);
                  return React_DOM.span([ React_DOM_Props.className("context-data") ])(Data_Array.concat([ [ Language_Shape_Stlc_Rendering_Token.token.data1 ], [ React_DOM.span([ React_DOM_Props.onClick(function (event) {
                      if (env.syntax instanceof Data_Maybe.Just && (env.syntax.value0 instanceof Language_Shape_Stlc_Syntax.SyntaxType && env.syntax.value0.value0 instanceof Language_Shape_Stlc_Syntax.HoleType)) {
                          return React.modifyState($$this)(function (st) {
                              return Data_Maybe.maybe(st)(Control_Category.identity(Control_Category.categoryFn))((function () {
                                  var holeSub = Data_Map_Internal.singleton(env.syntax.value0.value0.value0.holeId)(new Language_Shape_Stlc_Syntax.DataType({
                                      typeId: typeId,
                                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultDataTypeMetadata)
                                  }));
                                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                      term: Language_Shape_Stlc_Hole.subTerm(holeSub)(st.term),
                                      type_: Language_Shape_Stlc_Hole.subType(holeSub)(st.type_),
                                      clipboard: st.clipboard,
                                      dragboard: st.dragboard,
                                      highlights: st.highlights,
                                      history: st.history,
                                      mb_ix: st.mb_ix
                                  });
                              })());
                          });
                      };
                      if (env.syntax instanceof Data_Maybe.Just && (env.syntax.value0 instanceof Language_Shape_Stlc_Syntax.SyntaxTerm && env.syntax.value0.value0 instanceof Language_Shape_Stlc_Syntax.Hole)) {
                          return function __do() {
                              var st = React.getState($$this)();
                              return Language_Shape_Stlc_Recursor_Action.doChange($$this)({
                                  ix: Unsafe.fromJust(st.mb_ix),
                                  toReplace: new Language_Shape_Stlc_ChAtIndex.ReplaceTerm(new Language_Shape_Stlc_Syntax.Match({
                                      typeId: typeId,
                                      term: new Language_Shape_Stlc_Syntax.Hole({
                                          meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                                      }),
                                      caseItems: Data_Functor.map(Data_List_Types.functorList)(function (sumItem) {
                                          return {
                                              termBindItems: Data_Functor.map(Data_List_Types.functorList)(function (v) {
                                                  return {
                                                      termBind: Language_Shape_Stlc_Syntax.freshTermBind(Data_Unit.unit),
                                                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultTermBindItemMetadata)
                                                  };
                                              })(sumItem.paramItems),
                                              body: new Language_Shape_Stlc_Syntax.Hole({
                                                  meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultHoleMetadata)
                                              }),
                                              meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultCaseItemMetadata)
                                          };
                                      })(data_.sumItems),
                                      meta: Data_Default["default"](Language_Shape_Stlc_Metadata.defaultMatchMetadata)
                                  }), Language_Shape_Stlc_Changes.NoChange.value)
                              })();
                          };
                      };
                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                  }) ])(Data_Function.flip(Control_Monad_State.evalState)(env)(Language_Shape_Stlc_Rendering_Syntax.renderTypeBind($$this)({
                      typeBind: data_.typeBind,
                      gamma: gamma,
                      visit: Language_Shape_Stlc_Recursor_Index.nonVisit,
                      meta: env.meta
                  }))) ] ]));
              };
              return [ React_DOM.div([ React_DOM_Props.className("context") ])([ React_DOM.div([ React_DOM_Props.className("context-datas") ])(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(renderData)(Data_List.reverse(Data_OrderedMap.keys((Data_Newtype.unwrap()(gamma)).datas))))), React_DOM.div([ React_DOM_Props.className("context-varTypes") ])(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(renderVarType)(Data_List.reverse(Data_OrderedMap.keys((Data_Newtype.unwrap()(gamma)).varTypes))))) ]) ];
          };
          return [ React_DOM.div([ React_DOM_Props.className("environment") ])(Data_Array.concat([ [ React_DOM.div([ React_DOM_Props.className("header") ])([ React_DOM.text("Context") ]) ], renderContext(env.gamma), Data_Array.concat(Language_Shape_Stlc_Rendering_Utilities.maybeArray(env.alpha)(function (alpha) {
              return Data_Array.concat([ [ React_DOM.div([ React_DOM_Props.className("environment-divider") ])([  ]) ], Data_Function.flip(Control_Monad_State.evalState)(env)(Language_Shape_Stlc_Rendering_Syntax.renderType($$this)({
                  type_: alpha,
                  gamma: env.gamma,
                  visit: Language_Shape_Stlc_Recursor_Index.nonVisit,
                  meta: env.meta
              })) ]);
          })) ])) ];
      };
  };
  var renderPanel = function ($$this) {
      return function (env) {
          return [ React_DOM.div([ React_DOM_Props.className("panel") ])(Data_Array.concat([ renderEnvironment($$this)(env), renderPalette($$this)(env) ])) ];
      };
  };
  var renderEditor = function ($$this) {
      var globalActions = [ {
          label: new Data_Maybe.Just("undo"),
          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.undo) ],
          effect: function (v) {
              return React.modifyState(v["this"])(function (st) {
                  var v1 = Data_Array.uncons(st.history);
                  if (v1 instanceof Data_Maybe.Just) {
                      return {
                          term: v1.value0.head.term,
                          type_: v1.value0.head.type_,
                          mb_ix: v1.value0.head.mb_ix,
                          history: v1.value0.tail,
                          clipboard: Data_Maybe.Nothing.value,
                          dragboard: Data_Maybe.Nothing.value,
                          highlights: st.highlights
                      };
                  };
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return st;
                  };
                  throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering.Editor (line 60, column 39 - line 70, column 30): " + [ v1.constructor.name ]);
              });
          }
      }, {
          label: new Data_Maybe.Just("stepCursorForwards"),
          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.cursorForwards) ],
          effect: function (actionEffect) {
              return function __do() {
                  Debug.traceM()(Effect.monadEffect)("stepCursorForwards")();
                  return React.modifyState($$this)(function (st) {
                      var mb_st = Control_Bind.bind(Data_Maybe.bindMaybe)(st.mb_ix)(function (ix) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(KeyboardCursor.stepCursorForwards(new Language_Shape_Stlc_Syntax.SyntaxTerm(st.term))(ix))(function (ix$prime) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                  mb_ix: new Data_Maybe.Just(ix$prime),
                                  clipboard: st.clipboard,
                                  dragboard: st.dragboard,
                                  highlights: st.highlights,
                                  history: st.history,
                                  term: st.term,
                                  type_: st.type_
                              });
                          });
                      });
                      return Data_Maybe.maybe(st)(Control_Category.identity(Control_Category.categoryFn))(mb_st);
                  })();
              };
          }
      }, {
          label: new Data_Maybe.Just("stepCursorBackwards"),
          triggers: [ new Language_Shape_Stlc_Types.ActionTrigger_Keypress(Language_Shape_Stlc_Key.keys.cursorBackwards) ],
          effect: function (actionEffect) {
              return function __do() {
                  Debug.traceM()(Effect.monadEffect)("stepCursorBackwards")();
                  return React.modifyState($$this)(function (st) {
                      var mb_st = Control_Bind.bind(Data_Maybe.bindMaybe)(st.mb_ix)(function (ix) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(KeyboardCursor.stepCursorBackwards(new Language_Shape_Stlc_Syntax.SyntaxTerm(st.term))(ix))(function (ix$prime) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                  mb_ix: new Data_Maybe.Just(ix$prime),
                                  clipboard: st.clipboard,
                                  dragboard: st.dragboard,
                                  highlights: st.highlights,
                                  history: st.history,
                                  term: st.term,
                                  type_: st.type_
                              });
                          });
                      });
                      return Data_Maybe.maybe(st)(Control_Category.identity(Control_Category.categoryFn))(mb_st);
                  })();
              };
          }
      } ];
      return function __do() {
          var v = Language_Shape_Stlc_Rendering_Syntax.renderProgram($$this)();
          var env1 = {
              actions: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value1.actions)(globalActions),
              alpha: v.value1.alpha,
              gamma: v.value1.gamma,
              holeIds: v.value1.holeIds,
              meta: v.value1.meta,
              syntax: v.value1.syntax
          };
          return new Data_Tuple.Tuple(env1, React_DOM.div([ React_DOM_Props.className("editor") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(renderPanel($$this)(env1))(v.value0)));
      };
  };
  exports["renderEditor"] = renderEditor;
})(PS);
(function(exports) {
  "use strict";

  exports.preventDefault = function (e) {
    return function () {
      return e.preventDefault();
    };
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var $foreign = $PS["Web.Event.Event"];
  exports["preventDefault"] = $foreign.preventDefault;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS);
(function(exports) {
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Language.Shape.Stlc.Rendering"] = $PS["Language.Shape.Stlc.Rendering"] || {};
  var exports = $PS["Language.Shape.Stlc.Rendering"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Unit = $PS["Data.Unit"];
  var Debug = $PS["Debug"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Language_Shape_Stlc_Event_KeyboardEvent = $PS["Language.Shape.Stlc.Event.KeyboardEvent"];
  var Language_Shape_Stlc_Initial = $PS["Language.Shape.Stlc.Initial"];
  var Language_Shape_Stlc_Rendering_Editor = $PS["Language.Shape.Stlc.Rendering.Editor"];
  var Language_Shape_Stlc_Rendering_Types = $PS["Language.Shape.Stlc.Rendering.Types"];
  var React = $PS["React"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var programComponent = function ($$this) {
      return function __do() {
          var renderEnvironmentRef = Effect_Ref["new"](Language_Shape_Stlc_Rendering_Types.emptyRenderEnvironment)();
          var state = {
              mb_ix: Data_Maybe.Nothing.value,
              term: Language_Shape_Stlc_Initial.init1.value0,
              type_: Language_Shape_Stlc_Initial.init1.value1,
              history: Data_Monoid.mempty(Data_Monoid.monoidArray),
              clipboard: Data_Maybe.Nothing.value,
              dragboard: Data_Maybe.Nothing.value,
              highlights: Data_Monoid.mempty(Data_Monoid.monoidArray)
          };
          var render = function __do() {
              var st = React.getState($$this)();
              var v = Language_Shape_Stlc_Rendering_Editor.renderEditor($$this)();
              Effect_Ref.write(v.value0)(renderEnvironmentRef)();
              return v.value1;
          };
          var keyboardEventHandler = function (event) {
              return function __do() {
                  Debug.traceM()(Effect.monadEffect)(event)();
                  var key = Language_Shape_Stlc_Event_KeyboardEvent.eventKey(event);
                  var renEnv = Effect_Ref.read(renderEnvironmentRef)();
                  var v = Language_Shape_Stlc_Event_KeyboardEvent.handleKey(renEnv)(event);
                  if (v instanceof Data_Maybe.Just) {
                      Web_Event_Event.preventDefault(event)();
                      return v.value0.value1.effect({
                          "this": $$this,
                          mb_event: new Data_Maybe.Just(event),
                          trigger: v.value0.value0
                      })();
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Language.Shape.Stlc.Rendering (line 63, column 7 - line 67, column 29): " + [ v.constructor.name ]);
              };
          };
          var componentDidMount = function __do() {
              Effect_Console.log("componentDidMount")();
              var win = Web_HTML.window();
              var listener = Web_Event_EventTarget.eventListener(keyboardEventHandler)();
              return Web_Event_EventTarget.addEventListener("keydown")(listener)(false)(Web_HTML_Window.toEventTarget(win))();
          };
          return {
              state: state,
              render: render,
              componentDidMount: componentDidMount
          };
      };
  };
  var programClass = React.component()("Program")(programComponent);
  exports["programClass"] = programClass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["App"] = $PS["App"] || {};
  var exports = $PS["App"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Language_Shape_Stlc_Rendering = $PS["Language.Shape.Stlc.Rendering"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var appComponent = function ($$this) {
      var state = {};
      var render = function (st) {
          return React_DOM.div([ React_DOM_Props.className("app") ])([ React.createLeafElement()(Language_Shape_Stlc_Rendering.programClass)({}) ]);
      };
      return Control_Applicative.pure(Effect.applicativeEffect)({
          state: state,
          render: Data_Functor.map(Effect.functorEffect)(render)(React.getState($$this))
      });
  };
  var appClass = React.component()("app")(appComponent);
  exports["appClass"] = appClass;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";          

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS);
(function(exports) {
  "use strict";
  var ReactDOM =require("react-dom");
  var ReactDOMServer =require("react-dom/server"); 

  exports.renderImpl = function (element, container) {
    return ReactDOM.render(element, container);
  };
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["ReactDOM"] = $PS["ReactDOM"] || {};
  var exports = $PS["ReactDOM"];
  var $foreign = $PS["ReactDOM"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];                                                                  
  var render = function (rEl) {
      return function (el) {
          return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)(function () {
              return $foreign.renderImpl(rEl, el);
          });
      };
  };
  exports["render"] = render;
})(PS);
(function(exports) {
  "use strict";

  exports._getElementById = function (id) {
    return function (node) {
      return function () {
        return node.getElementById(id);
      };
    };
  };
})(PS["Web.DOM.NonElementParentNode"] = PS["Web.DOM.NonElementParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Web.DOM.NonElementParentNode"] = $PS["Web.DOM.NonElementParentNode"] || {};
  var exports = $PS["Web.DOM.NonElementParentNode"];
  var $foreign = $PS["Web.DOM.NonElementParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];                
  var getElementById = function (eid) {
      var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $1 = $foreign["_getElementById"](eid);
      return function ($2) {
          return $0($1($2));
      };
  };
  exports["getElementById"] = getElementById;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];     
  var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNonElementParentNode"] = toNonElementParentNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var App = $PS["App"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var React = $PS["React"];
  var ReactDOM = $PS["ReactDOM"];
  var Web_DOM_NonElementParentNode = $PS["Web.DOM.NonElementParentNode"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var main = Data_Functor["void"](Effect.functorEffect)(function __do() {
      var window = Web_HTML.window();
      var document = Web_HTML_Window.document(window)();
      var node = Web_HTML_HTMLDocument.toNonElementParentNode(document);
      var element = (function __do() {
          var element = Web_DOM_NonElementParentNode.getElementById("main")(node)();
          return Data_Maybe.fromJust()(element);
      })();
      return Data_Functor["void"](Effect.functorEffect)(ReactDOM.render(React.createLeafElement()(App.appClass)({}))(element))();
  });
  exports["main"] = main;
})(PS);
PS["Main"].main();
//# sourceMappingURL=app.js.map
